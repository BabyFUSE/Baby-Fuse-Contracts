{
	"id": "02ecf17ab07d54e9922776354de34d61",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.2;\r\n\r\nimport \"./IERC20.sol\";\r\nimport \"./IERC20Metadata.sol\";\r\nimport \"./Context.sol\";\r\nimport \"./SafeMath.sol\";\r\n\r\n/**\r\n * @dev Implementation of the {IERC20} interface.\r\n *\r\n * This implementation is agnostic to the way tokens are created. This means\r\n * that a supply mechanism has to be added in a derived contract using {_mint}.\r\n * For a generic mechanism see {ERC20PresetMinterPauser}.\r\n *\r\n * TIP: For a detailed writeup see our guide\r\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\r\n * to implement supply mechanisms].\r\n *\r\n * We have followed general OpenZeppelin guidelines: functions revert instead\r\n * of returning `false` on failure. This behavior is nonetheless conventional\r\n * and does not conflict with the expectations of ERC20 applications.\r\n *\r\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\r\n * This allows applications to reconstruct the allowance for all accounts just\r\n * by listening to said events. Other implementations of the EIP may not emit\r\n * these events, as it isn't required by the specification.\r\n *\r\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\r\n * functions have been added to mitigate the well-known issues around setting\r\n * allowances. See {IERC20-approve}.\r\n */\r\ncontract ERC20 is Context, IERC20, IERC20Metadata {\r\n    using SafeMath for uint256;\r\n\r\n    mapping(address => uint256) private _balances;\r\n\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n\r\n    /**\r\n     * @dev Sets the values for {name} and {symbol}.\r\n     *\r\n     * The default value of {decimals} is 18. To select a different value for\r\n     * {decimals} you should overload it.\r\n     *\r\n     * All two of these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    constructor(string memory name_, string memory symbol_) public {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\r\n     * overridden;\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IERC20-balanceOf} and {IERC20-transfer}.\r\n     */\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return 18;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-totalSupply}.\r\n     */\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-balanceOf}.\r\n     */\r\n    function balanceOf(address account) public view virtual override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `recipient` cannot be the zero address.\r\n     * - the caller must have a balance of at least `amount`.\r\n     */\r\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-allowance}.\r\n     */\r\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-approve}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {ERC20}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `sender` and `recipient` cannot be the zero address.\r\n     * - `sender` must have a balance of at least `amount`.\r\n     * - the caller must have allowance for ``sender``'s tokens of at least\r\n     * `amount`.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) public virtual override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `spender` must have allowance for the caller of at least\r\n     * `subtractedValue`.\r\n     */\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\r\n     *\r\n     * This is internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `sender` cannot be the zero address.\r\n     * - `recipient` cannot be the zero address.\r\n     * - `sender` must have a balance of at least `amount`.\r\n     */\r\n    function _transfer(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\r\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\r\n\r\n        _beforeTokenTransfer(sender, recipient, amount);\r\n\r\n        _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\r\n        _balances[recipient] = _balances[recipient].add(amount);\r\n        emit Transfer(sender, recipient, amount);\r\n    }\r\n\r\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n     * the total supply.\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     */\r\n    function _mint(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: mint to the zero address\");\r\n\r\n        _beforeTokenTransfer(address(0), account, amount);\r\n\r\n        _totalSupply = _totalSupply.add(amount);\r\n        _balances[account] = _balances[account].add(amount);\r\n        emit Transfer(address(0), account, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from `account`, reducing the\r\n     * total supply.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     * - `account` must have at least `amount` tokens.\r\n     */\r\n    function _burn(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: burn from the zero address\");\r\n\r\n        _beforeTokenTransfer(account, address(0), amount);\r\n\r\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\r\n        _totalSupply = _totalSupply.sub(amount);\r\n        emit Transfer(account, address(0), amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\r\n     *\r\n     * This internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * will be to transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _beforeTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n}\r\n"
			},
			"SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.2;\r\n\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts with custom message when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n"
			},
			"Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.2;\r\n\r\n/*\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n}\r\n"
			},
			"IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.2;\r\n\r\nimport \"./IERC20.sol\";\r\n\r\n/**\r\n * @dev Interface for the optional metadata functions from the ERC20 standard.\r\n *\r\n * _Available since v4.1._\r\n */\r\ninterface IERC20Metadata is IERC20 {\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the decimals places of the token.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n}\r\n"
			},
			"IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.2;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0x2bfee1b62dd98b0558681cb9428ef6ac972433cb68faaacc33a70a8bd221fadc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1754beb271b4f01fb27a92d7aadc97b588a7d4c3dc4baac35b9a70408f899ccb\",\"dweb:/ipfs/QmRf3v2AFo8utJGcTJmwPDqvWjLkXajZYo3yMTCgpWYKuz\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ERC20.sol\":1358:10780  contract ERC20 is Context, IERC20, IERC20Metadata {\r... */\n  mstore(0x40, 0x80)\n    /* \"ERC20.sol\":1987:2110  constructor(string memory name_, string memory symbol_) public {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x40\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  swap1\n  dup4\n  add\n  swap1\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  dup3\n  mload\n  0x0100000000\n  dup2\n  gt\n  dup3\n  dup3\n  add\n  dup9\n  lt\n  or\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  dup3\n  mstore\n  pop\n  dup2\n  mload\n  0x20\n  swap2\n  dup3\n  add\n  swap3\n  swap1\n  swap2\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_6:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_8\n  jumpi\n  dup2\n  dup2\n  add\n  mload\n  dup4\n  dup3\n  add\n  mstore\n  0x20\n  add\n  jump(tag_6)\ntag_8:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_10\n  jumpi\n  0x00\n  dup1\n  revert\ntag_10:\n  swap1\n  dup4\n  add\n  swap1\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  0x00\n  dup1\n  revert\ntag_11:\n  dup3\n  mload\n  0x0100000000\n  dup2\n  gt\n  dup3\n  dup3\n  add\n  dup9\n  lt\n  or\n  iszero\n  tag_12\n  jumpi\n  0x00\n  dup1\n  revert\ntag_12:\n  dup3\n  mstore\n  pop\n  dup2\n  mload\n  0x20\n  swap2\n  dup3\n  add\n  swap3\n  swap1\n  swap2\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_13:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_15\n  jumpi\n  dup2\n  dup2\n  add\n  mload\n  dup4\n  dup3\n  add\n  mstore\n  0x20\n  add\n  jump(tag_13)\ntag_15:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_16\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_16:\n  pop\n  0x40\n  mstore\n  pop\n  pop\n    /* \"ERC20.sol\":2061:2074  _name = name_ */\n  dup3\n  mload\n  tag_19\n  swap2\n  pop\n    /* \"ERC20.sol\":2061:2066  _name */\n  0x03\n  swap1\n    /* \"ERC20.sol\":2061:2074  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n    /* \"ERC20.sol\":2085:2102  _symbol = symbol_ */\n  dup1\n  mload\n  tag_21\n  swap1\n    /* \"ERC20.sol\":2085:2092  _symbol */\n  0x04\n  swap1\n    /* \"ERC20.sol\":2085:2102  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_20\n  jump\t// in\ntag_21:\n  pop\n    /* \"ERC20.sol\":1987:2110  constructor(string memory name_, string memory symbol_) public {\r... */\n  pop\n  pop\n    /* \"ERC20.sol\":1358:10780  contract ERC20 is Context, IERC20, IERC20Metadata {\r... */\n  jump(tag_22)\ntag_20:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_24\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_26)\ntag_24:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_26\n  jumpi\n  swap2\n  dup3\n  add\ntag_25:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_26\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_25)\ntag_26:\n  pop\n  tag_27\n  swap3\n  swap2\n  pop\n  tag_28\n  jump\t// in\ntag_27:\n  pop\n  swap1\n  jump\t// out\ntag_28:\ntag_29:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_27\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_29)\ntag_22:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC20.sol\":1358:10780  contract ERC20 is Context, IERC20, IERC20Metadata {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ERC20.sol\":2180:2280  function name() public view virtual override returns (string memory) {\r... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_17:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_19\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_17)\n    tag_19:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_20\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_20:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":4347:4516  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_4:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_23\n      jump\t// in\n    tag_21:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ERC20.sol\":3300:3408  function totalSupply() public view virtual override returns (uint256) {\r... */\n    tag_5:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ERC20.sol\":4998:5353  function transferFrom(\r... */\n    tag_6:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_28\n      jump\t// in\n        /* \"ERC20.sol\":3142:3235  function decimals() public view virtual override returns (uint8) {\r... */\n    tag_7:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ERC20.sol\":5762:5980  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r... */\n    tag_8:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_33\n      jump\t// in\n        /* \"ERC20.sol\":3471:3598  function balanceOf(address account) public view virtual override returns (uint256) {\r... */\n    tag_9:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_36\n      jump\t// in\n        /* \"ERC20.sol\":2399:2503  function symbol() public view virtual override returns (string memory) {\r... */\n    tag_10:\n      tag_15\n      tag_38\n      jump\t// in\n        /* \"ERC20.sol\":6483:6752  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r... */\n    tag_11:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_45\n      jump\t// in\n        /* \"ERC20.sol\":3811:3986  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_12:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_48\n      jump\t// in\n        /* \"ERC20.sol\":4049:4200  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n    tag_13:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_51\n      jump\t// in\n        /* \"ERC20.sol\":2180:2280  function name() public view virtual override returns (string memory) {\r... */\n    tag_16:\n        /* \"ERC20.sol\":2267:2272  _name */\n      0x03\n        /* \"ERC20.sol\":2260:2272  return _name */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"ERC20.sol\":2234:2247  string memory */\n      0x60\n      swap4\n        /* \"ERC20.sol\":2260:2272  return _name */\n      swap1\n      swap3\n        /* \"ERC20.sol\":2267:2272  _name */\n      swap1\n      swap2\n        /* \"ERC20.sol\":2260:2272  return _name */\n      dup4\n      add\n        /* \"ERC20.sol\":2267:2272  _name */\n      dup3\n        /* \"ERC20.sol\":2260:2272  return _name */\n      dup3\n      dup1\n      iszero\n      tag_53\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_54\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_53)\n    tag_54:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_55:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_55\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_53:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC20.sol\":2180:2280  function name() public view virtual override returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":4347:4516  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_23:\n        /* \"ERC20.sol\":4430:4434  bool */\n      0x00\n        /* \"ERC20.sol\":4447:4486  _approve(_msgSender(), spender, amount) */\n      tag_57\n        /* \"ERC20.sol\":4456:4468  _msgSender() */\n      tag_58\n        /* \"ERC20.sol\":4456:4466  _msgSender */\n      tag_59\n        /* \"ERC20.sol\":4456:4468  _msgSender() */\n      jump\t// in\n    tag_58:\n        /* \"ERC20.sol\":4470:4477  spender */\n      dup5\n        /* \"ERC20.sol\":4479:4485  amount */\n      dup5\n        /* \"ERC20.sol\":4447:4455  _approve */\n      tag_60\n        /* \"ERC20.sol\":4447:4486  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_57:\n      pop\n        /* \"ERC20.sol\":4504:4508  true */\n      0x01\n        /* \"ERC20.sol\":4347:4516  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":3300:3408  function totalSupply() public view virtual override returns (uint256) {\r... */\n    tag_25:\n        /* \"ERC20.sol\":3388:3400  _totalSupply */\n      sload(0x02)\n        /* \"ERC20.sol\":3300:3408  function totalSupply() public view virtual override returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":4998:5353  function transferFrom(\r... */\n    tag_28:\n        /* \"ERC20.sol\":5138:5142  bool */\n      0x00\n        /* \"ERC20.sol\":5155:5191  _transfer(sender, recipient, amount) */\n      tag_63\n        /* \"ERC20.sol\":5165:5171  sender */\n      dup5\n        /* \"ERC20.sol\":5173:5182  recipient */\n      dup5\n        /* \"ERC20.sol\":5184:5190  amount */\n      dup5\n        /* \"ERC20.sol\":5155:5164  _transfer */\n      tag_64\n        /* \"ERC20.sol\":5155:5191  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_63:\n        /* \"ERC20.sol\":5202:5323  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_65\n        /* \"ERC20.sol\":5211:5217  sender */\n      dup5\n        /* \"ERC20.sol\":5219:5231  _msgSender() */\n      tag_66\n        /* \"ERC20.sol\":5219:5229  _msgSender */\n      tag_59\n        /* \"ERC20.sol\":5219:5231  _msgSender() */\n      jump\t// in\n    tag_66:\n        /* \"ERC20.sol\":5233:5322  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_67\n        /* \"ERC20.sol\":5271:5277  amount */\n      dup6\n        /* \"ERC20.sol\":5233:5322  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5233:5252  _allowances[sender] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":5233:5244  _allowances */\n      0x01\n        /* \"ERC20.sol\":5233:5252  _allowances[sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"ERC20.sol\":5253:5265  _msgSender() */\n      tag_68\n        /* \"ERC20.sol\":5253:5263  _msgSender */\n      tag_59\n        /* \"ERC20.sol\":5253:5265  _msgSender() */\n      jump\t// in\n    tag_68:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5233:5266  _allowances[sender][_msgSender()] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      swap2\n        /* \"ERC20.sol\":5233:5322  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap1\n        /* \"ERC20.sol\":5233:5270  _allowances[sender][_msgSender()].sub */\n      tag_69\n        /* \"ERC20.sol\":5233:5322  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      jump\t// in\n    tag_67:\n        /* \"ERC20.sol\":5202:5210  _approve */\n      tag_60\n        /* \"ERC20.sol\":5202:5323  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_65:\n      pop\n        /* \"ERC20.sol\":5341:5345  true */\n      0x01\n        /* \"ERC20.sol\":4998:5353  function transferFrom(\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":3142:3235  function decimals() public view virtual override returns (uint8) {\r... */\n    tag_30:\n        /* \"ERC20.sol\":3225:3227  18 */\n      0x12\n        /* \"ERC20.sol\":3142:3235  function decimals() public view virtual override returns (uint8) {\r... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":5762:5980  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r... */\n    tag_33:\n        /* \"ERC20.sol\":5850:5854  bool */\n      0x00\n        /* \"ERC20.sol\":5867:5950  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_57\n        /* \"ERC20.sol\":5876:5888  _msgSender() */\n      tag_73\n        /* \"ERC20.sol\":5876:5886  _msgSender */\n      tag_59\n        /* \"ERC20.sol\":5876:5888  _msgSender() */\n      jump\t// in\n    tag_73:\n        /* \"ERC20.sol\":5890:5897  spender */\n      dup5\n        /* \"ERC20.sol\":5899:5949  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_67\n        /* \"ERC20.sol\":5938:5948  addedValue */\n      dup6\n        /* \"ERC20.sol\":5899:5910  _allowances */\n      0x01\n        /* \"ERC20.sol\":5899:5924  _allowances[_msgSender()] */\n      0x00\n        /* \"ERC20.sol\":5911:5923  _msgSender() */\n      tag_75\n        /* \"ERC20.sol\":5911:5921  _msgSender */\n      tag_59\n        /* \"ERC20.sol\":5911:5923  _msgSender() */\n      jump\t// in\n    tag_75:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5899:5924  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"ERC20.sol\":5899:5933  _allowances[_msgSender()][spender] */\n      swap2\n      dup13\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"ERC20.sol\":5899:5937  _allowances[_msgSender()][spender].add */\n      tag_76\n        /* \"ERC20.sol\":5899:5949  _allowances[_msgSender()][spender].add(addedValue) */\n      jump\t// in\n        /* \"ERC20.sol\":3471:3598  function balanceOf(address account) public view virtual override returns (uint256) {\r... */\n    tag_36:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":3572:3590  _balances[account] */\n      and\n        /* \"ERC20.sol\":3545:3552  uint256 */\n      0x00\n        /* \"ERC20.sol\":3572:3590  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"ERC20.sol\":3471:3598  function balanceOf(address account) public view virtual override returns (uint256) {\r... */\n      jump\t// out\n        /* \"ERC20.sol\":2399:2503  function symbol() public view virtual override returns (string memory) {\r... */\n    tag_38:\n        /* \"ERC20.sol\":2488:2495  _symbol */\n      0x04\n        /* \"ERC20.sol\":2481:2495  return _symbol */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"ERC20.sol\":2455:2468  string memory */\n      0x60\n      swap4\n        /* \"ERC20.sol\":2481:2495  return _symbol */\n      swap1\n      swap3\n        /* \"ERC20.sol\":2488:2495  _symbol */\n      swap1\n      swap2\n        /* \"ERC20.sol\":2481:2495  return _symbol */\n      dup4\n      add\n        /* \"ERC20.sol\":2488:2495  _symbol */\n      dup3\n        /* \"ERC20.sol\":2481:2495  return _symbol */\n      dup3\n      dup1\n      iszero\n      tag_53\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_54\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_53)\n        /* \"ERC20.sol\":6483:6752  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r... */\n    tag_45:\n        /* \"ERC20.sol\":6576:6580  bool */\n      0x00\n        /* \"ERC20.sol\":6593:6722  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_57\n        /* \"ERC20.sol\":6602:6614  _msgSender() */\n      tag_84\n        /* \"ERC20.sol\":6602:6612  _msgSender */\n      tag_59\n        /* \"ERC20.sol\":6602:6614  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"ERC20.sol\":6616:6623  spender */\n      dup5\n        /* \"ERC20.sol\":6625:6721  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_67\n        /* \"ERC20.sol\":6664:6679  subtractedValue */\n      dup6\n        /* \"ERC20.sol\":6625:6721  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"ERC20.sol\":6625:6636  _allowances */\n      0x01\n        /* \"ERC20.sol\":6625:6650  _allowances[_msgSender()] */\n      0x00\n        /* \"ERC20.sol\":6637:6649  _msgSender() */\n      tag_86\n        /* \"ERC20.sol\":6637:6647  _msgSender */\n      tag_59\n        /* \"ERC20.sol\":6637:6649  _msgSender() */\n      jump\t// in\n    tag_86:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":6625:6650  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"ERC20.sol\":6625:6659  _allowances[_msgSender()][spender] */\n      swap2\n      dup14\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"ERC20.sol\":6625:6721  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap1\n        /* \"ERC20.sol\":6625:6663  _allowances[_msgSender()][spender].sub */\n      tag_69\n        /* \"ERC20.sol\":6625:6721  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      jump\t// in\n        /* \"ERC20.sol\":3811:3986  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_48:\n        /* \"ERC20.sol\":3897:3901  bool */\n      0x00\n        /* \"ERC20.sol\":3914:3956  _transfer(_msgSender(), recipient, amount) */\n      tag_57\n        /* \"ERC20.sol\":3924:3936  _msgSender() */\n      tag_89\n        /* \"ERC20.sol\":3924:3934  _msgSender */\n      tag_59\n        /* \"ERC20.sol\":3924:3936  _msgSender() */\n      jump\t// in\n    tag_89:\n        /* \"ERC20.sol\":3938:3947  recipient */\n      dup5\n        /* \"ERC20.sol\":3949:3955  amount */\n      dup5\n        /* \"ERC20.sol\":3914:3923  _transfer */\n      tag_64\n        /* \"ERC20.sol\":3914:3956  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"ERC20.sol\":4049:4200  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n    tag_51:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":4165:4183  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"ERC20.sol\":4138:4145  uint256 */\n      0x00\n        /* \"ERC20.sol\":4165:4183  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":4165:4176  _allowances */\n      0x01\n        /* \"ERC20.sol\":4165:4183  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":4165:4192  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"ERC20.sol\":4049:4200  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n      jump\t// out\n        /* \"Context.sol\":601:699  function _msgSender() internal view virtual returns (address) {\r... */\n    tag_59:\n        /* \"Context.sol\":681:691  msg.sender */\n      caller\n        /* \"Context.sol\":601:699  function _msgSender() internal view virtual returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":9669:10049  function _approve(\r... */\n    tag_60:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":9805:9824  owner != address(0) */\n      dup4\n      and\n        /* \"ERC20.sol\":9797:9865  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":9884:9905  spender != address(0) */\n      dup3\n      and\n        /* \"ERC20.sol\":9876:9944  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_94:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":9957:9975  _allowances[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ERC20.sol\":9957:9968  _allowances */\n      0x01\n        /* \"ERC20.sol\":9957:9975  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":9957:9984  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ERC20.sol\":9957:9993  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"ERC20.sol\":10009:10041  Approval(owner, spender, amount) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"ERC20.sol\":9669:10049  function _approve(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":7242:7815  function _transfer(\r... */\n    tag_64:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":7382:7402  sender != address(0) */\n      dup4\n      and\n        /* \"ERC20.sol\":7374:7444  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_96:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":7463:7486  recipient != address(0) */\n      dup3\n      and\n        /* \"ERC20.sol\":7455:7526  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"ERC20.sol\":7539:7586  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_98\n        /* \"ERC20.sol\":7560:7566  sender */\n      dup4\n        /* \"ERC20.sol\":7568:7577  recipient */\n      dup4\n        /* \"ERC20.sol\":7579:7585  amount */\n      dup4\n        /* \"ERC20.sol\":7539:7559  _beforeTokenTransfer */\n      tag_99\n        /* \"ERC20.sol\":7539:7586  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_98:\n        /* \"ERC20.sol\":7619:7690  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"ERC20.sol\":7641:7647  amount */\n      dup2\n        /* \"ERC20.sol\":7619:7690  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":7619:7636  _balances[sender] */\n      dup7\n      and\n        /* \"ERC20.sol\":7619:7628  _balances */\n      0x00\n        /* \"ERC20.sol\":7619:7636  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"ERC20.sol\":7619:7690  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap1\n        /* \"ERC20.sol\":7619:7640  _balances[sender].sub */\n      tag_69\n        /* \"ERC20.sol\":7619:7690  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      jump\t// in\n    tag_100:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":7599:7616  _balances[sender] */\n      dup1\n      dup6\n      and\n        /* \"ERC20.sol\":7599:7608  _balances */\n      0x00\n        /* \"ERC20.sol\":7599:7616  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"ERC20.sol\":7599:7690  _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"ERC20.sol\":7724:7744  _balances[recipient] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"ERC20.sol\":7724:7756  _balances[recipient].add(amount) */\n      tag_101\n      swap1\n        /* \"ERC20.sol\":7749:7755  amount */\n      dup3\n        /* \"ERC20.sol\":7724:7748  _balances[recipient].add */\n      tag_76\n        /* \"ERC20.sol\":7724:7756  _balances[recipient].add(amount) */\n      jump\t// in\n    tag_101:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":7701:7721  _balances[recipient] */\n      dup1\n      dup5\n      and\n        /* \"ERC20.sol\":7701:7710  _balances */\n      0x00\n        /* \"ERC20.sol\":7701:7721  _balances[recipient] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ERC20.sol\":7701:7756  _balances[recipient] = _balances[recipient].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"ERC20.sol\":7772:7807  Transfer(sender, recipient, amount) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"ERC20.sol\":7701:7721  _balances[recipient] */\n      swap2\n      swap4\n        /* \"ERC20.sol\":7772:7807  Transfer(sender, recipient, amount) */\n      swap3\n      dup8\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"ERC20.sol\":7242:7815  function _transfer(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SafeMath.sol\":1228:1420  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n    tag_69:\n        /* \"SafeMath.sol\":1314:1321  uint256 */\n      0x00\n        /* \"SafeMath.sol\":1350:1362  errorMessage */\n      dup2\n        /* \"SafeMath.sol\":1342:1348  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"SafeMath.sol\":1334:1363  require(b <= a, errorMessage) */\n      tag_103\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_104:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_106\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_104)\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_107\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_107:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n      pop\n      pop\n      pop\n        /* \"SafeMath.sol\":1386:1391  a - b */\n      swap1\n      sub\n      swap1\n        /* \"SafeMath.sol\":1228:1420  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n      jump\t// out\n        /* \"SafeMath.sol\":325:506  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_76:\n        /* \"SafeMath.sol\":383:390  uint256 */\n      0x00\n        /* \"SafeMath.sol\":415:420  a + b */\n      dup3\n      dup3\n      add\n        /* \"SafeMath.sol\":439:445  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"SafeMath.sol\":431:477  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_109\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_109:\n        /* \"SafeMath.sol\":497:498  c */\n      swap4\n        /* \"SafeMath.sol\":325:506  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":10652:10777  function _beforeTokenTransfer(\r... */\n    tag_99:\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa2646970667358221220c6cb455ffbde82515ca860e1535d67868c1a4eaf90faccc06fc0a48716824e6164736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405162000c5138038062000c518339818101604052604081101561003557600080fd5b810190808051604051939291908464010000000082111561005557600080fd5b90830190602082018581111561006a57600080fd5b825164010000000081118282018810171561008457600080fd5b82525081516020918201929091019080838360005b838110156100b1578181015183820152602001610099565b50505050905090810190601f1680156100de5780820380516001836020036101000a031916815260200191505b506040526020018051604051939291908464010000000082111561010157600080fd5b90830190602082018581111561011657600080fd5b825164010000000081118282018810171561013057600080fd5b82525081516020918201929091019080838360005b8381101561015d578181015183820152602001610145565b50505050905090810190601f16801561018a5780820380516001836020036101000a031916815260200191505b50604052505082516101a4915060039060208501906101c0565b5080516101b89060049060208401906101c0565b505050610253565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061020157805160ff191683800117855561022e565b8280016001018555821561022e579182015b8281111561022e578251825591602001919060010190610213565b5061023a92915061023e565b5090565b5b8082111561023a576000815560010161023f565b6109ee80620002636000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063395093511161007157806339509351146101d957806370a082311461020557806395d89b411461022b578063a457c2d714610233578063a9059cbb1461025f578063dd62ed3e1461028b576100a9565b806306fdde03146100ae578063095ea7b31461012b57806318160ddd1461016b57806323b872dd14610185578063313ce567146101bb575b600080fd5b6100b66102b9565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100f05781810151838201526020016100d8565b50505050905090810190601f16801561011d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101576004803603604081101561014157600080fd5b506001600160a01b03813516906020013561034f565b604080519115158252519081900360200190f35b61017361036c565b60408051918252519081900360200190f35b6101576004803603606081101561019b57600080fd5b506001600160a01b03813581169160208101359091169060400135610372565b6101c36103f9565b6040805160ff9092168252519081900360200190f35b610157600480360360408110156101ef57600080fd5b506001600160a01b0381351690602001356103fe565b6101736004803603602081101561021b57600080fd5b50356001600160a01b031661044c565b6100b6610467565b6101576004803603604081101561024957600080fd5b506001600160a01b0381351690602001356104c8565b6101576004803603604081101561027557600080fd5b506001600160a01b038135169060200135610530565b610173600480360360408110156102a157600080fd5b506001600160a01b0381358116916020013516610544565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b820191906000526020600020905b81548152906001019060200180831161032857829003601f168201915b5050505050905090565b600061036361035c61056f565b8484610573565b50600192915050565b60025490565b600061037f84848461065f565b6103ef8461038b61056f565b6103ea85604051806060016040528060288152602001610923602891396001600160a01b038a166000908152600160205260408120906103c961056f565b6001600160a01b0316815260208101919091526040016000205491906107ba565b610573565b5060019392505050565b601290565b600061036361040b61056f565b846103ea856001600061041c61056f565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610851565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b60006103636104d561056f565b846103ea8560405180606001604052806025815260200161099460259139600160006104ff61056f565b6001600160a01b03908116825260208083019390935260409182016000908120918d168152925290205491906107ba565b600061036361053d61056f565b848461065f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166105b85760405162461bcd60e51b81526004018080602001828103825260248152602001806109706024913960400191505060405180910390fd5b6001600160a01b0382166105fd5760405162461bcd60e51b81526004018080602001828103825260228152602001806108db6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166106a45760405162461bcd60e51b815260040180806020018281038252602581526020018061094b6025913960400191505060405180910390fd5b6001600160a01b0382166106e95760405162461bcd60e51b81526004018080602001828103825260238152602001806108b86023913960400191505060405180910390fd5b6106f48383836108b2565b610731816040518060600160405280602681526020016108fd602691396001600160a01b03861660009081526020819052604090205491906107ba565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546107609082610851565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156108495760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561080e5781810151838201526020016107f6565b50505050905090810190601f16801561083b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156108ab576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220c6cb455ffbde82515ca860e1535d67868c1a4eaf90faccc06fc0a48716824e6164736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xC51 CODESIZE SUB DUP1 PUSH3 0xC51 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0x84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x99 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xDE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x101 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x145 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x18A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP DUP3 MLOAD PUSH2 0x1A4 SWAP2 POP PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x1C0 JUMP JUMPDEST POP DUP1 MLOAD PUSH2 0x1B8 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x1C0 JUMP JUMPDEST POP POP POP PUSH2 0x253 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x201 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x22E JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x22E JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x22E JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x213 JUMP JUMPDEST POP PUSH2 0x23A SWAP3 SWAP2 POP PUSH2 0x23E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x23A JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x23F JUMP JUMPDEST PUSH2 0x9EE DUP1 PUSH3 0x263 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x28B JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1BB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x11D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x34F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH2 0x36C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x372 JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3FE JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x44C JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x467 JUMP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4C8 JUMP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x530 JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x544 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x345 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x345 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x328 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x35C PUSH2 0x56F JUMP JUMPDEST DUP5 DUP5 PUSH2 0x573 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37F DUP5 DUP5 DUP5 PUSH2 0x65F JUMP JUMPDEST PUSH2 0x3EF DUP5 PUSH2 0x38B PUSH2 0x56F JUMP JUMPDEST PUSH2 0x3EA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x923 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x3C9 PUSH2 0x56F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BA JUMP JUMPDEST PUSH2 0x573 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x40B PUSH2 0x56F JUMP JUMPDEST DUP5 PUSH2 0x3EA DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x41C PUSH2 0x56F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x851 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x345 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x345 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x4D5 PUSH2 0x56F JUMP JUMPDEST DUP5 PUSH2 0x3EA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x994 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x4FF PUSH2 0x56F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x53D PUSH2 0x56F JUMP JUMPDEST DUP5 DUP5 PUSH2 0x65F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x970 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8DB PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x94B PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8B8 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6F4 DUP4 DUP4 DUP4 PUSH2 0x8B2 JUMP JUMPDEST PUSH2 0x731 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8FD PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x760 SWAP1 DUP3 PUSH2 0x851 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x849 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x80E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x7F6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x83B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x8AB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220C6CB GASLIMIT 0x5F 0xFB 0xDE DUP3 MLOAD 0x5C 0xA8 PUSH1 0xE1 MSTORE8 0x5D PUSH8 0x868C1A4EAF90FACC 0xC0 PUSH16 0xC0A48716824E6164736F6C634300060C STOP CALLER ",
							"sourceMap": "1358:9422:1:-:0;;;1987:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1987:123:1;;;;;;;;;;-1:-1:-1;1987:123:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1987:123:1;;;;;;;;;;-1:-1:-1;1987:123:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1987:123:1;;-1:-1:-1;;2061:13:1;;;;-1:-1:-1;2061:5:1;;:13;;;;;:::i;:::-;-1:-1:-1;2085:17:1;;;;:7;;:17;;;;;:::i;:::-;;1987:123;;1358:9422;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1358:9422:1;;;-1:-1:-1;1358:9422:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c8063395093511161007157806339509351146101d957806370a082311461020557806395d89b411461022b578063a457c2d714610233578063a9059cbb1461025f578063dd62ed3e1461028b576100a9565b806306fdde03146100ae578063095ea7b31461012b57806318160ddd1461016b57806323b872dd14610185578063313ce567146101bb575b600080fd5b6100b66102b9565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100f05781810151838201526020016100d8565b50505050905090810190601f16801561011d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101576004803603604081101561014157600080fd5b506001600160a01b03813516906020013561034f565b604080519115158252519081900360200190f35b61017361036c565b60408051918252519081900360200190f35b6101576004803603606081101561019b57600080fd5b506001600160a01b03813581169160208101359091169060400135610372565b6101c36103f9565b6040805160ff9092168252519081900360200190f35b610157600480360360408110156101ef57600080fd5b506001600160a01b0381351690602001356103fe565b6101736004803603602081101561021b57600080fd5b50356001600160a01b031661044c565b6100b6610467565b6101576004803603604081101561024957600080fd5b506001600160a01b0381351690602001356104c8565b6101576004803603604081101561027557600080fd5b506001600160a01b038135169060200135610530565b610173600480360360408110156102a157600080fd5b506001600160a01b0381358116916020013516610544565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b820191906000526020600020905b81548152906001019060200180831161032857829003601f168201915b5050505050905090565b600061036361035c61056f565b8484610573565b50600192915050565b60025490565b600061037f84848461065f565b6103ef8461038b61056f565b6103ea85604051806060016040528060288152602001610923602891396001600160a01b038a166000908152600160205260408120906103c961056f565b6001600160a01b0316815260208101919091526040016000205491906107ba565b610573565b5060019392505050565b601290565b600061036361040b61056f565b846103ea856001600061041c61056f565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610851565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b60006103636104d561056f565b846103ea8560405180606001604052806025815260200161099460259139600160006104ff61056f565b6001600160a01b03908116825260208083019390935260409182016000908120918d168152925290205491906107ba565b600061036361053d61056f565b848461065f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166105b85760405162461bcd60e51b81526004018080602001828103825260248152602001806109706024913960400191505060405180910390fd5b6001600160a01b0382166105fd5760405162461bcd60e51b81526004018080602001828103825260228152602001806108db6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166106a45760405162461bcd60e51b815260040180806020018281038252602581526020018061094b6025913960400191505060405180910390fd5b6001600160a01b0382166106e95760405162461bcd60e51b81526004018080602001828103825260238152602001806108b86023913960400191505060405180910390fd5b6106f48383836108b2565b610731816040518060600160405280602681526020016108fd602691396001600160a01b03861660009081526020819052604090205491906107ba565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546107609082610851565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156108495760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561080e5781810151838201526020016107f6565b50505050905090810190601f16801561083b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156108ab576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220c6cb455ffbde82515ca860e1535d67868c1a4eaf90faccc06fc0a48716824e6164736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x28B JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1BB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x11D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x34F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH2 0x36C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x372 JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3FE JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x44C JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x467 JUMP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4C8 JUMP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x530 JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x544 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x345 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x345 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x328 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x35C PUSH2 0x56F JUMP JUMPDEST DUP5 DUP5 PUSH2 0x573 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37F DUP5 DUP5 DUP5 PUSH2 0x65F JUMP JUMPDEST PUSH2 0x3EF DUP5 PUSH2 0x38B PUSH2 0x56F JUMP JUMPDEST PUSH2 0x3EA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x923 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x3C9 PUSH2 0x56F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BA JUMP JUMPDEST PUSH2 0x573 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x40B PUSH2 0x56F JUMP JUMPDEST DUP5 PUSH2 0x3EA DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x41C PUSH2 0x56F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x851 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x345 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x345 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x4D5 PUSH2 0x56F JUMP JUMPDEST DUP5 PUSH2 0x3EA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x994 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x4FF PUSH2 0x56F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x53D PUSH2 0x56F JUMP JUMPDEST DUP5 DUP5 PUSH2 0x65F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x970 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8DB PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x94B PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8B8 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6F4 DUP4 DUP4 DUP4 PUSH2 0x8B2 JUMP JUMPDEST PUSH2 0x731 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8FD PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x760 SWAP1 DUP3 PUSH2 0x851 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x849 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x80E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x7F6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x83B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x8AB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220C6CB GASLIMIT 0x5F 0xFB 0xDE DUP3 MLOAD 0x5C 0xA8 PUSH1 0xE1 MSTORE8 0x5D PUSH8 0x868C1A4EAF90FACC 0xC0 PUSH16 0xC0A48716824E6164736F6C634300060C STOP CALLER ",
							"sourceMap": "1358:9422:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2180:100;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4347:169;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4347:169:1;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3300:108;;;:::i;:::-;;;;;;;;;;;;;;;;4998:355;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4998:355:1;;;;;;;;;;;;;;;;;:::i;3142:93::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5762:218;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5762:218:1;;;;;;;;:::i;3471:127::-;;;;;;;;;;;;;;;;-1:-1:-1;3471:127:1;-1:-1:-1;;;;;3471:127:1;;:::i;2399:104::-;;;:::i;6483:269::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6483:269:1;;;;;;;;:::i;3811:175::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3811:175:1;;;;;;;;:::i;4049:151::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4049:151:1;;;;;;;;;;:::i;2180:100::-;2267:5;2260:12;;;;;;;;-1:-1:-1;;2260:12:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2234:13;;2260:12;;2267:5;;2260:12;;2267:5;2260:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2180:100;:::o;4347:169::-;4430:4;4447:39;4456:12;:10;:12::i;:::-;4470:7;4479:6;4447:8;:39::i;:::-;-1:-1:-1;4504:4:1;4347:169;;;;:::o;3300:108::-;3388:12;;3300:108;:::o;4998:355::-;5138:4;5155:36;5165:6;5173:9;5184:6;5155:9;:36::i;:::-;5202:121;5211:6;5219:12;:10;:12::i;:::-;5233:89;5271:6;5233:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5233:19:1;;;;;;:11;:19;;;;;;5253:12;:10;:12::i;:::-;-1:-1:-1;;;;;5233:33:1;;;;;;;;;;;;-1:-1:-1;5233:33:1;;;:89;:37;:89::i;:::-;5202:8;:121::i;:::-;-1:-1:-1;5341:4:1;4998:355;;;;;:::o;3142:93::-;3225:2;3142:93;:::o;5762:218::-;5850:4;5867:83;5876:12;:10;:12::i;:::-;5890:7;5899:50;5938:10;5899:11;:25;5911:12;:10;:12::i;:::-;-1:-1:-1;;;;;5899:25:1;;;;;;;;;;;;;;;;;-1:-1:-1;5899:25:1;;;:34;;;;;;;;;;;:38;:50::i;3471:127::-;-1:-1:-1;;;;;3572:18:1;3545:7;3572:18;;;;;;;;;;;;3471:127::o;2399:104::-;2488:7;2481:14;;;;;;;;-1:-1:-1;;2481:14:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2455:13;;2481:14;;2488:7;;2481:14;;2488:7;2481:14;;;;;;;;;;;;;;;;;;;;;;;;6483:269;6576:4;6593:129;6602:12;:10;:12::i;:::-;6616:7;6625:96;6664:15;6625:96;;;;;;;;;;;;;;;;;:11;:25;6637:12;:10;:12::i;:::-;-1:-1:-1;;;;;6625:25:1;;;;;;;;;;;;;;;;;-1:-1:-1;6625:25:1;;;:34;;;;;;;;;;;:96;:38;:96::i;3811:175::-;3897:4;3914:42;3924:12;:10;:12::i;:::-;3938:9;3949:6;3914:9;:42::i;4049:151::-;-1:-1:-1;;;;;4165:18:1;;;4138:7;4165:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4049:151::o;601:98:0:-;681:10;601:98;:::o;9669:380:1:-;-1:-1:-1;;;;;9805:19:1;;9797:68;;;;-1:-1:-1;;;9797:68:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9884:21:1;;9876:68;;;;-1:-1:-1;;;9876:68:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9957:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10009:32;;;;;;;;;;;;;;;;;9669:380;;;:::o;7242:573::-;-1:-1:-1;;;;;7382:20:1;;7374:70;;;;-1:-1:-1;;;7374:70:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7463:23:1;;7455:71;;;;-1:-1:-1;;;7455:71:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7539:47;7560:6;7568:9;7579:6;7539:20;:47::i;:::-;7619:71;7641:6;7619:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7619:17:1;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;7599:17:1;;;:9;:17;;;;;;;;;;;:91;;;;7724:20;;;;;;;:32;;7749:6;7724:24;:32::i;:::-;-1:-1:-1;;;;;7701:20:1;;;:9;:20;;;;;;;;;;;;:55;;;;7772:35;;;;;;;7701:20;;7772:35;;;;;;;;;;;;;7242:573;;;:::o;1228:192:4:-;1314:7;1350:12;1342:6;;;;1334:29;;;;-1:-1:-1;;;1334:29:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1386:5:4;;;1228:192::o;325:181::-;383:7;415:5;;;439:6;;;;431:46;;;;;-1:-1:-1;;;431:46:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;497:1;325:181;-1:-1:-1;;;325:181:4:o;10652:125:1:-;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "508400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1360",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1167",
								"decimals()": "296",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1043",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 1,
									"value": "100000000"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 1,
									"value": "100000000"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 1,
									"value": "100000000"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 1,
									"value": "100000000"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2061,
									"end": 2074,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2061,
									"end": 2074,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2061,
									"end": 2074,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 2061,
									"end": 2074,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2061,
									"end": 2066,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2061,
									"end": 2066,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2061,
									"end": 2074,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2061,
									"end": 2074,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2061,
									"end": 2074,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2061,
									"end": 2074,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2061,
									"end": 2074,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2061,
									"end": 2074,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2061,
									"end": 2074,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 2061,
									"end": 2074,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2085,
									"end": 2102,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2085,
									"end": 2102,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2085,
									"end": 2102,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 2085,
									"end": 2102,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2085,
									"end": 2092,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2085,
									"end": 2092,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2085,
									"end": 2102,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2085,
									"end": 2102,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2085,
									"end": 2102,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2085,
									"end": 2102,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2085,
									"end": 2102,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2085,
									"end": 2102,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2085,
									"end": 2102,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 2085,
									"end": 2102,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2085,
									"end": 2102,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c6cb455ffbde82515ca860e1535d67868c1a4eaf90faccc06fc0a48716824e6164736f6c634300060c0033",
									".code": [
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH",
											"source": 1,
											"value": "A457C2D7"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2399,
											"end": 2503,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2399,
											"end": 2503,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2503,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2399,
											"end": 2503,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2399,
											"end": 2503,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2267,
											"end": 2272,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2234,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2234,
											"end": 2247,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2267,
											"end": 2272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2267,
											"end": 2272,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2267,
											"end": 2272,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4430,
											"end": 4434,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4447,
											"end": 4486,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 4456,
											"end": 4468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4456,
											"end": 4466,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 4456,
											"end": 4468,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4456,
											"end": 4468,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4456,
											"end": 4468,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4470,
											"end": 4477,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4479,
											"end": 4485,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4447,
											"end": 4455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4447,
											"end": 4486,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4447,
											"end": 4486,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 4447,
											"end": 4486,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4504,
											"end": 4508,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3388,
											"end": 3400,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3388,
											"end": 3400,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5138,
											"end": 5142,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5155,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 5165,
											"end": 5171,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5173,
											"end": 5182,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5184,
											"end": 5190,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5155,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5155,
											"end": 5191,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5155,
											"end": 5191,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 5155,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5202,
											"end": 5323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 5211,
											"end": 5217,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5219,
											"end": 5231,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 5219,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 5219,
											"end": 5231,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5219,
											"end": 5231,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 5219,
											"end": 5231,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 5271,
											"end": 5277,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "PUSH data",
											"source": 1,
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5233,
											"end": 5244,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5253,
											"end": 5265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 5253,
											"end": 5263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 5253,
											"end": 5265,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5253,
											"end": 5265,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 5253,
											"end": 5265,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5233,
											"end": 5266,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5233,
											"end": 5266,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5233,
											"end": 5266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5233,
											"end": 5266,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5233,
											"end": 5266,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5233,
											"end": 5266,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5233,
											"end": 5266,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5233,
											"end": 5266,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5233,
											"end": 5266,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5233,
											"end": 5266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5233,
											"end": 5266,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5233,
											"end": 5266,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5233,
											"end": 5266,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5233,
											"end": 5266,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5233,
											"end": 5266,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5233,
											"end": 5270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5202,
											"end": 5210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5202,
											"end": 5323,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5202,
											"end": 5323,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 5202,
											"end": 5323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5341,
											"end": 5345,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3227,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 5854,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5867,
											"end": 5950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 5876,
											"end": 5888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 5876,
											"end": 5886,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 5876,
											"end": 5888,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5876,
											"end": 5888,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 5876,
											"end": 5888,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5890,
											"end": 5897,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5899,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 5938,
											"end": 5948,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5899,
											"end": 5910,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5911,
											"end": 5923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 5911,
											"end": 5921,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 5911,
											"end": 5923,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5911,
											"end": 5923,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 5911,
											"end": 5923,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5899,
											"end": 5933,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5899,
											"end": 5933,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 5899,
											"end": 5933,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5899,
											"end": 5933,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5899,
											"end": 5933,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5899,
											"end": 5933,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5899,
											"end": 5933,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5899,
											"end": 5933,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5899,
											"end": 5933,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5899,
											"end": 5933,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5899,
											"end": 5933,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5899,
											"end": 5937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 5899,
											"end": 5949,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3572,
											"end": 3590,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3545,
											"end": 3552,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3572,
											"end": 3590,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3572,
											"end": 3590,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3572,
											"end": 3590,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3572,
											"end": 3590,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3572,
											"end": 3590,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3572,
											"end": 3590,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3572,
											"end": 3590,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3572,
											"end": 3590,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3572,
											"end": 3590,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3572,
											"end": 3590,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3572,
											"end": 3590,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3572,
											"end": 3590,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2399,
											"end": 2503,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2399,
											"end": 2503,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 2495,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2468,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2455,
											"end": 2468,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 2495,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 2495,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 2495,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6576,
											"end": 6580,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6593,
											"end": 6722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 6602,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6602,
											"end": 6612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 6602,
											"end": 6614,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6602,
											"end": 6614,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6602,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6616,
											"end": 6623,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 6664,
											"end": 6679,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "PUSH data",
											"source": 1,
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 6625,
											"end": 6636,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6637,
											"end": 6649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 6637,
											"end": 6647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 6637,
											"end": 6649,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6637,
											"end": 6649,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 6637,
											"end": 6649,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6625,
											"end": 6659,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6625,
											"end": 6659,
											"name": "DUP14",
											"source": 1
										},
										{
											"begin": 6625,
											"end": 6659,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6625,
											"end": 6659,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6625,
											"end": 6659,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6625,
											"end": 6659,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6625,
											"end": 6659,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6625,
											"end": 6659,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6625,
											"end": 6659,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6625,
											"end": 6659,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6625,
											"end": 6659,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6625,
											"end": 6663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3897,
											"end": 3901,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3914,
											"end": 3956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3924,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3924,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3924,
											"end": 3936,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3924,
											"end": 3936,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3924,
											"end": 3936,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 3947,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3949,
											"end": 3955,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3914,
											"end": 3923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3914,
											"end": 3956,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4165,
											"end": 4183,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4165,
											"end": 4183,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4165,
											"end": 4183,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4138,
											"end": 4145,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4165,
											"end": 4183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4165,
											"end": 4183,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4165,
											"end": 4183,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4165,
											"end": 4176,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4165,
											"end": 4183,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4165,
											"end": 4183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4165,
											"end": 4183,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4165,
											"end": 4183,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4165,
											"end": 4183,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4165,
											"end": 4183,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4165,
											"end": 4183,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4165,
											"end": 4183,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4165,
											"end": 4192,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4165,
											"end": 4192,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4165,
											"end": 4192,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4165,
											"end": 4192,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4165,
											"end": 4192,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4165,
											"end": 4192,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4165,
											"end": 4192,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4165,
											"end": 4192,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4165,
											"end": 4192,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4165,
											"end": 4192,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4165,
											"end": 4192,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4165,
											"end": 4192,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4165,
											"end": 4192,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 601,
											"end": 699,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 601,
											"end": 699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 681,
											"end": 691,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 601,
											"end": 699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 601,
											"end": 699,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9669,
											"end": 10049,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9669,
											"end": 10049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9805,
											"end": 9824,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9805,
											"end": 9824,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "PUSH data",
											"source": 1,
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9884,
											"end": 9905,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9884,
											"end": 9905,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "PUSH data",
											"source": 1,
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9957,
											"end": 9975,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9957,
											"end": 9975,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9957,
											"end": 9975,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9957,
											"end": 9975,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9957,
											"end": 9975,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9957,
											"end": 9975,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9957,
											"end": 9975,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9957,
											"end": 9968,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9957,
											"end": 9975,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9957,
											"end": 9975,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9957,
											"end": 9975,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9957,
											"end": 9975,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9957,
											"end": 9975,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9957,
											"end": 9975,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9957,
											"end": 9975,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9957,
											"end": 9975,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9957,
											"end": 9984,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 9957,
											"end": 9984,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9957,
											"end": 9984,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9957,
											"end": 9984,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9957,
											"end": 9984,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9957,
											"end": 9984,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9957,
											"end": 9984,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 9957,
											"end": 9984,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9957,
											"end": 9984,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9957,
											"end": 9984,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9957,
											"end": 9984,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9957,
											"end": 9984,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9957,
											"end": 9984,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9957,
											"end": 9993,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9957,
											"end": 9993,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9957,
											"end": 9993,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10009,
											"end": 10041,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10009,
											"end": 10041,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10009,
											"end": 10041,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10009,
											"end": 10041,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10009,
											"end": 10041,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10009,
											"end": 10041,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10009,
											"end": 10041,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10009,
											"end": 10041,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10009,
											"end": 10041,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10009,
											"end": 10041,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10009,
											"end": 10041,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10009,
											"end": 10041,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10009,
											"end": 10041,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10009,
											"end": 10041,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10009,
											"end": 10041,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10009,
											"end": 10041,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10009,
											"end": 10041,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 9669,
											"end": 10049,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9669,
											"end": 10049,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9669,
											"end": 10049,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9669,
											"end": 10049,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7242,
											"end": 7815,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7242,
											"end": 7815,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7382,
											"end": 7402,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7382,
											"end": 7402,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "PUSH data",
											"source": 1,
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7463,
											"end": 7486,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7463,
											"end": 7486,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "PUSH data",
											"source": 1,
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7539,
											"end": 7586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 7560,
											"end": 7566,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7568,
											"end": 7577,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7585,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7539,
											"end": 7559,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 7539,
											"end": 7586,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7539,
											"end": 7586,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 7539,
											"end": 7586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7619,
											"end": 7690,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 7641,
											"end": 7647,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7619,
											"end": 7690,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7619,
											"end": 7690,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7619,
											"end": 7690,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7619,
											"end": 7690,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7619,
											"end": 7690,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7619,
											"end": 7690,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7619,
											"end": 7690,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7619,
											"end": 7690,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7619,
											"end": 7690,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 7619,
											"end": 7690,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7619,
											"end": 7690,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7619,
											"end": 7690,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7619,
											"end": 7690,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7619,
											"end": 7690,
											"name": "PUSH data",
											"source": 1,
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 7619,
											"end": 7690,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 7619,
											"end": 7690,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7619,
											"end": 7690,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7619,
											"end": 7636,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7619,
											"end": 7636,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7619,
											"end": 7628,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7619,
											"end": 7636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7619,
											"end": 7636,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7619,
											"end": 7636,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7619,
											"end": 7636,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7619,
											"end": 7636,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7619,
											"end": 7636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7619,
											"end": 7636,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7619,
											"end": 7636,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7619,
											"end": 7636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7619,
											"end": 7636,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7619,
											"end": 7636,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7619,
											"end": 7636,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7619,
											"end": 7690,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7619,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 7619,
											"end": 7690,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7619,
											"end": 7690,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 7619,
											"end": 7690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7599,
											"end": 7616,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7599,
											"end": 7616,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7599,
											"end": 7616,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7599,
											"end": 7608,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7599,
											"end": 7616,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7599,
											"end": 7616,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7599,
											"end": 7616,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7599,
											"end": 7616,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7599,
											"end": 7616,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7599,
											"end": 7616,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7599,
											"end": 7616,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7599,
											"end": 7616,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7599,
											"end": 7616,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7599,
											"end": 7616,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7599,
											"end": 7616,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7599,
											"end": 7690,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7599,
											"end": 7690,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7599,
											"end": 7690,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7599,
											"end": 7690,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7724,
											"end": 7744,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7724,
											"end": 7744,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7724,
											"end": 7744,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7724,
											"end": 7744,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7724,
											"end": 7744,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7724,
											"end": 7744,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7724,
											"end": 7744,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7724,
											"end": 7756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 7724,
											"end": 7756,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7749,
											"end": 7755,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7724,
											"end": 7748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 7724,
											"end": 7756,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7724,
											"end": 7756,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 7724,
											"end": 7756,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7701,
											"end": 7721,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7701,
											"end": 7721,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7701,
											"end": 7721,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7701,
											"end": 7710,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7701,
											"end": 7721,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7701,
											"end": 7721,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7701,
											"end": 7721,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7701,
											"end": 7721,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7701,
											"end": 7721,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7701,
											"end": 7721,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7701,
											"end": 7721,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7701,
											"end": 7721,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7701,
											"end": 7721,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7701,
											"end": 7721,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7701,
											"end": 7721,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7701,
											"end": 7721,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7701,
											"end": 7756,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 7701,
											"end": 7756,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7701,
											"end": 7756,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 7701,
											"end": 7756,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7772,
											"end": 7807,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7772,
											"end": 7807,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7772,
											"end": 7807,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7772,
											"end": 7807,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7772,
											"end": 7807,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7772,
											"end": 7807,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7772,
											"end": 7807,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7701,
											"end": 7721,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7701,
											"end": 7721,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7772,
											"end": 7807,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7772,
											"end": 7807,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7772,
											"end": 7807,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7772,
											"end": 7807,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7772,
											"end": 7807,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7772,
											"end": 7807,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7772,
											"end": 7807,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7772,
											"end": 7807,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7772,
											"end": 7807,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7772,
											"end": 7807,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7772,
											"end": 7807,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7772,
											"end": 7807,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7772,
											"end": 7807,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 7242,
											"end": 7815,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7242,
											"end": 7815,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7242,
											"end": 7815,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7242,
											"end": 7815,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1228,
											"end": 1420,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 1228,
											"end": 1420,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1314,
											"end": 1321,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1342,
											"end": 1348,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1342,
											"end": 1348,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1342,
											"end": 1348,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1342,
											"end": 1348,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1386,
											"end": 1391,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1386,
											"end": 1391,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1386,
											"end": 1391,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1420,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 325,
											"end": 506,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 325,
											"end": 506,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 383,
											"end": 390,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 420,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 415,
											"end": 420,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 415,
											"end": 420,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 439,
											"end": 445,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 439,
											"end": 445,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 439,
											"end": 445,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 439,
											"end": 445,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 431,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 431,
											"end": 477,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 431,
											"end": 477,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 431,
											"end": 477,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 431,
											"end": 477,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 431,
											"end": 477,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 431,
											"end": 477,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 431,
											"end": 477,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 431,
											"end": 477,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 431,
											"end": 477,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 431,
											"end": 477,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 431,
											"end": 477,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 431,
											"end": 477,
											"name": "PUSH",
											"source": 4,
											"value": "1B"
										},
										{
											"begin": 431,
											"end": 477,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 431,
											"end": 477,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 431,
											"end": 477,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 431,
											"end": 477,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 431,
											"end": 477,
											"name": "PUSH",
											"source": 4,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 431,
											"end": 477,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 431,
											"end": 477,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 431,
											"end": 477,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 431,
											"end": 477,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 431,
											"end": 477,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 431,
											"end": 477,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 431,
											"end": 477,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 431,
											"end": 477,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 431,
											"end": 477,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 431,
											"end": 477,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 431,
											"end": 477,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 431,
											"end": 477,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 431,
											"end": 477,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 431,
											"end": 477,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 431,
											"end": 477,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 431,
											"end": 477,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 497,
											"end": 498,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 325,
											"end": 506,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 325,
											"end": 506,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10652,
											"end": 10777,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 10652,
											"end": 10777,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10652,
											"end": 10777,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10652,
											"end": 10777,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10652,
											"end": 10777,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10652,
											"end": 10777,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									],
									".data": {
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0x2bfee1b62dd98b0558681cb9428ef6ac972433cb68faaacc33a70a8bd221fadc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1754beb271b4f01fb27a92d7aadc97b588a7d4c3dc4baac35b9a70408f899ccb\",\"dweb:/ipfs/QmRf3v2AFo8utJGcTJmwPDqvWjLkXajZYo3yMTCgpWYKuz\"]},\"ERC20.sol\":{\"keccak256\":\"0xc4da424c399e963ac694ed3c07c9c000d37ed7cdeb234dd27714dfead62bf599\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b3c9fcefb68dddd7bf6c6f2f30a44adb49d35df61262497267bebeb624dcf6d\",\"dweb:/ipfs/QmfAJrHchjPHwcjSbzWyzJuvsRWUDWdrUnJACFLahZc4D8\"]},\"IERC20.sol\":{\"keccak256\":\"0x5fb7e501e7542c237101e03cc9f3e56d8812cfe95872017300c13c5c23352c82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://207e571110a865c35c91fce35ee0eba434b5e2309510c7a36dc693fa0d44c2d6\",\"dweb:/ipfs/QmT9pmkME8q7D7eSS37ZKbaaWUnQTYpt6dATjZgirmX2BV\"]},\"IERC20Metadata.sol\":{\"keccak256\":\"0x46d83945c75429345dbdcae90f62764a825f913086354d9e9198fdeb71dbbb9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9523f861e3488d33d8ca7bf3d83f8c9d1234809c413b3f9d3394e6f6aeec303e\",\"dweb:/ipfs/QmbgGLk1wojrsgGu3XoX1PHN5wdh3NikHKJim394NTR262\"]},\"SafeMath.sol\":{\"keccak256\":\"0x6d26cf7be1f1bc0678f06849575acbe0314513135adb03799a9554748f04ecfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8249fec945bad7f5ab24877ce675d139b978f7b46fb4e631b584e0e4185a0368\",\"dweb:/ipfs/QmTc8hj9hcY6N6amV3bx5QRTqPnhaLfdYwXSgHMH3Kyioy\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"keccak256\":\"0x5fb7e501e7542c237101e03cc9f3e56d8812cfe95872017300c13c5c23352c82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://207e571110a865c35c91fce35ee0eba434b5e2309510c7a36dc693fa0d44c2d6\",\"dweb:/ipfs/QmT9pmkME8q7D7eSS37ZKbaaWUnQTYpt6dATjZgirmX2BV\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"keccak256\":\"0x5fb7e501e7542c237101e03cc9f3e56d8812cfe95872017300c13c5c23352c82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://207e571110a865c35c91fce35ee0eba434b5e2309510c7a36dc693fa0d44c2d6\",\"dweb:/ipfs/QmT9pmkME8q7D7eSS37ZKbaaWUnQTYpt6dATjZgirmX2BV\"]},\"IERC20Metadata.sol\":{\"keccak256\":\"0x46d83945c75429345dbdcae90f62764a825f913086354d9e9198fdeb71dbbb9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9523f861e3488d33d8ca7bf3d83f8c9d1234809c413b3f9d3394e6f6aeec303e\",\"dweb:/ipfs/QmbgGLk1wojrsgGu3XoX1PHN5wdh3NikHKJim394NTR262\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SafeMath.sol\":62:4781  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"SafeMath.sol\":62:4781  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220512554fef4200f604e596c430630de0ee05d1498dd996d0bffb588b70d3c3da164736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220512554fef4200f604e596c430630de0ee05d1498dd996d0bffb588b70d3c3da164736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0x25 SLOAD INVALID DELEGATECALL KECCAK256 0xF PUSH1 0x4E MSIZE PUSH13 0x430630DE0EE05D1498DD996D0B SELFDESTRUCT 0xB5 DUP9 0xB7 0xD EXTCODECOPY RETURNDATASIZE LOG1 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "62:4719:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220512554fef4200f604e596c430630de0ee05d1498dd996d0bffb588b70d3c3da164736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0x25 SLOAD INVALID DELEGATECALL KECCAK256 0xF PUSH1 0x4E MSIZE PUSH13 0x430630DE0EE05D1498DD996D0B SELFDESTRUCT 0xB5 DUP9 0xB7 0xD EXTCODECOPY RETURNDATASIZE LOG1 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "62:4719:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 62,
									"end": 4781,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 4781,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 4781,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 62,
									"end": 4781,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 62,
									"end": 4781,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 62,
									"end": 4781,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 62,
									"end": 4781,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 62,
									"end": 4781,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 62,
									"end": 4781,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 62,
									"end": 4781,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 4781,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 62,
									"end": 4781,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 62,
									"end": 4781,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 62,
									"end": 4781,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 62,
									"end": 4781,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 62,
									"end": 4781,
									"name": "INVALID",
									"source": 4
								},
								{
									"begin": 62,
									"end": 4781,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 62,
									"end": 4781,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 62,
									"end": 4781,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 62,
									"end": 4781,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 4781,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 62,
									"end": 4781,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 62,
									"end": 4781,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 62,
									"end": 4781,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 62,
									"end": 4781,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 62,
									"end": 4781,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 62,
									"end": 4781,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220512554fef4200f604e596c430630de0ee05d1498dd996d0bffb588b70d3c3da164736f6c634300060c0033",
									".code": [
										{
											"begin": 62,
											"end": 4781,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 62,
											"end": 4781,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 62,
											"end": 4781,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 62,
											"end": 4781,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 62,
											"end": 4781,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 62,
											"end": 4781,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 62,
											"end": 4781,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 62,
											"end": 4781,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 62,
											"end": 4781,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"SafeMath.sol\":{\"keccak256\":\"0x6d26cf7be1f1bc0678f06849575acbe0314513135adb03799a9554748f04ecfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8249fec945bad7f5ab24877ce675d139b978f7b46fb4e631b584e0e4185a0368\",\"dweb:/ipfs/QmTc8hj9hcY6N6amV3bx5QRTqPnhaLfdYwXSgHMH3Kyioy\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Context.sol": {
				"ast": {
					"absolutePath": "Context.sol",
					"exportedSymbols": {
						"Context": [
							22
						]
					},
					"id": 23,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 22,
							"linearizedBaseContracts": [
								22
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 9,
										"nodeType": "Block",
										"src": "663:36:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 6,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "681:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 7,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "681:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 5,
												"id": 8,
												"nodeType": "Return",
												"src": "674:17:0"
											}
										]
									},
									"documentation": null,
									"id": 10,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "620:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 10,
												"src": "654:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "653:9:0"
									},
									"scope": 22,
									"src": "601:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 20,
										"nodeType": "Block",
										"src": "774:168:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 15,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "785:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$22",
														"typeString": "contract Context"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "785:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 17,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "926:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "926:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 14,
												"id": 19,
												"nodeType": "Return",
												"src": "919:15:0"
											}
										]
									},
									"documentation": null,
									"id": 21,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "724:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 21,
												"src": "758:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 12,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "758:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "757:16:0"
									},
									"scope": 22,
									"src": "707:235:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 23,
							"src": "568:377:0"
						}
					],
					"src": "35:912:0"
				},
				"id": 0
			},
			"ERC20.sol": {
				"ast": {
					"absolutePath": "ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							514
						]
					},
					"id": 515,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 24,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:1"
						},
						{
							"absolutePath": "IERC20.sol",
							"file": "./IERC20.sol",
							"id": 25,
							"nodeType": "ImportDirective",
							"scope": 515,
							"sourceUnit": 593,
							"src": "62:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IERC20Metadata.sol",
							"file": "./IERC20Metadata.sol",
							"id": 26,
							"nodeType": "ImportDirective",
							"scope": 515,
							"sourceUnit": 618,
							"src": "86:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Context.sol",
							"file": "./Context.sol",
							"id": 27,
							"nodeType": "ImportDirective",
							"scope": 515,
							"sourceUnit": 23,
							"src": "118:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 28,
							"nodeType": "ImportDirective",
							"scope": 515,
							"sourceUnit": 813,
							"src": "143:24:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 30,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 22,
										"src": "1376:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$22",
											"typeString": "contract Context"
										}
									},
									"id": 31,
									"nodeType": "InheritanceSpecifier",
									"src": "1376:7:1"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 32,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 592,
										"src": "1385:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$592",
											"typeString": "contract IERC20"
										}
									},
									"id": 33,
									"nodeType": "InheritanceSpecifier",
									"src": "1385:6:1"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 34,
										"name": "IERC20Metadata",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 617,
										"src": "1393:14:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Metadata_$617",
											"typeString": "contract IERC20Metadata"
										}
									},
									"id": 35,
									"nodeType": "InheritanceSpecifier",
									"src": "1393:14:1"
								}
							],
							"contractDependencies": [
								22,
								592,
								617
							],
							"contractKind": "contract",
							"documentation": {
								"id": 29,
								"nodeType": "StructuredDocumentation",
								"src": "171:1185:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 514,
							"linearizedBaseContracts": [
								514,
								617,
								592,
								22
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 38,
									"libraryName": {
										"contractScope": null,
										"id": 36,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 812,
										"src": "1421:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$812",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1415:27:1",
									"typeName": {
										"id": 37,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1434:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 42,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 514,
									"src": "1450:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 41,
										"keyType": {
											"id": 39,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1458:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1450:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 40,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1469:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 48,
									"mutability": "mutable",
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 514,
									"src": "1504:67:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 47,
										"keyType": {
											"id": 43,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1512:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1504:47:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 46,
											"keyType": {
												"id": 44,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1531:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1523:27:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 45,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1542:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 50,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 514,
									"src": "1580:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 49,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1580:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 52,
									"mutability": "mutable",
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 514,
									"src": "1617:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 51,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1617:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 54,
									"mutability": "mutable",
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 514,
									"src": "1644:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 53,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1644:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 70,
										"nodeType": "Block",
										"src": "2050:60:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 62,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "2061:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 63,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 57,
														"src": "2069:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2061:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 65,
												"nodeType": "ExpressionStatement",
												"src": "2061:13:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 66,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "2085:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 67,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 59,
														"src": "2095:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2085:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 69,
												"nodeType": "ExpressionStatement",
												"src": "2085:17:1"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1675:306:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 71,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "name_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 71,
												"src": "1999:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 56,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1999:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "symbol_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 71,
												"src": "2020:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 58,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2020:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1998:44:1"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2050:0:1"
									},
									"scope": 514,
									"src": "1987:123:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										604
									],
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2249:31:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 78,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 52,
													"src": "2267:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 77,
												"id": 79,
												"nodeType": "Return",
												"src": "2260:12:1"
											}
										]
									},
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "2118:56:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 74,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2216:8:1"
									},
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2193:2:1"
									},
									"returnParameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 81,
												"src": "2234:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 75,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2234:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2233:15:1"
									},
									"scope": 514,
									"src": "2180:100:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										610
									],
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2470:33:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 88,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 54,
													"src": "2488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 87,
												"id": 89,
												"nodeType": "Return",
												"src": "2481:14:1"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2288:105:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 84,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2437:8:1"
									},
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2414:2:1"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 91,
												"src": "2455:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 85,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2455:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2454:15:1"
									},
									"scope": 514,
									"src": "2399:104:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										616
									],
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "3207:28:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "3138",
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3225:2:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 97,
												"id": 99,
												"nodeType": "Return",
												"src": "3218:9:1"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2511:625:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 94,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3182:8:1"
									},
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3159:2:1"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 101,
												"src": "3200:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 95,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3200:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3199:7:1"
									},
									"scope": 514,
									"src": "3142:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										523
									],
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "3370:38:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 108,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 50,
													"src": "3388:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 107,
												"id": 109,
												"nodeType": "Return",
												"src": "3381:19:1"
											}
										]
									},
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "3243:51:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 104,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3343:8:1"
									},
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3320:2:1"
									},
									"returnParameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 111,
												"src": "3361:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3361:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3360:9:1"
									},
									"scope": 514,
									"src": "3300:108:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										531
									],
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "3554:44:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 120,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "3572:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 122,
													"indexExpression": {
														"argumentTypes": null,
														"id": 121,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "3582:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3572:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 119,
												"id": 123,
												"nodeType": "Return",
												"src": "3565:25:1"
											}
										]
									},
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "3416:49:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 116,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3527:8:1"
									},
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 125,
												"src": "3490:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3490:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3489:17:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 125,
												"src": "3545:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3544:9:1"
									},
									"scope": 514,
									"src": "3471:127:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										541
									],
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "3903:83:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 137,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "3924:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3924:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 139,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "3938:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 140,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 130,
															"src": "3949:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 136,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "3914:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3914:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "3914:42:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3974:4:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 135,
												"id": 144,
												"nodeType": "Return",
												"src": "3967:11:1"
											}
										]
									},
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "3606:199:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 132,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3879:8:1"
									},
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 146,
												"src": "3829:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3829:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 146,
												"src": "3848:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3848:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3828:35:1"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 146,
												"src": "3897:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 133,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3897:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3896:6:1"
									},
									"scope": 514,
									"src": "3811:175:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										551
									],
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "4147:53:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 157,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 48,
															"src": "4165:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 159,
														"indexExpression": {
															"argumentTypes": null,
															"id": 158,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "4177:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4165:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 161,
													"indexExpression": {
														"argumentTypes": null,
														"id": 160,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "4184:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4165:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 156,
												"id": 162,
												"nodeType": "Return",
												"src": "4158:34:1"
											}
										]
									},
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "3994:49:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 153,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4120:8:1"
									},
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 164,
												"src": "4068:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4068:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 164,
												"src": "4083:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4083:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4067:32:1"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 164,
												"src": "4138:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4138:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4137:9:1"
									},
									"scope": 514,
									"src": "4049:151:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										561
									],
									"body": {
										"id": 184,
										"nodeType": "Block",
										"src": "4436:80:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 176,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "4456:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4456:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 178,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "4470:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 179,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "4479:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 175,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "4447:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4447:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 181,
												"nodeType": "ExpressionStatement",
												"src": "4447:39:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4504:4:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 174,
												"id": 183,
												"nodeType": "Return",
												"src": "4497:11:1"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "4208:133:1",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 185,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 171,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4412:8:1"
									},
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 185,
												"src": "4364:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4364:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 185,
												"src": "4381:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4381:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4363:33:1"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 185,
												"src": "4430:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 172,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4430:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4429:6:1"
									},
									"scope": 514,
									"src": "4347:169:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										573
									],
									"body": {
										"id": 222,
										"nodeType": "Block",
										"src": "5144:209:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 199,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "5165:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 200,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 190,
															"src": "5173:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 201,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5184:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 198,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "5155:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5155:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 203,
												"nodeType": "ExpressionStatement",
												"src": "5155:36:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 205,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "5211:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 206,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "5219:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5219:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 215,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 192,
																	"src": "5271:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5279:42:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	},
																	"value": "ERC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 208,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 48,
																			"src": "5233:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 210,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 209,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 188,
																			"src": "5245:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5233:19:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 213,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 211,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 10,
																			"src": "5253:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5253:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5233:33:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 690,
																"src": "5233:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5233:89:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 204,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "5202:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5202:121:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "5202:121:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5341:4:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 197,
												"id": 221,
												"nodeType": "Return",
												"src": "5334:11:1"
											}
										]
									},
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "4524:468:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 194,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5120:8:1"
									},
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 223,
												"src": "5030:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5030:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 223,
												"src": "5055:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5055:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 223,
												"src": "5083:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5083:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5019:85:1"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 223,
												"src": "5138:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 195,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5138:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5137:6:1"
									},
									"scope": 514,
									"src": "4998:355:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "5856:124:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 234,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "5876:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5876:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 236,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "5890:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 244,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 228,
																	"src": "5938:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 237,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 48,
																			"src": "5899:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 240,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 238,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 10,
																				"src": "5911:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 239,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5911:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5899:25:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 242,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 241,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 226,
																		"src": "5925:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5899:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 645,
																"src": "5899:38:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5899:50:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 233,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "5867:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5867:83:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "5867:83:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5968:4:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 232,
												"id": 249,
												"nodeType": "Return",
												"src": "5961:11:1"
											}
										]
									},
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "5361:395:1",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 251,
												"src": "5789:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5789:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 251,
												"src": "5806:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5806:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5788:37:1"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 251,
												"src": "5850:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 230,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5850:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5849:6:1"
									},
									"scope": 514,
									"src": "5762:218:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 279,
										"nodeType": "Block",
										"src": "6582:170:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 262,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "6602:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6602:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 264,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "6616:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 272,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 256,
																	"src": "6664:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6681:39:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	},
																	"value": "ERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 265,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 48,
																			"src": "6625:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 268,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 266,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 10,
																				"src": "6637:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 267,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6637:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6625:25:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 270,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 269,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 254,
																		"src": "6651:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6625:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 690,
																"src": "6625:38:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6625:96:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 261,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "6593:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6593:129:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "6593:129:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6740:4:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 260,
												"id": 278,
												"nodeType": "Return",
												"src": "6733:11:1"
											}
										]
									},
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "5988:489:1",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 280,
												"src": "6510:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6510:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 280,
												"src": "6527:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6527:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6509:42:1"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 280,
												"src": "6576:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 258,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6576:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6575:6:1"
									},
									"scope": 514,
									"src": "6483:269:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "7363:452:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 291,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 283,
																"src": "7382:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7400:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 293,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7392:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 292,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7392:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 295,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7392:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7382:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7404:39:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 290,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7374:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7374:70:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 299,
												"nodeType": "ExpressionStatement",
												"src": "7374:70:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 301,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "7463:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7484:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7476:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 302,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7476:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7476:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7463:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7488:37:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 300,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7455:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7455:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "7455:71:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 311,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "7560:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 312,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "7568:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 313,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "7579:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 310,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 513,
														"src": "7539:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7539:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "7539:47:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 316,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 42,
															"src": "7599:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 318,
														"indexExpression": {
															"argumentTypes": null,
															"id": 317,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "7609:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7599:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 323,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 287,
																"src": "7641:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 324,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7649:40:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																},
																"value": "ERC20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 319,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 42,
																	"src": "7619:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 321,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 320,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 283,
																	"src": "7629:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7619:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 690,
															"src": "7619:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 325,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7619:71:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7599:91:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 327,
												"nodeType": "ExpressionStatement",
												"src": "7599:91:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 328,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 42,
															"src": "7701:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 330,
														"indexExpression": {
															"argumentTypes": null,
															"id": 329,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "7711:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7701:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 335,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 287,
																"src": "7749:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 331,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 42,
																	"src": "7724:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 333,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 332,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 285,
																	"src": "7734:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7724:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 645,
															"src": "7724:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 336,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7724:32:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7701:55:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 338,
												"nodeType": "ExpressionStatement",
												"src": "7701:55:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 340,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "7781:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 341,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "7789:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 342,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "7800:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 339,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 582,
														"src": "7772:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7772:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 344,
												"nodeType": "EmitStatement",
												"src": "7767:40:1"
											}
										]
									},
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "6760:476:1",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 346,
												"src": "7271:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7271:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 346,
												"src": "7296:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7296:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 346,
												"src": "7324:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7324:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7260:85:1"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7363:0:1"
									},
									"scope": 514,
									"src": "7242:573:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 400,
										"nodeType": "Block",
										"src": "8167:313:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 355,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "8186:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8205:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8197:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 356,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8197:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8197:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "8186:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8209:33:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8178:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8178:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "8178:65:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8285:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8277:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 365,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8277:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8277:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 369,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8289:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 370,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8298:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 364,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 513,
														"src": "8256:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8256:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "8256:49:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 373,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "8318:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 376,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 351,
																"src": "8350:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 374,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 50,
																"src": "8333:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 645,
															"src": "8333:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8333:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8318:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "8318:39:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 380,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 42,
															"src": "8368:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 382,
														"indexExpression": {
															"argumentTypes": null,
															"id": 381,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8378:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8368:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 387,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 351,
																"src": "8412:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 383,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 42,
																	"src": "8389:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 385,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 384,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 349,
																	"src": "8399:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8389:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 645,
															"src": "8389:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8389:30:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8368:51:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 390,
												"nodeType": "ExpressionStatement",
												"src": "8368:51:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8452:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 393,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8444:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 392,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8444:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8444:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 396,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8456:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 397,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8465:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 391,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 582,
														"src": "8435:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8435:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 399,
												"nodeType": "EmitStatement",
												"src": "8430:42:1"
											}
										]
									},
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "7823:273:1",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 401,
												"src": "8117:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8117:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 401,
												"src": "8134:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8134:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8116:33:1"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8167:0:1"
									},
									"scope": 514,
									"src": "8102:378:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 456,
										"nodeType": "Block",
										"src": "8878:353:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 410,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "8897:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8916:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 412,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8908:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 411,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8908:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 414,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8908:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "8897:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8920:35:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 409,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8889:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8889:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "8889:67:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 420,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "8990:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9007:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 422,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8999:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 421,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8999:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8999:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 425,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "9011:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 419,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 513,
														"src": "8969:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8969:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 427,
												"nodeType": "ExpressionStatement",
												"src": "8969:49:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 428,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 42,
															"src": "9031:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 430,
														"indexExpression": {
															"argumentTypes": null,
															"id": 429,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "9041:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9031:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 435,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 406,
																"src": "9075:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9083:36:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																},
																"value": "ERC20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 431,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 42,
																	"src": "9052:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 433,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 432,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 404,
																	"src": "9062:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9052:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 690,
															"src": "9052:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9052:68:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9031:89:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 439,
												"nodeType": "ExpressionStatement",
												"src": "9031:89:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 440,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "9131:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 443,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 406,
																"src": "9163:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 441,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 50,
																"src": "9146:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 662,
															"src": "9146:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 444,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9146:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9131:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "9131:39:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 448,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "9195:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9212:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 450,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9204:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 449,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9204:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 452,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9204:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 453,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "9216:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 447,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 582,
														"src": "9186:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9186:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 455,
												"nodeType": "EmitStatement",
												"src": "9181:42:1"
											}
										]
									},
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "8488:319:1",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 457,
												"src": "8828:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8828:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 457,
												"src": "8845:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8845:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8827:33:1"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8878:0:1"
									},
									"scope": 514,
									"src": "8813:418:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "9786:263:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 468,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 460,
																"src": "9805:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9822:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9814:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 469,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9814:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 472,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9814:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9805:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9826:38:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 467,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9797:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9797:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 476,
												"nodeType": "ExpressionStatement",
												"src": "9797:68:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 478,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 462,
																"src": "9884:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 481,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9903:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9895:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 479,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9895:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9895:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9884:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9907:36:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 477,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9876:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9876:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 486,
												"nodeType": "ExpressionStatement",
												"src": "9876:68:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 487,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 48,
																"src": "9957:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 490,
															"indexExpression": {
																"argumentTypes": null,
																"id": 488,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 460,
																"src": "9969:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9957:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 491,
														"indexExpression": {
															"argumentTypes": null,
															"id": 489,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "9976:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9957:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 492,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "9987:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9957:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 494,
												"nodeType": "ExpressionStatement",
												"src": "9957:36:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 496,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "10018:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 497,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "10025:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 498,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "10034:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 495,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 591,
														"src": "10009:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10009:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 500,
												"nodeType": "EmitStatement",
												"src": "10004:37:1"
											}
										]
									},
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "9239:424:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 502,
												"src": "9697:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9697:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 502,
												"src": "9721:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9721:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 502,
												"src": "9747:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9747:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9686:82:1"
									},
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9786:0:1"
									},
									"scope": 514,
									"src": "9669:380:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 512,
										"nodeType": "Block",
										"src": "10775:2:1",
										"statements": []
									},
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "10057:589:1",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 513,
												"src": "10692:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10692:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 513,
												"src": "10715:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10715:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 513,
												"src": "10736:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10736:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10681:76:1"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10775:0:1"
									},
									"scope": 514,
									"src": "10652:125:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 515,
							"src": "1358:9422:1"
						}
					],
					"src": "35:10747:1"
				},
				"id": 1
			},
			"IERC20.sol": {
				"ast": {
					"absolutePath": "IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							592
						]
					},
					"id": 593,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 516,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 517,
								"nodeType": "StructuredDocumentation",
								"src": "62:72:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 592,
							"linearizedBaseContracts": [
								592
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "160:68:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 523,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "254:2:2"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 523,
												"src": "280:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "280:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "279:9:2"
									},
									"scope": 592,
									"src": "234:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "297:74:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 531,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 531,
												"src": "396:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "396:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "395:17:2"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 531,
												"src": "436:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "436:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "435:9:2"
									},
									"scope": 592,
									"src": "377:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 532,
										"nodeType": "StructuredDocumentation",
										"src": "453:215:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 541,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 541,
												"src": "692:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "692:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 541,
												"src": "711:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "711:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "691:35:2"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 541,
												"src": "745:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 538,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "745:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "744:6:2"
									},
									"scope": 592,
									"src": "674:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 542,
										"nodeType": "StructuredDocumentation",
										"src": "759:270:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 551,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 551,
												"src": "1054:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 551,
												"src": "1069:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1053:32:2"
									},
									"returnParameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 551,
												"src": "1109:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1109:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1108:9:2"
									},
									"scope": 592,
									"src": "1035:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 552,
										"nodeType": "StructuredDocumentation",
										"src": "1126:655:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 561,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 561,
												"src": "1804:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1804:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 561,
												"src": "1821:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1803:33:2"
									},
									"returnParameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 561,
												"src": "1855:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 558,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1855:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1854:6:2"
									},
									"scope": 592,
									"src": "1787:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 562,
										"nodeType": "StructuredDocumentation",
										"src": "1869:304:2",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 573,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 573,
												"src": "2211:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2211:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 573,
												"src": "2236:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2236:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 573,
												"src": "2264:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2264:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2200:85:2"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 573,
												"src": "2304:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 570,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2304:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2303:6:2"
									},
									"scope": 592,
									"src": "2179:131:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 574,
										"nodeType": "StructuredDocumentation",
										"src": "2318:163:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 582,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 582,
												"src": "2502:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2502:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 582,
												"src": "2524:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2524:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 582,
												"src": "2544:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2544:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2501:57:2"
									},
									"src": "2487:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 583,
										"nodeType": "StructuredDocumentation",
										"src": "2567:151:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 591,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 591,
												"src": "2739:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 591,
												"src": "2762:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2762:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 591,
												"src": "2787:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2787:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2738:63:2"
									},
									"src": "2724:78:2"
								}
							],
							"scope": 593,
							"src": "136:2669:2"
						}
					],
					"src": "35:2772:2"
				},
				"id": 2
			},
			"IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20Metadata": [
							617
						]
					},
					"id": 618,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 594,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:3"
						},
						{
							"absolutePath": "IERC20.sol",
							"file": "./IERC20.sol",
							"id": 595,
							"nodeType": "ImportDirective",
							"scope": 618,
							"sourceUnit": 593,
							"src": "62:22:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 597,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 592,
										"src": "238:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$592",
											"typeString": "contract IERC20"
										}
									},
									"id": 598,
									"nodeType": "InheritanceSpecifier",
									"src": "238:6:3"
								}
							],
							"contractDependencies": [
								592
							],
							"contractKind": "interface",
							"documentation": {
								"id": 596,
								"nodeType": "StructuredDocumentation",
								"src": "88:120:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 617,
							"linearizedBaseContracts": [
								617,
								592
							],
							"name": "IERC20Metadata",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "252:56:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 604,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "327:2:3"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 604,
												"src": "353:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 601,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "353:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "352:15:3"
									},
									"scope": 617,
									"src": "314:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 605,
										"nodeType": "StructuredDocumentation",
										"src": "376:58:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 610,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "455:2:3"
									},
									"returnParameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 610,
												"src": "481:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 607,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "481:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "480:15:3"
									},
									"scope": 617,
									"src": "440:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 611,
										"nodeType": "StructuredDocumentation",
										"src": "504:67:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 616,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "594:2:3"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 616,
												"src": "620:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 613,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "620:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "619:7:3"
									},
									"scope": 617,
									"src": "577:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 618,
							"src": "210:420:3"
						}
					],
					"src": "35:597:3"
				},
				"id": 3
			},
			"SafeMath.sol": {
				"ast": {
					"absolutePath": "SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							812
						]
					},
					"id": 813,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 619,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 812,
							"linearizedBaseContracts": [
								812
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "392:114:4",
										"statements": [
											{
												"assignments": [
													630
												],
												"declarations": [
													{
														"constant": false,
														"id": 630,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 644,
														"src": "403:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 629,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "403:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 634,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 631,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 622,
														"src": "415:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 632,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "419:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "415:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "403:17:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 636,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 630,
																"src": "439:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 637,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 622,
																"src": "444:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "439:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "447:29:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 635,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "431:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "431:46:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 641,
												"nodeType": "ExpressionStatement",
												"src": "431:46:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 642,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 630,
													"src": "497:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 628,
												"id": 643,
												"nodeType": "Return",
												"src": "490:8:4"
											}
										]
									},
									"documentation": {
										"id": 620,
										"nodeType": "StructuredDocumentation",
										"src": "86:233:4",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 645,
												"src": "338:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "338:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 645,
												"src": "349:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "337:22:4"
									},
									"returnParameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 645,
												"src": "383:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "383:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "382:9:4"
									},
									"scope": 812,
									"src": "325:181:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "856:69:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 656,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "878:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 657,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "881:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "884:32:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 655,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															690
														],
														"referencedDeclaration": 690,
														"src": "874:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "874:43:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 654,
												"id": 660,
												"nodeType": "Return",
												"src": "867:50:4"
											}
										]
									},
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "514:269:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 662,
												"src": "802:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "802:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 662,
												"src": "813:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "813:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "801:22:4"
									},
									"returnParameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 662,
												"src": "847:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "847:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "846:9:4"
									},
									"scope": 812,
									"src": "789:136:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "1323:97:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 675,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 667,
																"src": "1342:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 676,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "1347:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1342:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 678,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "1350:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 674,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1334:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1334:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 680,
												"nodeType": "ExpressionStatement",
												"src": "1334:29:4"
											},
											{
												"assignments": [
													682
												],
												"declarations": [
													{
														"constant": false,
														"id": 682,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 689,
														"src": "1374:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 681,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1374:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 686,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 683,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "1386:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 684,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "1390:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1386:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1374:17:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 687,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 682,
													"src": "1411:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 673,
												"id": 688,
												"nodeType": "Return",
												"src": "1404:8:4"
											}
										]
									},
									"documentation": {
										"id": 663,
										"nodeType": "StructuredDocumentation",
										"src": "933:289:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 690,
												"src": "1241:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1241:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 690,
												"src": "1252:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 690,
												"src": "1263:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 668,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1263:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1240:50:4"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 690,
												"src": "1314:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1314:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1313:9:4"
									},
									"scope": 812,
									"src": "1228:192:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 724,
										"nodeType": "Block",
										"src": "1746:404:4",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 700,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "1982:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 701,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1987:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1982:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 706,
												"nodeType": "IfStatement",
												"src": "1978:47:4",
												"trueBody": {
													"id": 705,
													"nodeType": "Block",
													"src": "1990:35:4",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 703,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2012:1:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 699,
															"id": 704,
															"nodeType": "Return",
															"src": "2005:8:4"
														}
													]
												}
											},
											{
												"assignments": [
													708
												],
												"declarations": [
													{
														"constant": false,
														"id": 708,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 724,
														"src": "2037:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 707,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2037:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 712,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 709,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "2049:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 710,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "2053:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2049:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2037:17:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 718,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 716,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 714,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 708,
																	"src": "2073:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 715,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 693,
																	"src": "2077:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2073:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 717,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 695,
																"src": "2082:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2073:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2085:35:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 713,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2065:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2065:56:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 721,
												"nodeType": "ExpressionStatement",
												"src": "2065:56:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 722,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 708,
													"src": "2141:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 699,
												"id": 723,
												"nodeType": "Return",
												"src": "2134:8:4"
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "1428:245:4",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 725,
												"src": "1692:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1692:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 725,
												"src": "1703:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1703:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1691:22:4"
									},
									"returnParameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 725,
												"src": "1737:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1737:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1736:9:4"
									},
									"scope": 812,
									"src": "1679:471:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 741,
										"nodeType": "Block",
										"src": "2693:65:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 736,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 728,
															"src": "2715:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 737,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "2718:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2721:28:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 735,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															742,
															770
														],
														"referencedDeclaration": 770,
														"src": "2711:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2711:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 734,
												"id": 740,
												"nodeType": "Return",
												"src": "2704:46:4"
											}
										]
									},
									"documentation": {
										"id": 726,
										"nodeType": "StructuredDocumentation",
										"src": "2158:462:4",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 742,
												"src": "2639:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2639:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 742,
												"src": "2650:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2650:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2638:22:4"
									},
									"returnParameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 742,
												"src": "2684:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2683:9:4"
									},
									"scope": 812,
									"src": "2626:132:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 769,
										"nodeType": "Block",
										"src": "3349:183:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 755,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 747,
																"src": "3368:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 756,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3372:1:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3368:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 758,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "3375:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 754,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3360:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3360:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 760,
												"nodeType": "ExpressionStatement",
												"src": "3360:28:4"
											},
											{
												"assignments": [
													762
												],
												"declarations": [
													{
														"constant": false,
														"id": 762,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 769,
														"src": "3399:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 761,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3399:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 763,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 745,
														"src": "3411:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 764,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "3415:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3411:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3399:17:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 767,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 762,
													"src": "3523:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 753,
												"id": 768,
												"nodeType": "Return",
												"src": "3516:8:4"
											}
										]
									},
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "2766:482:4",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 770,
												"src": "3267:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3267:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 770,
												"src": "3278:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3278:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 770,
												"src": "3289:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 748,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3289:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3266:50:4"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 770,
												"src": "3340:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3339:9:4"
									},
									"scope": 812,
									"src": "3254:278:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 786,
										"nodeType": "Block",
										"src": "4064:63:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 781,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "4086:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 782,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "4089:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4092:26:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 780,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															787,
															811
														],
														"referencedDeclaration": 811,
														"src": "4082:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4082:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 779,
												"id": 785,
												"nodeType": "Return",
												"src": "4075:44:4"
											}
										]
									},
									"documentation": {
										"id": 771,
										"nodeType": "StructuredDocumentation",
										"src": "3540:451:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 787,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 787,
												"src": "4010:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4010:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 787,
												"src": "4021:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4021:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4009:22:4"
									},
									"returnParameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 787,
												"src": "4055:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4055:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4054:9:4"
									},
									"scope": 812,
									"src": "3997:130:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 810,
										"nodeType": "Block",
										"src": "4707:71:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 800,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 792,
																"src": "4726:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 801,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4731:1:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4726:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 803,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "4734:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 799,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4718:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4718:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 805,
												"nodeType": "ExpressionStatement",
												"src": "4718:29:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 806,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 790,
														"src": "4765:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 807,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "4769:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4765:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 798,
												"id": 809,
												"nodeType": "Return",
												"src": "4758:12:4"
											}
										]
									},
									"documentation": {
										"id": 788,
										"nodeType": "StructuredDocumentation",
										"src": "4135:471:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 811,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 811,
												"src": "4625:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4625:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 811,
												"src": "4636:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4636:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 811,
												"src": "4647:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 793,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4647:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4624:50:4"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 811,
												"src": "4698:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4698:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4697:9:4"
									},
									"scope": 812,
									"src": "4612:166:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 813,
							"src": "62:4719:4"
						}
					],
					"src": "35:4748:4"
				},
				"id": 4
			}
		}
	}
}