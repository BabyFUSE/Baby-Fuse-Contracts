{
	"id": "1717e934f2f523753581e717896d4b33",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"DividendPayingToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.2;\r\n\r\nimport \"./ERC20.sol\";\r\nimport \"./SafeMath.sol\";\r\nimport \"./SafeMathUint.sol\";\r\nimport \"./SafeMathInt.sol\";\r\nimport \"./DividendPayingTokenInterface.sol\";\r\nimport \"./DividendPayingTokenOptionalInterface.sol\";\r\nimport \"./Ownable.sol\";\r\n\r\n\r\n/// @title Dividend-Paying Token\r\n/// @author Roger Wu (https://github.com/roger-wu)\r\n/// @dev A mintable ERC20 token that allows anyone to pay and distribute ether\r\n///  to token holders as dividends and allows token holders to withdraw their dividends.\r\n///  Reference: the source code of PoWH3D: https://etherscan.io/address/0xB3775fB83F7D12A36E0475aBdD1FCA35c091efBe#code\r\ncontract DividendPayingToken is ERC20, Ownable, DividendPayingTokenInterface, DividendPayingTokenOptionalInterface {\r\n  using SafeMath for uint256;\r\n  using SafeMathUint for uint256;\r\n  using SafeMathInt for int256;\r\n\r\n  address public immutable CAKE = address(0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82); //CAKE\r\n\r\n\r\n  // With `magnitude`, we can properly distribute dividends even if the amount of received ether is small.\r\n  // For more discussion about choosing the value of `magnitude`,\r\n  //  see https://github.com/ethereum/EIPs/issues/1726#issuecomment-472352728\r\n  uint256 constant internal magnitude = 2**128;\r\n\r\n  uint256 internal magnifiedDividendPerShare;\r\n\r\n  // About dividendCorrection:\r\n  // If the token balance of a `_user` is never changed, the dividend of `_user` can be computed with:\r\n  //   `dividendOf(_user) = dividendPerShare * balanceOf(_user)`.\r\n  // When `balanceOf(_user)` is changed (via minting/burning/transferring tokens),\r\n  //   `dividendOf(_user)` should not be changed,\r\n  //   but the computed value of `dividendPerShare * balanceOf(_user)` is changed.\r\n  // To keep the `dividendOf(_user)` unchanged, we add a correction term:\r\n  //   `dividendOf(_user) = dividendPerShare * balanceOf(_user) + dividendCorrectionOf(_user)`,\r\n  //   where `dividendCorrectionOf(_user)` is updated whenever `balanceOf(_user)` is changed:\r\n  //   `dividendCorrectionOf(_user) = dividendPerShare * (old balanceOf(_user)) - (new balanceOf(_user))`.\r\n  // So now `dividendOf(_user)` returns the same value before and after `balanceOf(_user)` is changed.\r\n  mapping(address => int256) internal magnifiedDividendCorrections;\r\n  mapping(address => uint256) internal withdrawnDividends;\r\n\r\n  uint256 public totalDividendsDistributed;\r\n\r\n  constructor(string memory _name, string memory _symbol) public ERC20(_name, _symbol) {\r\n\r\n  }\r\n\r\n\r\n  function distributeCAKEDividends(uint256 amount) public onlyOwner{\r\n    require(totalSupply() > 0);\r\n\r\n    if (amount > 0) {\r\n      magnifiedDividendPerShare = magnifiedDividendPerShare.add(\r\n        (amount).mul(magnitude) / totalSupply()\r\n      );\r\n      emit DividendsDistributed(msg.sender, amount);\r\n\r\n      totalDividendsDistributed = totalDividendsDistributed.add(amount);\r\n    }\r\n  }\r\n\r\n  /// @notice Withdraws the ether distributed to the sender.\r\n  /// @dev It emits a `DividendWithdrawn` event if the amount of withdrawn ether is greater than 0.\r\n  function withdrawDividend() public virtual override {\r\n    _withdrawDividendOfUser(msg.sender);\r\n  }\r\n\r\n  /// @notice Withdraws the ether distributed to the sender.\r\n  /// @dev It emits a `DividendWithdrawn` event if the amount of withdrawn ether is greater than 0.\r\n function _withdrawDividendOfUser(address payable user) internal returns (uint256) {\r\n    uint256 _withdrawableDividend = withdrawableDividendOf(user);\r\n    if (_withdrawableDividend > 0) {\r\n      withdrawnDividends[user] = withdrawnDividends[user].add(_withdrawableDividend);\r\n      emit DividendWithdrawn(user, _withdrawableDividend);\r\n      bool success = IERC20(CAKE).transfer(user, _withdrawableDividend);\r\n\r\n      if(!success) {\r\n        withdrawnDividends[user] = withdrawnDividends[user].sub(_withdrawableDividend);\r\n        return 0;\r\n      }\r\n\r\n      return _withdrawableDividend;\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n\r\n  /// @notice View the amount of dividend in wei that an address can withdraw.\r\n  /// @param _owner The address of a token holder.\r\n  /// @return The amount of dividend in wei that `_owner` can withdraw.\r\n  function dividendOf(address _owner) public view override returns(uint256) {\r\n    return withdrawableDividendOf(_owner);\r\n  }\r\n\r\n  /// @notice View the amount of dividend in wei that an address can withdraw.\r\n  /// @param _owner The address of a token holder.\r\n  /// @return The amount of dividend in wei that `_owner` can withdraw.\r\n  function withdrawableDividendOf(address _owner) public view override returns(uint256) {\r\n    return accumulativeDividendOf(_owner).sub(withdrawnDividends[_owner]);\r\n  }\r\n\r\n  /// @notice View the amount of dividend in wei that an address has withdrawn.\r\n  /// @param _owner The address of a token holder.\r\n  /// @return The amount of dividend in wei that `_owner` has withdrawn.\r\n  function withdrawnDividendOf(address _owner) public view override returns(uint256) {\r\n    return withdrawnDividends[_owner];\r\n  }\r\n\r\n\r\n  /// @notice View the amount of dividend in wei that an address has earned in total.\r\n  /// @dev accumulativeDividendOf(_owner) = withdrawableDividendOf(_owner) + withdrawnDividendOf(_owner)\r\n  /// = (magnifiedDividendPerShare * balanceOf(_owner) + magnifiedDividendCorrections[_owner]) / magnitude\r\n  /// @param _owner The address of a token holder.\r\n  /// @return The amount of dividend in wei that `_owner` has earned in total.\r\n  function accumulativeDividendOf(address _owner) public view override returns(uint256) {\r\n    return magnifiedDividendPerShare.mul(balanceOf(_owner)).toInt256Safe()\r\n      .add(magnifiedDividendCorrections[_owner]).toUint256Safe() / magnitude;\r\n  }\r\n\r\n  /// @dev Internal function that transfer tokens from one address to another.\r\n  /// Update magnifiedDividendCorrections to keep dividends unchanged.\r\n  /// @param from The address to transfer from.\r\n  /// @param to The address to transfer to.\r\n  /// @param value The amount to be transferred.\r\n  function _transfer(address from, address to, uint256 value) internal virtual override {\r\n    require(false);\r\n\r\n    int256 _magCorrection = magnifiedDividendPerShare.mul(value).toInt256Safe();\r\n    magnifiedDividendCorrections[from] = magnifiedDividendCorrections[from].add(_magCorrection);\r\n    magnifiedDividendCorrections[to] = magnifiedDividendCorrections[to].sub(_magCorrection);\r\n  }\r\n\r\n  /// @dev Internal function that mints tokens to an account.\r\n  /// Update magnifiedDividendCorrections to keep dividends unchanged.\r\n  /// @param account The account that will receive the created tokens.\r\n  /// @param value The amount that will be created.\r\n  function _mint(address account, uint256 value) internal override {\r\n    super._mint(account, value);\r\n\r\n    magnifiedDividendCorrections[account] = magnifiedDividendCorrections[account]\r\n      .sub( (magnifiedDividendPerShare.mul(value)).toInt256Safe() );\r\n  }\r\n\r\n  /// @dev Internal function that burns an amount of the token of a given account.\r\n  /// Update magnifiedDividendCorrections to keep dividends unchanged.\r\n  /// @param account The account whose tokens will be burnt.\r\n  /// @param value The amount that will be burnt.\r\n  function _burn(address account, uint256 value) internal override {\r\n    super._burn(account, value);\r\n\r\n    magnifiedDividendCorrections[account] = magnifiedDividendCorrections[account]\r\n      .add( (magnifiedDividendPerShare.mul(value)).toInt256Safe() );\r\n  }\r\n\r\n  function _setBalance(address account, uint256 newBalance) internal {\r\n    uint256 currentBalance = balanceOf(account);\r\n\r\n    if(newBalance > currentBalance) {\r\n      uint256 mintAmount = newBalance.sub(currentBalance);\r\n      _mint(account, mintAmount);\r\n    } else if(newBalance < currentBalance) {\r\n      uint256 burnAmount = currentBalance.sub(newBalance);\r\n      _burn(account, burnAmount);\r\n    }\r\n  }\r\n}\r\n"
			},
			"Ownable.sol": {
				"content": "pragma solidity ^0.6.2;\r\n\r\n// SPDX-License-Identifier: MIT License\r\n\r\nimport \"./Context.sol\";\r\n\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor () public {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\n"
			},
			"DividendPayingTokenOptionalInterface.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.2;\r\n\r\n\r\n/// @title Dividend-Paying Token Optional Interface\r\n/// @author Roger Wu (https://github.com/roger-wu)\r\n/// @dev OPTIONAL functions for a dividend-paying token contract.\r\ninterface DividendPayingTokenOptionalInterface {\r\n  /// @notice View the amount of dividend in wei that an address can withdraw.\r\n  /// @param _owner The address of a token holder.\r\n  /// @return The amount of dividend in wei that `_owner` can withdraw.\r\n  function withdrawableDividendOf(address _owner) external view returns(uint256);\r\n\r\n  /// @notice View the amount of dividend in wei that an address has withdrawn.\r\n  /// @param _owner The address of a token holder.\r\n  /// @return The amount of dividend in wei that `_owner` has withdrawn.\r\n  function withdrawnDividendOf(address _owner) external view returns(uint256);\r\n\r\n  /// @notice View the amount of dividend in wei that an address has earned in total.\r\n  /// @dev accumulativeDividendOf(_owner) = withdrawableDividendOf(_owner) + withdrawnDividendOf(_owner)\r\n  /// @param _owner The address of a token holder.\r\n  /// @return The amount of dividend in wei that `_owner` has earned in total.\r\n  function accumulativeDividendOf(address _owner) external view returns(uint256);\r\n}\r\n"
			},
			"DividendPayingTokenInterface.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.2;\r\n\r\n\r\n/// @title Dividend-Paying Token Interface\r\n/// @author Roger Wu (https://github.com/roger-wu)\r\n/// @dev An interface for a dividend-paying token contract.\r\ninterface DividendPayingTokenInterface {\r\n  /// @notice View the amount of dividend in wei that an address can withdraw.\r\n  /// @param _owner The address of a token holder.\r\n  /// @return The amount of dividend in wei that `_owner` can withdraw.\r\n  function dividendOf(address _owner) external view returns(uint256);\r\n\r\n\r\n  /// @notice Withdraws the ether distributed to the sender.\r\n  /// @dev SHOULD transfer `dividendOf(msg.sender)` wei to `msg.sender`, and `dividendOf(msg.sender)` SHOULD be 0 after the transfer.\r\n  ///  MUST emit a `DividendWithdrawn` event if the amount of ether transferred is greater than 0.\r\n  function withdrawDividend() external;\r\n\r\n  /// @dev This event MUST emit when ether is distributed to token holders.\r\n  /// @param from The address which sends ether to this contract.\r\n  /// @param weiAmount The amount of distributed ether in wei.\r\n  event DividendsDistributed(\r\n    address indexed from,\r\n    uint256 weiAmount\r\n  );\r\n\r\n  /// @dev This event MUST emit when an address withdraws their dividend.\r\n  /// @param to The address which withdraws ether from this contract.\r\n  /// @param weiAmount The amount of withdrawn ether in wei.\r\n  event DividendWithdrawn(\r\n    address indexed to,\r\n    uint256 weiAmount\r\n  );\r\n}\r\n"
			},
			"SafeMathInt.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\n/*\r\nMIT License\r\n\r\nCopyright (c) 2018 requestnetwork\r\nCopyright (c) 2018 Fragments, Inc.\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n*/\r\n\r\npragma solidity ^0.6.2;\r\n\r\n/**\r\n * @title SafeMathInt\r\n * @dev Math operations for int256 with overflow safety checks.\r\n */\r\nlibrary SafeMathInt {\r\n    int256 private constant MIN_INT256 = int256(1) << 255;\r\n    int256 private constant MAX_INT256 = ~(int256(1) << 255);\r\n\r\n    /**\r\n     * @dev Multiplies two int256 variables and fails on overflow.\r\n     */\r\n    function mul(int256 a, int256 b) internal pure returns (int256) {\r\n        int256 c = a * b;\r\n\r\n        // Detect overflow when multiplying MIN_INT256 with -1\r\n        require(c != MIN_INT256 || (a & MIN_INT256) != (b & MIN_INT256));\r\n        require((b == 0) || (c / b == a));\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Division of two int256 variables and fails on overflow.\r\n     */\r\n    function div(int256 a, int256 b) internal pure returns (int256) {\r\n        // Prevent overflow when dividing MIN_INT256 by -1\r\n        require(b != -1 || a != MIN_INT256);\r\n\r\n        // Solidity already throws when dividing by 0.\r\n        return a / b;\r\n    }\r\n\r\n    /**\r\n     * @dev Subtracts two int256 variables and fails on overflow.\r\n     */\r\n    function sub(int256 a, int256 b) internal pure returns (int256) {\r\n        int256 c = a - b;\r\n        require((b >= 0 && c <= a) || (b < 0 && c > a));\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Adds two int256 variables and fails on overflow.\r\n     */\r\n    function add(int256 a, int256 b) internal pure returns (int256) {\r\n        int256 c = a + b;\r\n        require((b >= 0 && c >= a) || (b < 0 && c < a));\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Converts to absolute value, and fails on overflow.\r\n     */\r\n    function abs(int256 a) internal pure returns (int256) {\r\n        require(a != MIN_INT256);\r\n        return a < 0 ? -a : a;\r\n    }\r\n\r\n\r\n    function toUint256Safe(int256 a) internal pure returns (uint256) {\r\n        require(a >= 0);\r\n        return uint256(a);\r\n    }\r\n}\r\n"
			},
			"SafeMathUint.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.2;\r\n\r\n/**\r\n * @title SafeMathUint\r\n * @dev Math operations with safety checks that revert on error\r\n */\r\nlibrary SafeMathUint {\r\n  function toInt256Safe(uint256 a) internal pure returns (int256) {\r\n    int256 b = int256(a);\r\n    require(b >= 0);\r\n    return b;\r\n  }\r\n}\r\n"
			},
			"SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.2;\r\n\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts with custom message when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n"
			},
			"ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.2;\r\n\r\nimport \"./IERC20.sol\";\r\nimport \"./IERC20Metadata.sol\";\r\nimport \"./Context.sol\";\r\nimport \"./SafeMath.sol\";\r\n\r\n/**\r\n * @dev Implementation of the {IERC20} interface.\r\n *\r\n * This implementation is agnostic to the way tokens are created. This means\r\n * that a supply mechanism has to be added in a derived contract using {_mint}.\r\n * For a generic mechanism see {ERC20PresetMinterPauser}.\r\n *\r\n * TIP: For a detailed writeup see our guide\r\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\r\n * to implement supply mechanisms].\r\n *\r\n * We have followed general OpenZeppelin guidelines: functions revert instead\r\n * of returning `false` on failure. This behavior is nonetheless conventional\r\n * and does not conflict with the expectations of ERC20 applications.\r\n *\r\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\r\n * This allows applications to reconstruct the allowance for all accounts just\r\n * by listening to said events. Other implementations of the EIP may not emit\r\n * these events, as it isn't required by the specification.\r\n *\r\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\r\n * functions have been added to mitigate the well-known issues around setting\r\n * allowances. See {IERC20-approve}.\r\n */\r\ncontract ERC20 is Context, IERC20, IERC20Metadata {\r\n    using SafeMath for uint256;\r\n\r\n    mapping(address => uint256) private _balances;\r\n\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n\r\n    /**\r\n     * @dev Sets the values for {name} and {symbol}.\r\n     *\r\n     * The default value of {decimals} is 18. To select a different value for\r\n     * {decimals} you should overload it.\r\n     *\r\n     * All two of these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    constructor(string memory name_, string memory symbol_) public {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\r\n     * overridden;\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IERC20-balanceOf} and {IERC20-transfer}.\r\n     */\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return 18;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-totalSupply}.\r\n     */\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-balanceOf}.\r\n     */\r\n    function balanceOf(address account) public view virtual override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `recipient` cannot be the zero address.\r\n     * - the caller must have a balance of at least `amount`.\r\n     */\r\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-allowance}.\r\n     */\r\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-approve}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {ERC20}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `sender` and `recipient` cannot be the zero address.\r\n     * - `sender` must have a balance of at least `amount`.\r\n     * - the caller must have allowance for ``sender``'s tokens of at least\r\n     * `amount`.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) public virtual override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `spender` must have allowance for the caller of at least\r\n     * `subtractedValue`.\r\n     */\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\r\n     *\r\n     * This is internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `sender` cannot be the zero address.\r\n     * - `recipient` cannot be the zero address.\r\n     * - `sender` must have a balance of at least `amount`.\r\n     */\r\n    function _transfer(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\r\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\r\n\r\n        _beforeTokenTransfer(sender, recipient, amount);\r\n\r\n        _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\r\n        _balances[recipient] = _balances[recipient].add(amount);\r\n        emit Transfer(sender, recipient, amount);\r\n    }\r\n\r\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n     * the total supply.\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     */\r\n    function _mint(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: mint to the zero address\");\r\n\r\n        _beforeTokenTransfer(address(0), account, amount);\r\n\r\n        _totalSupply = _totalSupply.add(amount);\r\n        _balances[account] = _balances[account].add(amount);\r\n        emit Transfer(address(0), account, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from `account`, reducing the\r\n     * total supply.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     * - `account` must have at least `amount` tokens.\r\n     */\r\n    function _burn(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: burn from the zero address\");\r\n\r\n        _beforeTokenTransfer(account, address(0), amount);\r\n\r\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\r\n        _totalSupply = _totalSupply.sub(amount);\r\n        emit Transfer(account, address(0), amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\r\n     *\r\n     * This internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * will be to transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _beforeTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n}\r\n"
			},
			"Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.2;\r\n\r\n/*\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n}\r\n"
			},
			"IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.2;\r\n\r\nimport \"./IERC20.sol\";\r\n\r\n/**\r\n * @dev Interface for the optional metadata functions from the ERC20 standard.\r\n *\r\n * _Available since v4.1._\r\n */\r\ninterface IERC20Metadata is IERC20 {\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the decimals places of the token.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n}\r\n"
			},
			"IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.2;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0x2bfee1b62dd98b0558681cb9428ef6ac972433cb68faaacc33a70a8bd221fadc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1754beb271b4f01fb27a92d7aadc97b588a7d4c3dc4baac35b9a70408f899ccb\",\"dweb:/ipfs/QmRf3v2AFo8utJGcTJmwPDqvWjLkXajZYo3yMTCgpWYKuz\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"DividendPayingToken.sol": {
				"DividendPayingToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "weiAmount",
									"type": "uint256"
								}
							],
							"name": "DividendWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "weiAmount",
									"type": "uint256"
								}
							],
							"name": "DividendsDistributed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "CAKE",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "accumulativeDividendOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "distributeCAKEDividends",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "dividendOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalDividendsDistributed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawDividend",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "withdrawableDividendOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "withdrawnDividendOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Roger Wu (https://github.com/roger-wu)",
						"details": "A mintable ERC20 token that allows anyone to pay and distribute ether  to token holders as dividends and allows token holders to withdraw their dividends.  Reference: the source code of PoWH3D: https://etherscan.io/address/0xB3775fB83F7D12A36E0475aBdD1FCA35c091efBe#code",
						"kind": "dev",
						"methods": {
							"accumulativeDividendOf(address)": {
								"details": "accumulativeDividendOf(_owner) = withdrawableDividendOf(_owner) + withdrawnDividendOf(_owner) = (magnifiedDividendPerShare * balanceOf(_owner) + magnifiedDividendCorrections[_owner]) / magnitude",
								"params": {
									"_owner": "The address of a token holder."
								},
								"returns": {
									"_0": "The amount of dividend in wei that `_owner` has earned in total."
								}
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"dividendOf(address)": {
								"params": {
									"_owner": "The address of a token holder."
								},
								"returns": {
									"_0": "The amount of dividend in wei that `_owner` can withdraw."
								}
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdrawDividend()": {
								"details": "It emits a `DividendWithdrawn` event if the amount of withdrawn ether is greater than 0."
							},
							"withdrawableDividendOf(address)": {
								"params": {
									"_owner": "The address of a token holder."
								},
								"returns": {
									"_0": "The amount of dividend in wei that `_owner` can withdraw."
								}
							},
							"withdrawnDividendOf(address)": {
								"params": {
									"_owner": "The address of a token holder."
								},
								"returns": {
									"_0": "The amount of dividend in wei that `_owner` has withdrawn."
								}
							}
						},
						"title": "Dividend-Paying Token",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"DividendPayingToken.sol\":676:7890  contract DividendPayingToken is ERC20, Ownable, DividendPayingTokenInterface, DividendPayingTokenOptionalInterface {\r... */\n  mstore(0x40, 0xa0)\n    /* \"DividendPayingToken.sol\":897:980  address public immutable CAKE = address(0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82) */\n  mstore(0x80, 0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82000000000000000000000000)\n    /* \"DividendPayingToken.sol\":2429:2522  constructor(string memory _name, string memory _symbol) public ERC20(_name, _symbol) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x40\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  swap1\n  dup4\n  add\n  swap1\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  dup3\n  mload\n  0x0100000000\n  dup2\n  gt\n  dup3\n  dup3\n  add\n  dup9\n  lt\n  or\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  dup3\n  mstore\n  pop\n  dup2\n  mload\n  0x20\n  swap2\n  dup3\n  add\n  swap3\n  swap1\n  swap2\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_6:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_8\n  jumpi\n  dup2\n  dup2\n  add\n  mload\n  dup4\n  dup3\n  add\n  mstore\n  0x20\n  add\n  jump(tag_6)\ntag_8:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_10\n  jumpi\n  0x00\n  dup1\n  revert\ntag_10:\n  swap1\n  dup4\n  add\n  swap1\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  0x00\n  dup1\n  revert\ntag_11:\n  dup3\n  mload\n  0x0100000000\n  dup2\n  gt\n  dup3\n  dup3\n  add\n  dup9\n  lt\n  or\n  iszero\n  tag_12\n  jumpi\n  0x00\n  dup1\n  revert\ntag_12:\n  dup3\n  mstore\n  pop\n  dup2\n  mload\n  0x20\n  swap2\n  dup3\n  add\n  swap3\n  swap1\n  swap2\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_13:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_15\n  jumpi\n  dup2\n  dup2\n  add\n  mload\n  dup4\n  dup3\n  add\n  mstore\n  0x20\n  add\n  jump(tag_13)\ntag_15:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_16\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_16:\n  pop\n  0x40\n  mstore\n  pop\n  pop\n    /* \"ERC20.sol\":2061:2074  _name = name_ */\n  dup3\n  mload\n    /* \"DividendPayingToken.sol\":2498:2503  _name */\n  dup4\n  swap2\n  pop\n    /* \"DividendPayingToken.sol\":2505:2512  _symbol */\n  dup3\n  swap1\n    /* \"ERC20.sol\":2061:2074  _name = name_ */\n  tag_21\n  swap1\n    /* \"ERC20.sol\":2061:2066  _name */\n  0x03\n  swap1\n    /* \"ERC20.sol\":2061:2074  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n  pop\n    /* \"ERC20.sol\":2085:2102  _symbol = symbol_ */\n  dup1\n  mload\n  tag_23\n  swap1\n    /* \"ERC20.sol\":2085:2092  _symbol */\n  0x04\n  swap1\n    /* \"ERC20.sol\":2085:2102  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_22\n  jump\t// in\ntag_23:\n  pop\n    /* \"ERC20.sol\":1987:2110  constructor(string memory name_, string memory symbol_) public {\r... */\n  pop\n  pop\n    /* \"Ownable.sol\":387:404  address msgSender */\n  0x00\n    /* \"Ownable.sol\":407:419  _msgSender() */\n  tag_25\n    /* \"Ownable.sol\":407:417  _msgSender */\n  shl(0x20, tag_26)\n    /* \"Ownable.sol\":407:419  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_25:\n    /* \"Ownable.sol\":430:436  _owner */\n  0x05\n    /* \"Ownable.sol\":430:448  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"Ownable.sol\":464:507  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"Ownable.sol\":430:448  _owner = msgSender */\n  swap2\n  swap3\n  pop\n  swap1\n  0x00\n  swap1\n    /* \"Ownable.sol\":464:507  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n  dup3\n  swap1\n  log3\n    /* \"Ownable.sol\":354:515  constructor () public {\r... */\n  pop\n    /* \"DividendPayingToken.sol\":2429:2522  constructor(string memory _name, string memory _symbol) public ERC20(_name, _symbol) {\r... */\n  pop\n  pop\n    /* \"DividendPayingToken.sol\":676:7890  contract DividendPayingToken is ERC20, Ownable, DividendPayingTokenInterface, DividendPayingTokenOptionalInterface {\r... */\n  jump(tag_28)\n    /* \"Context.sol\":601:699  function _msgSender() internal view virtual returns (address) {\r... */\ntag_26:\n    /* \"Context.sol\":681:691  msg.sender */\n  caller\n    /* \"Context.sol\":601:699  function _msgSender() internal view virtual returns (address) {\r... */\n  swap1\n  jump\t// out\n    /* \"DividendPayingToken.sol\":676:7890  contract DividendPayingToken is ERC20, Ownable, DividendPayingTokenInterface, DividendPayingTokenOptionalInterface {\r... */\ntag_22:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_31\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_33)\ntag_31:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_33\n  jumpi\n  swap2\n  dup3\n  add\ntag_32:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_33\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_32)\ntag_33:\n  pop\n  tag_34\n  swap3\n  swap2\n  pop\n  tag_35\n  jump\t// in\ntag_34:\n  pop\n  swap1\n  jump\t// out\ntag_35:\ntag_36:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_34\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_36)\ntag_28:\n  shr(0x60, mload(0x80))\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  assignImmutable(\"0x6590fa52fa76f967656340b874bc9ca09733c2fddea9886210ebcbbceee04b35\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"DividendPayingToken.sol\":676:7890  contract DividendPayingToken is ERC20, Ownable, DividendPayingTokenInterface, DividendPayingTokenOptionalInterface {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x85a6b3ae\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xa8b9d240\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xa8b9d240\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xaafd847a\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xba72a955\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x85a6b3ae\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x91b89fba\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x313ce567\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x4ca6ef28\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6a474002\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x27ce0147\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ERC20.sol\":2180:2280  function name() public view virtual override returns (string memory) {\r... */\n    tag_3:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_30:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_32\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_30)\n    tag_32:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_33\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_33:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":4347:4516  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_4:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_36\n      jump\t// in\n    tag_34:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ERC20.sol\":3300:3408  function totalSupply() public view virtual override returns (uint256) {\r... */\n    tag_5:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ERC20.sol\":4998:5353  function transferFrom(\r... */\n    tag_6:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_41\n      jump\t// in\n        /* \"DividendPayingToken.sol\":5475:5722  function accumulativeDividendOf(address _owner) public view override returns(uint256) {\r... */\n    tag_7:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_44\n      jump\t// in\n        /* \"ERC20.sol\":3142:3235  function decimals() public view virtual override returns (uint8) {\r... */\n    tag_8:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ERC20.sol\":5762:5980  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r... */\n    tag_9:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_49\n      jump\t// in\n        /* \"DividendPayingToken.sol\":897:980  address public immutable CAKE = address(0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82) */\n    tag_10:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"DividendPayingToken.sol\":3090:3190  function withdrawDividend() public virtual override {\r... */\n    tag_11:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      stop\n        /* \"ERC20.sol\":3471:3598  function balanceOf(address account) public view virtual override returns (uint256) {\r... */\n    tag_12:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_56\n      jump\t// in\n        /* \"Ownable.sol\":1238:1386  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_13:\n      tag_52\n      tag_58\n      jump\t// in\n        /* \"DividendPayingToken.sol\":2382:2422  uint256 public totalDividendsDistributed */\n    tag_14:\n      tag_37\n      tag_60\n      jump\t// in\n        /* \"Ownable.sol\":596:675  function owner() public view returns (address) {\r... */\n    tag_15:\n      tag_50\n      tag_62\n      jump\t// in\n        /* \"DividendPayingToken.sol\":4189:4313  function dividendOf(address _owner) public view override returns(uint256) {\r... */\n    tag_16:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_65\n      jump\t// in\n        /* \"ERC20.sol\":2399:2503  function symbol() public view virtual override returns (string memory) {\r... */\n    tag_17:\n      tag_28\n      tag_67\n      jump\t// in\n        /* \"ERC20.sol\":6483:6752  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r... */\n    tag_18:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_74\n      jump\t// in\n        /* \"DividendPayingToken.sol\":4524:4692  function withdrawableDividendOf(address _owner) public view override returns(uint256) {\r... */\n    tag_19:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_77\n      jump\t// in\n        /* \"ERC20.sol\":3811:3986  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_20:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_80\n      jump\t// in\n        /* \"DividendPayingToken.sol\":4905:5034  function withdrawnDividendOf(address _owner) public view override returns(uint256) {\r... */\n    tag_21:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_83\n      jump\t// in\n        /* \"DividendPayingToken.sol\":2530:2921  function distributeCAKEDividends(uint256 amount) public onlyOwner{\r... */\n    tag_22:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      calldataload\n      tag_86\n      jump\t// in\n        /* \"ERC20.sol\":4049:4200  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n    tag_23:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_89\n      jump\t// in\n        /* \"Ownable.sol\":1541:1785  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_24:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_92\n      jump\t// in\n        /* \"ERC20.sol\":2180:2280  function name() public view virtual override returns (string memory) {\r... */\n    tag_29:\n        /* \"ERC20.sol\":2267:2272  _name */\n      0x03\n        /* \"ERC20.sol\":2260:2272  return _name */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"ERC20.sol\":2234:2247  string memory */\n      0x60\n      swap4\n        /* \"ERC20.sol\":2260:2272  return _name */\n      swap1\n      swap3\n        /* \"ERC20.sol\":2267:2272  _name */\n      swap1\n      swap2\n        /* \"ERC20.sol\":2260:2272  return _name */\n      dup4\n      add\n        /* \"ERC20.sol\":2267:2272  _name */\n      dup3\n        /* \"ERC20.sol\":2260:2272  return _name */\n      dup3\n      dup1\n      iszero\n      tag_94\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_95\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_94)\n    tag_95:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_96:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_96\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_94:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC20.sol\":2180:2280  function name() public view virtual override returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":4347:4516  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_36:\n        /* \"ERC20.sol\":4430:4434  bool */\n      0x00\n        /* \"ERC20.sol\":4447:4486  _approve(_msgSender(), spender, amount) */\n      tag_98\n        /* \"ERC20.sol\":4456:4468  _msgSender() */\n      tag_99\n        /* \"ERC20.sol\":4456:4466  _msgSender */\n      tag_100\n        /* \"ERC20.sol\":4456:4468  _msgSender() */\n      jump\t// in\n    tag_99:\n        /* \"ERC20.sol\":4470:4477  spender */\n      dup5\n        /* \"ERC20.sol\":4479:4485  amount */\n      dup5\n        /* \"ERC20.sol\":4447:4455  _approve */\n      tag_101\n        /* \"ERC20.sol\":4447:4486  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_98:\n      pop\n        /* \"ERC20.sol\":4504:4508  true */\n      0x01\n        /* \"ERC20.sol\":4347:4516  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_97:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":3300:3408  function totalSupply() public view virtual override returns (uint256) {\r... */\n    tag_38:\n        /* \"ERC20.sol\":3388:3400  _totalSupply */\n      sload(0x02)\n        /* \"ERC20.sol\":3300:3408  function totalSupply() public view virtual override returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":4998:5353  function transferFrom(\r... */\n    tag_41:\n        /* \"ERC20.sol\":5138:5142  bool */\n      0x00\n        /* \"ERC20.sol\":5155:5191  _transfer(sender, recipient, amount) */\n      tag_104\n        /* \"ERC20.sol\":5165:5171  sender */\n      dup5\n        /* \"ERC20.sol\":5173:5182  recipient */\n      dup5\n        /* \"ERC20.sol\":5184:5190  amount */\n      dup5\n        /* \"ERC20.sol\":5155:5164  _transfer */\n      tag_2\n        /* \"ERC20.sol\":5155:5191  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_104:\n        /* \"ERC20.sol\":5202:5323  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_106\n        /* \"ERC20.sol\":5211:5217  sender */\n      dup5\n        /* \"ERC20.sol\":5219:5231  _msgSender() */\n      tag_107\n        /* \"ERC20.sol\":5219:5229  _msgSender */\n      tag_100\n        /* \"ERC20.sol\":5219:5231  _msgSender() */\n      jump\t// in\n    tag_107:\n        /* \"ERC20.sol\":5233:5322  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_108\n        /* \"ERC20.sol\":5271:5277  amount */\n      dup6\n        /* \"ERC20.sol\":5233:5322  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5233:5252  _allowances[sender] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":5233:5244  _allowances */\n      0x01\n        /* \"ERC20.sol\":5233:5252  _allowances[sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"ERC20.sol\":5253:5265  _msgSender() */\n      tag_109\n        /* \"ERC20.sol\":5253:5263  _msgSender */\n      tag_100\n        /* \"ERC20.sol\":5253:5265  _msgSender() */\n      jump\t// in\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5233:5266  _allowances[sender][_msgSender()] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      swap2\n        /* \"ERC20.sol\":5233:5322  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap1\n        /* \"ERC20.sol\":5233:5270  _allowances[sender][_msgSender()].sub */\n      tag_110\n        /* \"ERC20.sol\":5233:5322  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      jump\t// in\n    tag_108:\n        /* \"ERC20.sol\":5202:5210  _approve */\n      tag_101\n        /* \"ERC20.sol\":5202:5323  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_106:\n      pop\n        /* \"ERC20.sol\":5341:5345  true */\n      0x01\n        /* \"ERC20.sol\":4998:5353  function transferFrom(\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DividendPayingToken.sol\":5475:5722  function accumulativeDividendOf(address _owner) public view override returns(uint256) {\r... */\n    tag_44:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DividendPayingToken.sol\":5651:5687  magnifiedDividendCorrections[_owner] */\n      dup2\n      and\n        /* \"DividendPayingToken.sol\":5552:5559  uint256 */\n      0x00\n        /* \"DividendPayingToken.sol\":5651:5687  magnifiedDividendCorrections[_owner] */\n      swap1\n      dup2\n      mstore\n        /* \"DividendPayingToken.sol\":5651:5679  magnifiedDividendCorrections */\n      0x07\n        /* \"DividendPayingToken.sol\":5651:5687  magnifiedDividendCorrections[_owner] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      shl(0x80, 0x01)\n        /* \"DividendPayingToken.sol\":1288:1294  2**128 */\n      swap1\n        /* \"DividendPayingToken.sol\":5575:5704  magnifiedDividendPerShare.mul(balanceOf(_owner)).toInt256Safe()\r... */\n      tag_112\n      swap1\n        /* \"DividendPayingToken.sol\":5575:5688  magnifiedDividendPerShare.mul(balanceOf(_owner)).toInt256Safe()\r... */\n      tag_113\n      swap1\n        /* \"DividendPayingToken.sol\":5575:5638  magnifiedDividendPerShare.mul(balanceOf(_owner)).toInt256Safe() */\n      tag_114\n        /* \"DividendPayingToken.sol\":5575:5623  magnifiedDividendPerShare.mul(balanceOf(_owner)) */\n      tag_115\n        /* \"DividendPayingToken.sol\":5605:5622  balanceOf(_owner) */\n      tag_116\n        /* \"DividendPayingToken.sol\":5680:5686  _owner */\n      dup9\n        /* \"DividendPayingToken.sol\":5605:5614  balanceOf */\n      tag_56\n        /* \"DividendPayingToken.sol\":5605:5622  balanceOf(_owner) */\n      jump\t// in\n    tag_116:\n        /* \"DividendPayingToken.sol\":5575:5600  magnifiedDividendPerShare */\n      sload(0x06)\n      swap1\n        /* \"DividendPayingToken.sol\":5575:5604  magnifiedDividendPerShare.mul */\n      tag_117\n        /* \"DividendPayingToken.sol\":5575:5623  magnifiedDividendPerShare.mul(balanceOf(_owner)) */\n      jump\t// in\n    tag_115:\n        /* \"DividendPayingToken.sol\":5575:5636  magnifiedDividendPerShare.mul(balanceOf(_owner)).toInt256Safe */\n      tag_118\n        /* \"DividendPayingToken.sol\":5575:5638  magnifiedDividendPerShare.mul(balanceOf(_owner)).toInt256Safe() */\n      jump\t// in\n    tag_114:\n        /* \"DividendPayingToken.sol\":5575:5650  magnifiedDividendPerShare.mul(balanceOf(_owner)).toInt256Safe()\r... */\n      swap1\n      tag_119\n        /* \"DividendPayingToken.sol\":5575:5688  magnifiedDividendPerShare.mul(balanceOf(_owner)).toInt256Safe()\r... */\n      jump\t// in\n    tag_113:\n        /* \"DividendPayingToken.sol\":5575:5702  magnifiedDividendPerShare.mul(balanceOf(_owner)).toInt256Safe()\r... */\n      tag_120\n        /* \"DividendPayingToken.sol\":5575:5704  magnifiedDividendPerShare.mul(balanceOf(_owner)).toInt256Safe()\r... */\n      jump\t// in\n    tag_112:\n        /* \"DividendPayingToken.sol\":5575:5716  magnifiedDividendPerShare.mul(balanceOf(_owner)).toInt256Safe()\r... */\n      dup2\n      tag_121\n      jumpi\n      invalid\n    tag_121:\n      div\n        /* \"DividendPayingToken.sol\":5568:5716  return magnifiedDividendPerShare.mul(balanceOf(_owner)).toInt256Safe()\r... */\n      swap1\n      pop\n        /* \"DividendPayingToken.sol\":5475:5722  function accumulativeDividendOf(address _owner) public view override returns(uint256) {\r... */\n    tag_111:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":3142:3235  function decimals() public view virtual override returns (uint8) {\r... */\n    tag_46:\n        /* \"ERC20.sol\":3225:3227  18 */\n      0x12\n        /* \"ERC20.sol\":3142:3235  function decimals() public view virtual override returns (uint8) {\r... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":5762:5980  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r... */\n    tag_49:\n        /* \"ERC20.sol\":5850:5854  bool */\n      0x00\n        /* \"ERC20.sol\":5867:5950  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_98\n        /* \"ERC20.sol\":5876:5888  _msgSender() */\n      tag_125\n        /* \"ERC20.sol\":5876:5886  _msgSender */\n      tag_100\n        /* \"ERC20.sol\":5876:5888  _msgSender() */\n      jump\t// in\n    tag_125:\n        /* \"ERC20.sol\":5890:5897  spender */\n      dup5\n        /* \"ERC20.sol\":5899:5949  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_108\n        /* \"ERC20.sol\":5938:5948  addedValue */\n      dup6\n        /* \"ERC20.sol\":5899:5910  _allowances */\n      0x01\n        /* \"ERC20.sol\":5899:5924  _allowances[_msgSender()] */\n      0x00\n        /* \"ERC20.sol\":5911:5923  _msgSender() */\n      tag_127\n        /* \"ERC20.sol\":5911:5921  _msgSender */\n      tag_100\n        /* \"ERC20.sol\":5911:5923  _msgSender() */\n      jump\t// in\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5899:5924  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"ERC20.sol\":5899:5933  _allowances[_msgSender()][spender] */\n      swap2\n      dup13\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"ERC20.sol\":5899:5937  _allowances[_msgSender()][spender].add */\n      tag_128\n        /* \"ERC20.sol\":5899:5949  _allowances[_msgSender()][spender].add(addedValue) */\n      jump\t// in\n        /* \"DividendPayingToken.sol\":897:980  address public immutable CAKE = address(0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82) */\n    tag_51:\n      immutable(\"0x6590fa52fa76f967656340b874bc9ca09733c2fddea9886210ebcbbceee04b35\")\n      dup2\n      jump\t// out\n        /* \"DividendPayingToken.sol\":3090:3190  function withdrawDividend() public virtual override {\r... */\n    tag_53:\n        /* \"DividendPayingToken.sol\":3149:3184  _withdrawDividendOfUser(msg.sender) */\n      tag_130\n        /* \"DividendPayingToken.sol\":3173:3183  msg.sender */\n      caller\n        /* \"DividendPayingToken.sol\":3149:3172  _withdrawDividendOfUser */\n      tag_131\n        /* \"DividendPayingToken.sol\":3149:3184  _withdrawDividendOfUser(msg.sender) */\n      jump\t// in\n    tag_130:\n      pop\n        /* \"DividendPayingToken.sol\":3090:3190  function withdrawDividend() public virtual override {\r... */\n      jump\t// out\n        /* \"ERC20.sol\":3471:3598  function balanceOf(address account) public view virtual override returns (uint256) {\r... */\n    tag_56:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":3572:3590  _balances[account] */\n      and\n        /* \"ERC20.sol\":3545:3552  uint256 */\n      0x00\n        /* \"ERC20.sol\":3572:3590  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"ERC20.sol\":3471:3598  function balanceOf(address account) public view virtual override returns (uint256) {\r... */\n      jump\t// out\n        /* \"Ownable.sol\":1238:1386  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_58:\n        /* \"Ownable.sol\":818:830  _msgSender() */\n      tag_134\n        /* \"Ownable.sol\":818:828  _msgSender */\n      tag_100\n        /* \"Ownable.sol\":818:830  _msgSender() */\n      jump\t// in\n    tag_134:\n        /* \"Ownable.sol\":808:814  _owner */\n      sload(0x05)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"Ownable.sol\":808:830  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"Ownable.sol\":800:867  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_135\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_135:\n        /* \"Ownable.sol\":1329:1335  _owner */\n      sload(0x05)\n        /* \"Ownable.sol\":1308:1348  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n        /* \"Ownable.sol\":1345:1346  0 */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1329:1335  _owner */\n      and\n      swap1\n        /* \"Ownable.sol\":1308:1348  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"Ownable.sol\":1345:1346  0 */\n      dup4\n      swap1\n        /* \"Ownable.sol\":1308:1348  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"Ownable.sol\":1359:1365  _owner */\n      0x05\n        /* \"Ownable.sol\":1359:1378  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"Ownable.sol\":1238:1386  function renounceOwnership() public virtual onlyOwner {\r... */\n      jump\t// out\n        /* \"DividendPayingToken.sol\":2382:2422  uint256 public totalDividendsDistributed */\n    tag_60:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"Ownable.sol\":596:675  function owner() public view returns (address) {\r... */\n    tag_62:\n        /* \"Ownable.sol\":661:667  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"Ownable.sol\":596:675  function owner() public view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"DividendPayingToken.sol\":4189:4313  function dividendOf(address _owner) public view override returns(uint256) {\r... */\n    tag_65:\n        /* \"DividendPayingToken.sol\":4254:4261  uint256 */\n      0x00\n        /* \"DividendPayingToken.sol\":4277:4307  withdrawableDividendOf(_owner) */\n      tag_97\n        /* \"DividendPayingToken.sol\":4300:4306  _owner */\n      dup3\n        /* \"DividendPayingToken.sol\":4277:4299  withdrawableDividendOf */\n      tag_77\n        /* \"DividendPayingToken.sol\":4277:4307  withdrawableDividendOf(_owner) */\n      jump\t// in\n        /* \"ERC20.sol\":2399:2503  function symbol() public view virtual override returns (string memory) {\r... */\n    tag_67:\n        /* \"ERC20.sol\":2488:2495  _symbol */\n      0x04\n        /* \"ERC20.sol\":2481:2495  return _symbol */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"ERC20.sol\":2455:2468  string memory */\n      0x60\n      swap4\n        /* \"ERC20.sol\":2481:2495  return _symbol */\n      swap1\n      swap3\n        /* \"ERC20.sol\":2488:2495  _symbol */\n      swap1\n      swap2\n        /* \"ERC20.sol\":2481:2495  return _symbol */\n      dup4\n      add\n        /* \"ERC20.sol\":2488:2495  _symbol */\n      dup3\n        /* \"ERC20.sol\":2481:2495  return _symbol */\n      dup3\n      dup1\n      iszero\n      tag_94\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_95\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_94)\n        /* \"ERC20.sol\":6483:6752  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r... */\n    tag_74:\n        /* \"ERC20.sol\":6576:6580  bool */\n      0x00\n        /* \"ERC20.sol\":6593:6722  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_98\n        /* \"ERC20.sol\":6602:6614  _msgSender() */\n      tag_146\n        /* \"ERC20.sol\":6602:6612  _msgSender */\n      tag_100\n        /* \"ERC20.sol\":6602:6614  _msgSender() */\n      jump\t// in\n    tag_146:\n        /* \"ERC20.sol\":6616:6623  spender */\n      dup5\n        /* \"ERC20.sol\":6625:6721  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_108\n        /* \"ERC20.sol\":6664:6679  subtractedValue */\n      dup6\n        /* \"ERC20.sol\":6625:6721  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"ERC20.sol\":6625:6636  _allowances */\n      0x01\n        /* \"ERC20.sol\":6625:6650  _allowances[_msgSender()] */\n      0x00\n        /* \"ERC20.sol\":6637:6649  _msgSender() */\n      tag_148\n        /* \"ERC20.sol\":6637:6647  _msgSender */\n      tag_100\n        /* \"ERC20.sol\":6637:6649  _msgSender() */\n      jump\t// in\n    tag_148:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":6625:6650  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"ERC20.sol\":6625:6659  _allowances[_msgSender()][spender] */\n      swap2\n      dup14\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"ERC20.sol\":6625:6721  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap1\n        /* \"ERC20.sol\":6625:6663  _allowances[_msgSender()][spender].sub */\n      tag_110\n        /* \"ERC20.sol\":6625:6721  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      jump\t// in\n        /* \"DividendPayingToken.sol\":4524:4692  function withdrawableDividendOf(address _owner) public view override returns(uint256) {\r... */\n    tag_77:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DividendPayingToken.sol\":4659:4685  withdrawnDividends[_owner] */\n      dup2\n      and\n        /* \"DividendPayingToken.sol\":4601:4608  uint256 */\n      0x00\n        /* \"DividendPayingToken.sol\":4659:4685  withdrawnDividends[_owner] */\n      swap1\n      dup2\n      mstore\n        /* \"DividendPayingToken.sol\":4659:4677  withdrawnDividends */\n      0x08\n        /* \"DividendPayingToken.sol\":4659:4685  withdrawnDividends[_owner] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"DividendPayingToken.sol\":4624:4686  accumulativeDividendOf(_owner).sub(withdrawnDividends[_owner]) */\n      tag_97\n      swap1\n        /* \"DividendPayingToken.sol\":4624:4654  accumulativeDividendOf(_owner) */\n      tag_151\n        /* \"DividendPayingToken.sol\":4678:4684  _owner */\n      dup5\n        /* \"DividendPayingToken.sol\":4624:4646  accumulativeDividendOf */\n      tag_44\n        /* \"DividendPayingToken.sol\":4624:4654  accumulativeDividendOf(_owner) */\n      jump\t// in\n    tag_151:\n        /* \"DividendPayingToken.sol\":4624:4658  accumulativeDividendOf(_owner).sub */\n      swap1\n      tag_152\n        /* \"DividendPayingToken.sol\":4624:4686  accumulativeDividendOf(_owner).sub(withdrawnDividends[_owner]) */\n      jump\t// in\n        /* \"ERC20.sol\":3811:3986  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_80:\n        /* \"ERC20.sol\":3897:3901  bool */\n      0x00\n        /* \"ERC20.sol\":3914:3956  _transfer(_msgSender(), recipient, amount) */\n      tag_98\n        /* \"ERC20.sol\":3924:3936  _msgSender() */\n      tag_155\n        /* \"ERC20.sol\":3924:3934  _msgSender */\n      tag_100\n        /* \"ERC20.sol\":3924:3936  _msgSender() */\n      jump\t// in\n    tag_155:\n        /* \"ERC20.sol\":3938:3947  recipient */\n      dup5\n        /* \"ERC20.sol\":3949:3955  amount */\n      dup5\n        /* \"ERC20.sol\":3914:3923  _transfer */\n      tag_2\n        /* \"ERC20.sol\":3914:3956  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"DividendPayingToken.sol\":4905:5034  function withdrawnDividendOf(address _owner) public view override returns(uint256) {\r... */\n    tag_83:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DividendPayingToken.sol\":5002:5028  withdrawnDividends[_owner] */\n      and\n        /* \"DividendPayingToken.sol\":4979:4986  uint256 */\n      0x00\n        /* \"DividendPayingToken.sol\":5002:5028  withdrawnDividends[_owner] */\n      swap1\n      dup2\n      mstore\n        /* \"DividendPayingToken.sol\":5002:5020  withdrawnDividends */\n      0x08\n        /* \"DividendPayingToken.sol\":5002:5028  withdrawnDividends[_owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"DividendPayingToken.sol\":4905:5034  function withdrawnDividendOf(address _owner) public view override returns(uint256) {\r... */\n      jump\t// out\n        /* \"DividendPayingToken.sol\":2530:2921  function distributeCAKEDividends(uint256 amount) public onlyOwner{\r... */\n    tag_86:\n        /* \"Ownable.sol\":818:830  _msgSender() */\n      tag_158\n        /* \"Ownable.sol\":818:828  _msgSender */\n      tag_100\n        /* \"Ownable.sol\":818:830  _msgSender() */\n      jump\t// in\n    tag_158:\n        /* \"Ownable.sol\":808:814  _owner */\n      sload(0x05)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"Ownable.sol\":808:830  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"Ownable.sol\":800:867  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_159\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_159:\n        /* \"DividendPayingToken.sol\":2626:2627  0 */\n      0x00\n        /* \"DividendPayingToken.sol\":2610:2623  totalSupply() */\n      tag_161\n        /* \"DividendPayingToken.sol\":2610:2621  totalSupply */\n      tag_38\n        /* \"DividendPayingToken.sol\":2610:2623  totalSupply() */\n      jump\t// in\n    tag_161:\n        /* \"DividendPayingToken.sol\":2610:2627  totalSupply() > 0 */\n      gt\n        /* \"DividendPayingToken.sol\":2602:2628  require(totalSupply() > 0) */\n      tag_162\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_162:\n        /* \"DividendPayingToken.sol\":2641:2651  amount > 0 */\n      dup1\n      iszero\n        /* \"DividendPayingToken.sol\":2637:2916  if (amount > 0) {\r... */\n      tag_130\n      jumpi\n        /* \"DividendPayingToken.sol\":2690:2778  magnifiedDividendPerShare.add(\r... */\n      tag_164\n        /* \"DividendPayingToken.sol\":2756:2769  totalSupply() */\n      tag_165\n        /* \"DividendPayingToken.sol\":2756:2767  totalSupply */\n      tag_38\n        /* \"DividendPayingToken.sol\":2756:2769  totalSupply() */\n      jump\t// in\n    tag_165:\n        /* \"DividendPayingToken.sol\":2730:2753  (amount).mul(magnitude) */\n      tag_166\n        /* \"DividendPayingToken.sol\":2731:2737  amount */\n      dup4\n      shl(0x80, 0x01)\n        /* \"DividendPayingToken.sol\":2730:2742  (amount).mul */\n      tag_117\n        /* \"DividendPayingToken.sol\":2730:2753  (amount).mul(magnitude) */\n      jump\t// in\n    tag_166:\n        /* \"DividendPayingToken.sol\":2730:2769  (amount).mul(magnitude) / totalSupply() */\n      dup2\n      tag_167\n      jumpi\n      invalid\n    tag_167:\n        /* \"DividendPayingToken.sol\":2690:2715  magnifiedDividendPerShare */\n      sload(0x06)\n      swap2\n        /* \"DividendPayingToken.sol\":2730:2769  (amount).mul(magnitude) / totalSupply() */\n      swap1\n      div\n        /* \"DividendPayingToken.sol\":2690:2719  magnifiedDividendPerShare.add */\n      tag_128\n        /* \"DividendPayingToken.sol\":2690:2778  magnifiedDividendPerShare.add(\r... */\n      jump\t// in\n    tag_164:\n        /* \"DividendPayingToken.sol\":2662:2687  magnifiedDividendPerShare */\n      0x06\n        /* \"DividendPayingToken.sol\":2662:2778  magnifiedDividendPerShare = magnifiedDividendPerShare.add(\r... */\n      sstore\n        /* \"DividendPayingToken.sol\":2792:2832  DividendsDistributed(msg.sender, amount) */\n      0x40\n      dup1\n      mload\n      dup3\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"DividendPayingToken.sol\":2813:2823  msg.sender */\n      caller\n      swap2\n        /* \"DividendPayingToken.sol\":2792:2832  DividendsDistributed(msg.sender, amount) */\n      0xa493a9229478c3fcd73f66d2cdeb7f94fd0f341da924d1054236d78454116511\n      swap2\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log2\n        /* \"DividendPayingToken.sol\":2871:2896  totalDividendsDistributed */\n      sload(0x09)\n        /* \"DividendPayingToken.sol\":2871:2908  totalDividendsDistributed.add(amount) */\n      tag_168\n      swap1\n        /* \"DividendPayingToken.sol\":2901:2907  amount */\n      dup3\n        /* \"DividendPayingToken.sol\":2871:2900  totalDividendsDistributed.add */\n      tag_128\n        /* \"DividendPayingToken.sol\":2871:2908  totalDividendsDistributed.add(amount) */\n      jump\t// in\n    tag_168:\n        /* \"DividendPayingToken.sol\":2843:2868  totalDividendsDistributed */\n      0x09\n        /* \"DividendPayingToken.sol\":2843:2908  totalDividendsDistributed = totalDividendsDistributed.add(amount) */\n      sstore\n        /* \"DividendPayingToken.sol\":2530:2921  function distributeCAKEDividends(uint256 amount) public onlyOwner{\r... */\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":4049:4200  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n    tag_89:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":4165:4183  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"ERC20.sol\":4138:4145  uint256 */\n      0x00\n        /* \"ERC20.sol\":4165:4183  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":4165:4176  _allowances */\n      0x01\n        /* \"ERC20.sol\":4165:4183  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":4165:4192  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"ERC20.sol\":4049:4200  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n      jump\t// out\n        /* \"Ownable.sol\":1541:1785  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_92:\n        /* \"Ownable.sol\":818:830  _msgSender() */\n      tag_171\n        /* \"Ownable.sol\":818:828  _msgSender */\n      tag_100\n        /* \"Ownable.sol\":818:830  _msgSender() */\n      jump\t// in\n    tag_171:\n        /* \"Ownable.sol\":808:814  _owner */\n      sload(0x05)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"Ownable.sol\":808:830  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"Ownable.sol\":800:867  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_172\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_172:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1630:1652  newOwner != address(0) */\n      dup2\n      and\n        /* \"Ownable.sol\":1622:1695  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_174:\n        /* \"Ownable.sol\":1732:1738  _owner */\n      sload(0x05)\n        /* \"Ownable.sol\":1711:1749  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup5\n      and\n      swap3\n        /* \"Ownable.sol\":1732:1738  _owner */\n      and\n      swap1\n        /* \"Ownable.sol\":1711:1749  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"Ownable.sol\":1732:1738  _owner */\n      0x00\n      swap1\n        /* \"Ownable.sol\":1711:1749  OwnershipTransferred(_owner, newOwner) */\n      log3\n        /* \"Ownable.sol\":1760:1766  _owner */\n      0x05\n        /* \"Ownable.sol\":1760:1777  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"Ownable.sol\":1541:1785  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n      jump\t// out\n        /* \"Context.sol\":601:699  function _msgSender() internal view virtual returns (address) {\r... */\n    tag_100:\n        /* \"Context.sol\":681:691  msg.sender */\n      caller\n        /* \"Context.sol\":601:699  function _msgSender() internal view virtual returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":9669:10049  function _approve(\r... */\n    tag_101:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":9805:9824  owner != address(0) */\n      dup4\n      and\n        /* \"ERC20.sol\":9797:9865  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_177:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":9884:9905  spender != address(0) */\n      dup3\n      and\n        /* \"ERC20.sol\":9876:9944  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_178:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":9957:9975  _allowances[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ERC20.sol\":9957:9968  _allowances */\n      0x01\n        /* \"ERC20.sol\":9957:9975  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":9957:9984  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ERC20.sol\":9957:9993  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"ERC20.sol\":10009:10041  Approval(owner, spender, amount) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"ERC20.sol\":9669:10049  function _approve(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SafeMath.sol\":1228:1420  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n    tag_110:\n        /* \"SafeMath.sol\":1314:1321  uint256 */\n      0x00\n        /* \"SafeMath.sol\":1350:1362  errorMessage */\n      dup2\n        /* \"SafeMath.sol\":1342:1348  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"SafeMath.sol\":1334:1363  require(b <= a, errorMessage) */\n      tag_187\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_188:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_190\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_188)\n    tag_190:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_191\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_191:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_187:\n      pop\n      pop\n      pop\n        /* \"SafeMath.sol\":1386:1391  a - b */\n      swap1\n      sub\n      swap1\n        /* \"SafeMath.sol\":1228:1420  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n      jump\t// out\n        /* \"SafeMath.sol\":1679:2150  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_117:\n        /* \"SafeMath.sol\":1737:1744  uint256 */\n      0x00\n        /* \"SafeMath.sol\":1982:1988  a == 0 */\n      dup3\n        /* \"SafeMath.sol\":1978:2025  if (a == 0) {\r... */\n      tag_193\n      jumpi\n      pop\n        /* \"SafeMath.sol\":2012:2013  0 */\n      0x00\n        /* \"SafeMath.sol\":2005:2013  return 0 */\n      jump(tag_97)\n        /* \"SafeMath.sol\":1978:2025  if (a == 0) {\r... */\n    tag_193:\n        /* \"SafeMath.sol\":2049:2054  a * b */\n      dup3\n      dup3\n      mul\n        /* \"SafeMath.sol\":2053:2054  b */\n      dup3\n        /* \"SafeMath.sol\":2049:2050  a */\n      dup5\n        /* \"SafeMath.sol\":2049:2054  a * b */\n      dup3\n        /* \"SafeMath.sol\":2049:2050  a */\n      dup2\n        /* \"SafeMath.sol\":2073:2078  c / a */\n      tag_194\n      jumpi\n      invalid\n    tag_194:\n      div\n        /* \"SafeMath.sol\":2073:2083  c / a == b */\n      eq\n        /* \"SafeMath.sol\":2065:2121  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_195\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_195:\n        /* \"SafeMath.sol\":2141:2142  c */\n      swap4\n        /* \"SafeMath.sol\":1679:2150  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SafeMathUint.sol\":187:321  function toInt256Safe(uint256 a) internal pure returns (int256) {\r... */\n    tag_118:\n        /* \"SafeMathUint.sol\":243:249  int256 */\n      0x00\n        /* \"SafeMathUint.sol\":276:277  a */\n      dup2\n        /* \"SafeMathUint.sol\":293:299  b >= 0 */\n      dup2\n      dup2\n      slt\n      iszero\n        /* \"SafeMathUint.sol\":285:300  require(b >= 0) */\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"SafeMathInt.sol\":2550:2726  function add(int256 a, int256 b) internal pure returns (int256) {\r... */\n    tag_119:\n        /* \"SafeMathInt.sol\":2606:2612  int256 */\n      0x00\n        /* \"SafeMathInt.sol\":2636:2641  a + b */\n      dup3\n      dup3\n      add\n        /* \"SafeMathInt.sol\":2661:2667  b >= 0 */\n      dup2\n      dup4\n      slt\n      dup1\n      iszero\n      swap1\n        /* \"SafeMathInt.sol\":2661:2677  b >= 0 && c >= a */\n      tag_199\n      jumpi\n      pop\n        /* \"SafeMathInt.sol\":2676:2677  a */\n      dup4\n        /* \"SafeMathInt.sol\":2671:2672  c */\n      dup2\n        /* \"SafeMathInt.sol\":2671:2677  c >= a */\n      slt\n      iszero\n        /* \"SafeMathInt.sol\":2661:2677  b >= 0 && c >= a */\n    tag_199:\n        /* \"SafeMathInt.sol\":2660:2698  (b >= 0 && c >= a) || (b < 0 && c < a) */\n      dup1\n      tag_201\n      jumpi\n      pop\n        /* \"SafeMathInt.sol\":2687:2688  0 */\n      0x00\n        /* \"SafeMathInt.sol\":2683:2684  b */\n      dup4\n        /* \"SafeMathInt.sol\":2683:2688  b < 0 */\n      slt\n        /* \"SafeMathInt.sol\":2683:2697  b < 0 && c < a */\n      dup1\n      iszero\n      tag_201\n      jumpi\n      pop\n        /* \"SafeMathInt.sol\":2696:2697  a */\n      dup4\n        /* \"SafeMathInt.sol\":2692:2693  c */\n      dup2\n        /* \"SafeMathInt.sol\":2692:2697  c < a */\n      slt\n        /* \"SafeMathInt.sol\":2683:2697  b < 0 && c < a */\n    tag_201:\n        /* \"SafeMathInt.sol\":2652:2699  require((b >= 0 && c >= a) || (b < 0 && c < a)) */\n      tag_195\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"SafeMathInt.sol\":2955:3082  function toUint256Safe(int256 a) internal pure returns (uint256) {\r... */\n    tag_120:\n        /* \"SafeMathInt.sol\":3011:3018  uint256 */\n      0x00\n        /* \"SafeMathInt.sol\":3044:3045  0 */\n      dup1\n        /* \"SafeMathInt.sol\":3039:3040  a */\n      dup3\n        /* \"SafeMathInt.sol\":3039:3045  a >= 0 */\n      slt\n      iszero\n        /* \"SafeMathInt.sol\":3031:3046  require(a >= 0) */\n      tag_204\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_204:\n      pop\n        /* \"SafeMathInt.sol\":3072:3073  a */\n      swap1\n        /* \"SafeMathInt.sol\":2955:3082  function toUint256Safe(int256 a) internal pure returns (uint256) {\r... */\n      jump\t// out\n        /* \"SafeMath.sol\":325:506  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_128:\n        /* \"SafeMath.sol\":383:390  uint256 */\n      0x00\n        /* \"SafeMath.sol\":415:420  a + b */\n      dup3\n      dup3\n      add\n        /* \"SafeMath.sol\":439:445  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"SafeMath.sol\":431:477  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_195\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"DividendPayingToken.sol\":3358:3976  function _withdrawDividendOfUser(address payable user) internal returns (uint256) {\r... */\n    tag_131:\n        /* \"DividendPayingToken.sol\":3431:3438  uint256 */\n      0x00\n        /* \"DividendPayingToken.sol\":3447:3476  uint256 _withdrawableDividend */\n      dup1\n        /* \"DividendPayingToken.sol\":3479:3507  withdrawableDividendOf(user) */\n      tag_208\n        /* \"DividendPayingToken.sol\":3502:3506  user */\n      dup4\n        /* \"DividendPayingToken.sol\":3479:3501  withdrawableDividendOf */\n      tag_77\n        /* \"DividendPayingToken.sol\":3479:3507  withdrawableDividendOf(user) */\n      jump\t// in\n    tag_208:\n        /* \"DividendPayingToken.sol\":3447:3507  uint256 _withdrawableDividend = withdrawableDividendOf(user) */\n      swap1\n      pop\n        /* \"DividendPayingToken.sol\":3518:3543  _withdrawableDividend > 0 */\n      dup1\n      iszero\n        /* \"DividendPayingToken.sol\":3514:3954  if (_withdrawableDividend > 0) {\r... */\n      tag_209\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DividendPayingToken.sol\":3581:3605  withdrawnDividends[user] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DividendPayingToken.sol\":3581:3599  withdrawnDividends */\n      0x08\n        /* \"DividendPayingToken.sol\":3581:3605  withdrawnDividends[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"DividendPayingToken.sol\":3581:3632  withdrawnDividends[user].add(_withdrawableDividend) */\n      tag_210\n      swap1\n        /* \"DividendPayingToken.sol\":3610:3631  _withdrawableDividend */\n      dup3\n        /* \"DividendPayingToken.sol\":3581:3609  withdrawnDividends[user].add */\n      tag_128\n        /* \"DividendPayingToken.sol\":3581:3632  withdrawnDividends[user].add(_withdrawableDividend) */\n      jump\t// in\n    tag_210:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DividendPayingToken.sol\":3554:3578  withdrawnDividends[user] */\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"DividendPayingToken.sol\":3554:3572  withdrawnDividends */\n      0x08\n        /* \"DividendPayingToken.sol\":3554:3578  withdrawnDividends[user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"DividendPayingToken.sol\":3554:3632  withdrawnDividends[user] = withdrawnDividends[user].add(_withdrawableDividend) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"DividendPayingToken.sol\":3646:3692  DividendWithdrawn(user, _withdrawableDividend) */\n      dup1\n      mload\n      dup5\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"DividendPayingToken.sol\":3554:3578  withdrawnDividends[user] */\n      swap2\n      swap3\n        /* \"DividendPayingToken.sol\":3646:3692  DividendWithdrawn(user, _withdrawableDividend) */\n      0xee503bee2bb6a87e57bc57db795f98137327401a0e7b7ce42e37926cc1a9ca4d\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log2\n        /* \"DividendPayingToken.sol\":3701:3713  bool success */\n      0x00\n        /* \"DividendPayingToken.sol\":3723:3727  CAKE */\n      immutable(\"0x6590fa52fa76f967656340b874bc9ca09733c2fddea9886210ebcbbceee04b35\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DividendPayingToken.sol\":3716:3737  IERC20(CAKE).transfer */\n      and\n      0xa9059cbb\n        /* \"DividendPayingToken.sol\":3738:3742  user */\n      dup6\n        /* \"DividendPayingToken.sol\":3744:3765  _withdrawableDividend */\n      dup5\n        /* \"DividendPayingToken.sol\":3716:3766  IERC20(CAKE).transfer(user, _withdrawableDividend) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_211\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_211:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_213\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_213:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_214\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_214:\n      pop\n      mload\n      swap1\n      pop\n      dup1\n        /* \"DividendPayingToken.sol\":3777:3908  if(!success) {\r... */\n      tag_215\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DividendPayingToken.sol\":3828:3852  withdrawnDividends[user] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DividendPayingToken.sol\":3828:3846  withdrawnDividends */\n      0x08\n        /* \"DividendPayingToken.sol\":3828:3852  withdrawnDividends[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"DividendPayingToken.sol\":3828:3879  withdrawnDividends[user].sub(_withdrawableDividend) */\n      tag_216\n      swap1\n        /* \"DividendPayingToken.sol\":3857:3878  _withdrawableDividend */\n      dup4\n        /* \"DividendPayingToken.sol\":3828:3856  withdrawnDividends[user].sub */\n      tag_152\n        /* \"DividendPayingToken.sol\":3828:3879  withdrawnDividends[user].sub(_withdrawableDividend) */\n      jump\t// in\n    tag_216:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DividendPayingToken.sol\":3801:3825  withdrawnDividends[user] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DividendPayingToken.sol\":3801:3819  withdrawnDividends */\n      0x08\n        /* \"DividendPayingToken.sol\":3801:3825  withdrawnDividends[user] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"DividendPayingToken.sol\":3801:3879  withdrawnDividends[user] = withdrawnDividends[user].sub(_withdrawableDividend) */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"DividendPayingToken.sol\":3801:3825  withdrawnDividends[user] */\n      swap3\n      pop\n        /* \"DividendPayingToken.sol\":3890:3898  return 0 */\n      tag_111\n      swap2\n      pop\n      pop\n      jump\n        /* \"DividendPayingToken.sol\":3777:3908  if(!success) {\r... */\n    tag_215:\n      pop\n        /* \"DividendPayingToken.sol\":3925:3946  _withdrawableDividend */\n      swap1\n      pop\n        /* \"DividendPayingToken.sol\":3918:3946  return _withdrawableDividend */\n      jump(tag_111)\n        /* \"DividendPayingToken.sol\":3514:3954  if (_withdrawableDividend > 0) {\r... */\n    tag_209:\n      pop\n        /* \"DividendPayingToken.sol\":3969:3970  0 */\n      0x00\n      swap3\n        /* \"DividendPayingToken.sol\":3358:3976  function _withdrawDividendOfUser(address payable user) internal returns (uint256) {\r... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"SafeMath.sol\":789:925  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_152:\n        /* \"SafeMath.sol\":847:854  uint256 */\n      0x00\n        /* \"SafeMath.sol\":874:917  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_195\n        /* \"SafeMath.sol\":878:879  a */\n      dup4\n        /* \"SafeMath.sol\":881:882  b */\n      dup4\n        /* \"SafeMath.sol\":874:917  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"SafeMath.sol\":874:877  sub */\n      tag_110\n        /* \"SafeMath.sol\":874:917  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa2646970667358221220a8b8af30583c754853680c8fcb284307981c6edad502a2c88724d9cdfd8a150b64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60a06040527f0e09fabb73bd3ade0a17ecc321fd13a19e81ce820000000000000000000000006080523480156200003557600080fd5b506040516200137238038062001372833981810160405260408110156200005b57600080fd5b81019080805160405193929190846401000000008211156200007c57600080fd5b9083019060208201858111156200009257600080fd5b8251640100000000811182820188101715620000ad57600080fd5b82525081516020918201929091019080838360005b83811015620000dc578181015183820152602001620000c2565b50505050905090810190601f1680156200010a5780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200012e57600080fd5b9083019060208201858111156200014457600080fd5b82516401000000008111828201881017156200015f57600080fd5b82525081516020918201929091019080838360005b838110156200018e57818101518382015260200162000174565b50505050905090810190601f168015620001bc5780820380516001836020036101000a031916815260200191505b50604052505082518391508290620001dc90600390602085019062000261565b508051620001f290600490602084019062000261565b5050506000620002076200025d60201b60201c565b600580546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3505050620002fd565b3390565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002a457805160ff1916838001178555620002d4565b82800160010185558215620002d4579182015b82811115620002d4578251825591602001919060010190620002b7565b50620002e2929150620002e6565b5090565b5b80821115620002e25760008155600101620002e7565b60805160601c61105262000320600039806106685280610dfe52506110526000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c806385a6b3ae116100b8578063a8b9d2401161007c578063a8b9d2401461038a578063a9059cbb146103b0578063aafd847a146103dc578063ba72a95514610402578063dd62ed3e1461041f578063f2fde38b1461044d57610142565b806385a6b3ae146103205780638da5cb5b1461032857806391b89fba1461033057806395d89b4114610356578063a457c2d71461035e57610142565b8063313ce5671161010a578063313ce5671461027a57806339509351146102985780634ca6ef28146102c45780636a474002146102e857806370a08231146102f2578063715018a61461031857610142565b806306fdde0314610147578063095ea7b3146101c457806318160ddd1461020457806323b872dd1461021e57806327ce014714610254575b600080fd5b61014f610473565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610189578181015183820152602001610171565b50505050905090810190601f1680156101b65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101f0600480360360408110156101da57600080fd5b506001600160a01b038135169060200135610509565b604080519115158252519081900360200190f35b61020c610527565b60408051918252519081900360200190f35b6101f06004803603606081101561023457600080fd5b506001600160a01b0381358116916020810135909116906040013561052d565b61020c6004803603602081101561026a57600080fd5b50356001600160a01b03166105b4565b610282610613565b6040805160ff9092168252519081900360200190f35b6101f0600480360360408110156102ae57600080fd5b506001600160a01b038135169060200135610618565b6102cc610666565b604080516001600160a01b039092168252519081900360200190f35b6102f061068a565b005b61020c6004803603602081101561030857600080fd5b50356001600160a01b0316610696565b6102f06106b1565b61020c610765565b6102cc61076b565b61020c6004803603602081101561034657600080fd5b50356001600160a01b031661077a565b61014f610785565b6101f06004803603604081101561037457600080fd5b506001600160a01b0381351690602001356107e6565b61020c600480360360208110156103a057600080fd5b50356001600160a01b031661084e565b6101f0600480360360408110156103c657600080fd5b506001600160a01b03813516906020013561087a565b61020c600480360360208110156103f257600080fd5b50356001600160a01b031661088e565b6102f06004803603602081101561041857600080fd5b50356108a9565b61020c6004803603604081101561043557600080fd5b506001600160a01b03813581169160200135166109a4565b6102f06004803603602081101561046357600080fd5b50356001600160a01b03166109cf565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104ff5780601f106104d4576101008083540402835291602001916104ff565b820191906000526020600020905b8154815290600101906020018083116104e257829003601f168201915b5050505050905090565b600061051d610516610ada565b8484610ade565b5060015b92915050565b60025490565b600061053a848484610142565b6105aa84610546610ada565b6105a585604051806060016040528060288152602001610fac602891396001600160a01b038a16600090815260016020526040812090610584610ada565b6001600160a01b031681526020810191909152604001600020549190610bca565b610ade565b5060019392505050565b6001600160a01b038116600090815260076020526040812054600160801b90610603906105fe906105f86105f36105ea88610696565b60065490610c61565b610cc1565b90610cd1565b610d04565b8161060a57fe5b0490505b919050565b601290565b600061051d610625610ada565b846105a58560016000610636610ada565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610d17565b7f000000000000000000000000000000000000000000000000000000000000000081565b61069333610d71565b50565b6001600160a01b031660009081526020819052604090205490565b6106b9610ada565b6005546001600160a01b0390811691161461071b576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6005546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600580546001600160a01b0319169055565b60095481565b6005546001600160a01b031690565b60006105218261084e565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104ff5780601f106104d4576101008083540402835291602001916104ff565b600061051d6107f3610ada565b846105a585604051806060016040528060258152602001610ff8602591396001600061081d610ada565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190610bca565b6001600160a01b03811660009081526008602052604081205461052190610874846105b4565b90610f00565b600061051d610887610ada565b8484610142565b6001600160a01b031660009081526008602052604090205490565b6108b1610ada565b6005546001600160a01b03908116911614610913576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600061091d610527565b1161092757600080fd5b801561069357610958610938610527565b61094683600160801b610c61565b8161094d57fe5b600654919004610d17565b60065560408051828152905133917fa493a9229478c3fcd73f66d2cdeb7f94fd0f341da924d1054236d78454116511919081900360200190a260095461099e9082610d17565b60095550565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6109d7610ada565b6005546001600160a01b03908116911614610a39576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116610a7e5760405162461bcd60e51b8152600401808060200182810382526026815260200180610f436026913960400191505060405180910390fd5b6005546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b6001600160a01b038316610b235760405162461bcd60e51b8152600401808060200182810382526024815260200180610fd46024913960400191505060405180910390fd5b6001600160a01b038216610b685760405162461bcd60e51b8152600401808060200182810382526022815260200180610f696022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b60008184841115610c595760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610c1e578181015183820152602001610c06565b50505050905090810190601f168015610c4b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082610c7057506000610521565b82820282848281610c7d57fe5b0414610cba5760405162461bcd60e51b8152600401808060200182810382526021815260200180610f8b6021913960400191505060405180910390fd5b9392505050565b6000818181121561052157600080fd5b6000828201818312801590610ce65750838112155b80610cfb5750600083128015610cfb57508381125b610cba57600080fd5b600080821215610d1357600080fd5b5090565b600082820183811015610cba576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600080610d7d8361084e565b90508015610ef7576001600160a01b038316600090815260086020526040902054610da89082610d17565b6001600160a01b038416600081815260086020908152604091829020939093558051848152905191927fee503bee2bb6a87e57bc57db795f98137327401a0e7b7ce42e37926cc1a9ca4d92918290030190a260007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb85846040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015610e7357600080fd5b505af1158015610e87573d6000803e3d6000fd5b505050506040513d6020811015610e9d57600080fd5b5051905080610eef576001600160a01b038416600090815260086020526040902054610ec99083610f00565b6001600160a01b038516600090815260086020526040812091909155925061060e915050565b50905061060e565b50600092915050565b6000610cba83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610bca56fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220a8b8af30583c754853680c8fcb284307981c6edad502a2c88724d9cdfd8a150b64736f6c634300060c0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH32 0xE09FABB73BD3ADE0A17ECC321FD13A19E81CE82000000000000000000000000 PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1372 CODESIZE SUB DUP1 PUSH3 0x1372 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0xAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xDC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0xC2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x10A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x12E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x15F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x18E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x174 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x1BC JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP DUP3 MLOAD DUP4 SWAP2 POP DUP3 SWAP1 PUSH3 0x1DC SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x261 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x1F2 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x261 JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH3 0x207 PUSH3 0x25D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0x0 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP POP POP PUSH3 0x2FD JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x2A4 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2D4 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2D4 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2D4 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x2B7 JUMP JUMPDEST POP PUSH3 0x2E2 SWAP3 SWAP2 POP PUSH3 0x2E6 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2E2 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2E7 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH2 0x1052 PUSH3 0x320 PUSH1 0x0 CODECOPY DUP1 PUSH2 0x668 MSTORE DUP1 PUSH2 0xDFE MSTORE POP PUSH2 0x1052 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x85A6B3AE GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xA8B9D240 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA8B9D240 EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0xAAFD847A EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0xBA72A955 EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x44D JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x85A6B3AE EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x91B89FBA EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x35E JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x4CA6EF28 EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x6A474002 EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x318 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x27CE0147 EQ PUSH2 0x254 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14F PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x189 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x171 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1B6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x509 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x20C PUSH2 0x527 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x234 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x52D JUMP JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5B4 JUMP JUMPDEST PUSH2 0x282 PUSH2 0x613 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x618 JUMP JUMPDEST PUSH2 0x2CC PUSH2 0x666 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2F0 PUSH2 0x68A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x308 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x696 JUMP JUMPDEST PUSH2 0x2F0 PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0x20C PUSH2 0x765 JUMP JUMPDEST PUSH2 0x2CC PUSH2 0x76B JUMP JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x77A JUMP JUMPDEST PUSH2 0x14F PUSH2 0x785 JUMP JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x7E6 JUMP JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x84E JUMP JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x87A JUMP JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x88E JUMP JUMPDEST PUSH2 0x2F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x418 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x8A9 JUMP JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x435 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x9A4 JUMP JUMPDEST PUSH2 0x2F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9CF JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x4FF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4D4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4FF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4E2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51D PUSH2 0x516 PUSH2 0xADA JUMP JUMPDEST DUP5 DUP5 PUSH2 0xADE JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53A DUP5 DUP5 DUP5 PUSH2 0x142 JUMP JUMPDEST PUSH2 0x5AA DUP5 PUSH2 0x546 PUSH2 0xADA JUMP JUMPDEST PUSH2 0x5A5 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFAC PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x584 PUSH2 0xADA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xBCA JUMP JUMPDEST PUSH2 0xADE JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 PUSH2 0x603 SWAP1 PUSH2 0x5FE SWAP1 PUSH2 0x5F8 PUSH2 0x5F3 PUSH2 0x5EA DUP9 PUSH2 0x696 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 PUSH2 0xC61 JUMP JUMPDEST PUSH2 0xCC1 JUMP JUMPDEST SWAP1 PUSH2 0xCD1 JUMP JUMPDEST PUSH2 0xD04 JUMP JUMPDEST DUP2 PUSH2 0x60A JUMPI INVALID JUMPDEST DIV SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51D PUSH2 0x625 PUSH2 0xADA JUMP JUMPDEST DUP5 PUSH2 0x5A5 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x636 PUSH2 0xADA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0xD17 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x693 CALLER PUSH2 0xD71 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x6B9 PUSH2 0xADA JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x71B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x521 DUP3 PUSH2 0x84E JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x4FF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4D4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4FF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51D PUSH2 0x7F3 PUSH2 0xADA JUMP JUMPDEST DUP5 PUSH2 0x5A5 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFF8 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x81D PUSH2 0xADA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xBCA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x521 SWAP1 PUSH2 0x874 DUP5 PUSH2 0x5B4 JUMP JUMPDEST SWAP1 PUSH2 0xF00 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51D PUSH2 0x887 PUSH2 0xADA JUMP JUMPDEST DUP5 DUP5 PUSH2 0x142 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x8B1 PUSH2 0xADA JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x913 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x91D PUSH2 0x527 JUMP JUMPDEST GT PUSH2 0x927 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x693 JUMPI PUSH2 0x958 PUSH2 0x938 PUSH2 0x527 JUMP JUMPDEST PUSH2 0x946 DUP4 PUSH1 0x1 PUSH1 0x80 SHL PUSH2 0xC61 JUMP JUMPDEST DUP2 PUSH2 0x94D JUMPI INVALID JUMPDEST PUSH1 0x6 SLOAD SWAP2 SWAP1 DIV PUSH2 0xD17 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0xA493A9229478C3FCD73F66D2CDEB7F94FD0F341DA924D1054236D78454116511 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 PUSH1 0x9 SLOAD PUSH2 0x99E SWAP1 DUP3 PUSH2 0xD17 JUMP JUMPDEST PUSH1 0x9 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x9D7 PUSH2 0xADA JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xA39 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA7E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xF43 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB23 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFD4 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB68 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xF69 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xC59 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC1E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xC06 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xC4B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xC70 JUMPI POP PUSH1 0x0 PUSH2 0x521 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0xC7D JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xCBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xF8B PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 DUP2 SLT ISZERO PUSH2 0x521 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP2 DUP4 SLT DUP1 ISZERO SWAP1 PUSH2 0xCE6 JUMPI POP DUP4 DUP2 SLT ISZERO JUMPDEST DUP1 PUSH2 0xCFB JUMPI POP PUSH1 0x0 DUP4 SLT DUP1 ISZERO PUSH2 0xCFB JUMPI POP DUP4 DUP2 SLT JUMPDEST PUSH2 0xCBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT ISZERO PUSH2 0xD13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xCBA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD7D DUP4 PUSH2 0x84E JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xEF7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xDA8 SWAP1 DUP3 PUSH2 0xD17 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP1 MLOAD DUP5 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 PUSH32 0xEE503BEE2BB6A87E57BC57DB795F98137327401A0E7B7CE42E37926CC1A9CA4D SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG2 PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB DUP6 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE87 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 PUSH2 0xEEF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xEC9 SWAP1 DUP4 PUSH2 0xF00 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE SWAP3 POP PUSH2 0x60E SWAP2 POP POP JUMP JUMPDEST POP SWAP1 POP PUSH2 0x60E JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBA DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xBCA JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737345524332303A20617070726F76652074 PUSH16 0x20746865207A65726F20616464726573 PUSH20 0x536166654D6174683A206D756C7469706C696361 PUSH21 0x696F6E206F766572666C6F7745524332303A207472 PUSH2 0x6E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x45524332303A KECCAK256 PUSH2 0x7070 PUSH19 0x6F76652066726F6D20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220A8B8 0xAF ADDRESS PC EXTCODECOPY PUSH22 0x4853680C8FCB284307981C6EDAD502A2C88724D9CDFD DUP11 ISZERO SIGNEXTEND PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "676:7214:1:-:0;;;897:83;;;2429:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2429:93:1;;;;;;;;;;-1:-1:-1;2429:93:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2429:93:1;;;;;;;;;;-1:-1:-1;2429:93:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2429:93:1;;-1:-1:-1;;2061:13:4;;2498:5:1;;-1:-1:-1;2505:7:1;;2061:13:4;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2085:17:4;;;;:7;;:17;;;;;:::i;:::-;;1987:123;;387:17:7;407:12;:10;;;:12;;:::i;:::-;430:6;:18;;-1:-1:-1;;;;;;430:18:7;-1:-1:-1;;;;;430:18:7;;;;;;;;464:43;;430:18;;-1:-1:-1;430:18:7;-1:-1:-1;;464:43:7;;-1:-1:-1;;464:43:7;354:161;2429:93:1;;676:7214;;601:98:0;681:10;601:98;:::o;676:7214:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;676:7214:1;;;-1:-1:-1;676:7214:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {
								"55": [
									{
										"length": 32,
										"start": 1640
									},
									{
										"length": 32,
										"start": 3582
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x85A6B3AE GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xA8B9D240 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA8B9D240 EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0xAAFD847A EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0xBA72A955 EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x44D JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x85A6B3AE EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x91B89FBA EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x35E JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x4CA6EF28 EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x6A474002 EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x318 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x27CE0147 EQ PUSH2 0x254 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14F PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x189 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x171 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1B6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x509 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x20C PUSH2 0x527 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x234 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x52D JUMP JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5B4 JUMP JUMPDEST PUSH2 0x282 PUSH2 0x613 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x618 JUMP JUMPDEST PUSH2 0x2CC PUSH2 0x666 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2F0 PUSH2 0x68A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x308 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x696 JUMP JUMPDEST PUSH2 0x2F0 PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0x20C PUSH2 0x765 JUMP JUMPDEST PUSH2 0x2CC PUSH2 0x76B JUMP JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x77A JUMP JUMPDEST PUSH2 0x14F PUSH2 0x785 JUMP JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x7E6 JUMP JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x84E JUMP JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x87A JUMP JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x88E JUMP JUMPDEST PUSH2 0x2F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x418 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x8A9 JUMP JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x435 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x9A4 JUMP JUMPDEST PUSH2 0x2F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9CF JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x4FF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4D4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4FF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4E2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51D PUSH2 0x516 PUSH2 0xADA JUMP JUMPDEST DUP5 DUP5 PUSH2 0xADE JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53A DUP5 DUP5 DUP5 PUSH2 0x142 JUMP JUMPDEST PUSH2 0x5AA DUP5 PUSH2 0x546 PUSH2 0xADA JUMP JUMPDEST PUSH2 0x5A5 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFAC PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x584 PUSH2 0xADA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xBCA JUMP JUMPDEST PUSH2 0xADE JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 PUSH2 0x603 SWAP1 PUSH2 0x5FE SWAP1 PUSH2 0x5F8 PUSH2 0x5F3 PUSH2 0x5EA DUP9 PUSH2 0x696 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 PUSH2 0xC61 JUMP JUMPDEST PUSH2 0xCC1 JUMP JUMPDEST SWAP1 PUSH2 0xCD1 JUMP JUMPDEST PUSH2 0xD04 JUMP JUMPDEST DUP2 PUSH2 0x60A JUMPI INVALID JUMPDEST DIV SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51D PUSH2 0x625 PUSH2 0xADA JUMP JUMPDEST DUP5 PUSH2 0x5A5 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x636 PUSH2 0xADA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0xD17 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x693 CALLER PUSH2 0xD71 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x6B9 PUSH2 0xADA JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x71B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x521 DUP3 PUSH2 0x84E JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x4FF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4D4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4FF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51D PUSH2 0x7F3 PUSH2 0xADA JUMP JUMPDEST DUP5 PUSH2 0x5A5 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFF8 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x81D PUSH2 0xADA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xBCA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x521 SWAP1 PUSH2 0x874 DUP5 PUSH2 0x5B4 JUMP JUMPDEST SWAP1 PUSH2 0xF00 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51D PUSH2 0x887 PUSH2 0xADA JUMP JUMPDEST DUP5 DUP5 PUSH2 0x142 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x8B1 PUSH2 0xADA JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x913 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x91D PUSH2 0x527 JUMP JUMPDEST GT PUSH2 0x927 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x693 JUMPI PUSH2 0x958 PUSH2 0x938 PUSH2 0x527 JUMP JUMPDEST PUSH2 0x946 DUP4 PUSH1 0x1 PUSH1 0x80 SHL PUSH2 0xC61 JUMP JUMPDEST DUP2 PUSH2 0x94D JUMPI INVALID JUMPDEST PUSH1 0x6 SLOAD SWAP2 SWAP1 DIV PUSH2 0xD17 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0xA493A9229478C3FCD73F66D2CDEB7F94FD0F341DA924D1054236D78454116511 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 PUSH1 0x9 SLOAD PUSH2 0x99E SWAP1 DUP3 PUSH2 0xD17 JUMP JUMPDEST PUSH1 0x9 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x9D7 PUSH2 0xADA JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xA39 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA7E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xF43 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB23 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFD4 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB68 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xF69 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xC59 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC1E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xC06 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xC4B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xC70 JUMPI POP PUSH1 0x0 PUSH2 0x521 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0xC7D JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xCBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xF8B PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 DUP2 SLT ISZERO PUSH2 0x521 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP2 DUP4 SLT DUP1 ISZERO SWAP1 PUSH2 0xCE6 JUMPI POP DUP4 DUP2 SLT ISZERO JUMPDEST DUP1 PUSH2 0xCFB JUMPI POP PUSH1 0x0 DUP4 SLT DUP1 ISZERO PUSH2 0xCFB JUMPI POP DUP4 DUP2 SLT JUMPDEST PUSH2 0xCBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT ISZERO PUSH2 0xD13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xCBA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD7D DUP4 PUSH2 0x84E JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xEF7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xDA8 SWAP1 DUP3 PUSH2 0xD17 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP1 MLOAD DUP5 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 PUSH32 0xEE503BEE2BB6A87E57BC57DB795F98137327401A0E7B7CE42E37926CC1A9CA4D SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG2 PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB DUP6 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE87 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 PUSH2 0xEEF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xEC9 SWAP1 DUP4 PUSH2 0xF00 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE SWAP3 POP PUSH2 0x60E SWAP2 POP POP JUMP JUMPDEST POP SWAP1 POP PUSH2 0x60E JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBA DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xBCA JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737345524332303A20617070726F76652074 PUSH16 0x20746865207A65726F20616464726573 PUSH20 0x536166654D6174683A206D756C7469706C696361 PUSH21 0x696F6E206F766572666C6F7745524332303A207472 PUSH2 0x6E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x45524332303A KECCAK256 PUSH2 0x7070 PUSH19 0x6F76652066726F6D20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220A8B8 0xAF ADDRESS PC EXTCODECOPY PUSH22 0x4853680C8FCB284307981C6EDAD502A2C88724D9CDFD DUP11 ISZERO SIGNEXTEND PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "676:7214:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2180:100:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4347:169;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4347:169:4;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3300:108;;;:::i;:::-;;;;;;;;;;;;;;;;4998:355;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4998:355:4;;;;;;;;;;;;;;;;;:::i;5475:247:1:-;;;;;;;;;;;;;;;;-1:-1:-1;5475:247:1;-1:-1:-1;;;;;5475:247:1;;:::i;3142:93:4:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5762:218;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5762:218:4;;;;;;;;:::i;897:83:1:-;;;:::i;:::-;;;;-1:-1:-1;;;;;897:83:1;;;;;;;;;;;;;;3090:100;;;:::i;:::-;;3471:127:4;;;;;;;;;;;;;;;;-1:-1:-1;3471:127:4;-1:-1:-1;;;;;3471:127:4;;:::i;1238:148:7:-;;;:::i;2382:40:1:-;;;:::i;596:79:7:-;;;:::i;4189:124:1:-;;;;;;;;;;;;;;;;-1:-1:-1;4189:124:1;-1:-1:-1;;;;;4189:124:1;;:::i;2399:104:4:-;;;:::i;6483:269::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6483:269:4;;;;;;;;:::i;4524:168:1:-;;;;;;;;;;;;;;;;-1:-1:-1;4524:168:1;-1:-1:-1;;;;;4524:168:1;;:::i;3811:175:4:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3811:175:4;;;;;;;;:::i;4905:129:1:-;;;;;;;;;;;;;;;;-1:-1:-1;4905:129:1;-1:-1:-1;;;;;4905:129:1;;:::i;2530:391::-;;;;;;;;;;;;;;;;-1:-1:-1;2530:391:1;;:::i;4049:151:4:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4049:151:4;;;;;;;;;;:::i;1541:244:7:-;;;;;;;;;;;;;;;;-1:-1:-1;1541:244:7;-1:-1:-1;;;;;1541:244:7;;:::i;2180:100:4:-;2267:5;2260:12;;;;;;;;-1:-1:-1;;2260:12:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2234:13;;2260:12;;2267:5;;2260:12;;2267:5;2260:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2180:100;:::o;4347:169::-;4430:4;4447:39;4456:12;:10;:12::i;:::-;4470:7;4479:6;4447:8;:39::i;:::-;-1:-1:-1;4504:4:4;4347:169;;;;;:::o;3300:108::-;3388:12;;3300:108;:::o;4998:355::-;5138:4;5155:36;5165:6;5173:9;5184:6;5155:9;:36::i;:::-;5202:121;5211:6;5219:12;:10;:12::i;:::-;5233:89;5271:6;5233:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5233:19:4;;;;;;:11;:19;;;;;;5253:12;:10;:12::i;:::-;-1:-1:-1;;;;;5233:33:4;;;;;;;;;;;;-1:-1:-1;5233:33:4;;;:89;:37;:89::i;:::-;5202:8;:121::i;:::-;-1:-1:-1;5341:4:4;4998:355;;;;;:::o;5475:247:1:-;-1:-1:-1;;;;;5651:36:1;;5552:7;5651:36;;;:28;:36;;;;;;-1:-1:-1;;;1288:6:1;5575:129;;:113;;:63;:48;5605:17;5680:6;5605:9;:17::i;:::-;5575:25;;;:29;:48::i;:::-;:61;:63::i;:::-;:75;;:113::i;:::-;:127;:129::i;:::-;:141;;;;;;5568:148;;5475:247;;;;:::o;3142:93:4:-;3225:2;3142:93;:::o;5762:218::-;5850:4;5867:83;5876:12;:10;:12::i;:::-;5890:7;5899:50;5938:10;5899:11;:25;5911:12;:10;:12::i;:::-;-1:-1:-1;;;;;5899:25:4;;;;;;;;;;;;;;;;;-1:-1:-1;5899:25:4;;;:34;;;;;;;;;;;:38;:50::i;897:83:1:-;;;:::o;3090:100::-;3149:35;3173:10;3149:23;:35::i;:::-;;3090:100::o;3471:127:4:-;-1:-1:-1;;;;;3572:18:4;3545:7;3572:18;;;;;;;;;;;;3471:127::o;1238:148:7:-;818:12;:10;:12::i;:::-;808:6;;-1:-1:-1;;;;;808:6:7;;;:22;;;800:67;;;;;-1:-1:-1;;;800:67:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1329:6:::1;::::0;1308:40:::1;::::0;1345:1:::1;::::0;-1:-1:-1;;;;;1329:6:7::1;::::0;1308:40:::1;::::0;1345:1;;1308:40:::1;1359:6;:19:::0;;-1:-1:-1;;;;;;1359:19:7::1;::::0;;1238:148::o;2382:40:1:-;;;;:::o;596:79:7:-;661:6;;-1:-1:-1;;;;;661:6:7;596:79;:::o;4189:124:1:-;4254:7;4277:30;4300:6;4277:22;:30::i;2399:104:4:-;2488:7;2481:14;;;;;;;;-1:-1:-1;;2481:14:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2455:13;;2481:14;;2488:7;;2481:14;;2488:7;2481:14;;;;;;;;;;;;;;;;;;;;;;;;6483:269;6576:4;6593:129;6602:12;:10;:12::i;:::-;6616:7;6625:96;6664:15;6625:96;;;;;;;;;;;;;;;;;:11;:25;6637:12;:10;:12::i;:::-;-1:-1:-1;;;;;6625:25:4;;;;;;;;;;;;;;;;;-1:-1:-1;6625:25:4;;;:34;;;;;;;;;;;:96;:38;:96::i;4524:168:1:-;-1:-1:-1;;;;;4659:26:1;;4601:7;4659:26;;;:18;:26;;;;;;4624:62;;:30;4678:6;4624:22;:30::i;:::-;:34;;:62::i;3811:175:4:-;3897:4;3914:42;3924:12;:10;:12::i;:::-;3938:9;3949:6;3914:9;:42::i;4905:129:1:-;-1:-1:-1;;;;;5002:26:1;4979:7;5002:26;;;:18;:26;;;;;;;4905:129::o;2530:391::-;818:12:7;:10;:12::i;:::-;808:6;;-1:-1:-1;;;;;808:6:7;;;:22;;;800:67;;;;;-1:-1:-1;;;800:67:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2626:1:1::1;2610:13;:11;:13::i;:::-;:17;2602:26;;;::::0;::::1;;2641:10:::0;;2637:279:::1;;2690:88;2756:13;:11;:13::i;:::-;2730:23;2731:6:::0;-1:-1:-1;;;2730:12:1::1;:23::i;:::-;:39;;;;;2690:25;::::0;;2730:39;::::1;2690:29;:88::i;:::-;2662:25;:116:::0;2792:40:::1;::::0;;;;;;;2813:10:::1;::::0;2792:40:::1;::::0;;;;;::::1;::::0;;::::1;2871:25;::::0;:37:::1;::::0;2901:6;2871:29:::1;:37::i;:::-;2843:25;:65:::0;2530:391;:::o;4049:151:4:-;-1:-1:-1;;;;;4165:18:4;;;4138:7;4165:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4049:151::o;1541:244:7:-;818:12;:10;:12::i;:::-;808:6;;-1:-1:-1;;;;;808:6:7;;;:22;;;800:67;;;;;-1:-1:-1;;;800:67:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1630:22:7;::::1;1622:73;;;;-1:-1:-1::0;;;1622:73:7::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1732:6;::::0;1711:38:::1;::::0;-1:-1:-1;;;;;1711:38:7;;::::1;::::0;1732:6:::1;::::0;1711:38:::1;::::0;1732:6:::1;::::0;1711:38:::1;1760:6;:17:::0;;-1:-1:-1;;;;;;1760:17:7::1;-1:-1:-1::0;;;;;1760:17:7;;;::::1;::::0;;;::::1;::::0;;1541:244::o;601:98:0:-;681:10;601:98;:::o;9669:380:4:-;-1:-1:-1;;;;;9805:19:4;;9797:68;;;;-1:-1:-1;;;9797:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9884:21:4;;9876:68;;;;-1:-1:-1;;;9876:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9957:18:4;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10009:32;;;;;;;;;;;;;;;;;9669:380;;;:::o;1228:192:8:-;1314:7;1350:12;1342:6;;;;1334:29;;;;-1:-1:-1;;;1334:29:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1386:5:8;;;1228:192::o;1679:471::-;1737:7;1982:6;1978:47;;-1:-1:-1;2012:1:8;2005:8;;1978:47;2049:5;;;2053:1;2049;:5;:1;2073:5;;;;;:10;2065:56;;;;-1:-1:-1;;;2065:56:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2141:1;1679:471;-1:-1:-1;;;1679:471:8:o;187:134:10:-;243:6;276:1;293:6;;;;285:15;;;;;2550:176:9;2606:6;2636:5;;;2661:6;;;;;;:16;;;2676:1;2671;:6;;2661:16;2660:38;;;;2687:1;2683;:5;:14;;;;;2696:1;2692;:5;2683:14;2652:47;;;;;2955:127;3011:7;3044:1;3039;:6;;3031:15;;;;;;-1:-1:-1;3072:1:9;2955:127::o;325:181:8:-;383:7;415:5;;;439:6;;;;431:46;;;;;-1:-1:-1;;;431:46:8;;;;;;;;;;;;;;;;;;;;;;;;;;;3358:618:1;3431:7;3447:29;3479:28;3502:4;3479:22;:28::i;:::-;3447:60;-1:-1:-1;3518:25:1;;3514:440;;-1:-1:-1;;;;;3581:24:1;;;;;;:18;:24;;;;;;:51;;3610:21;3581:28;:51::i;:::-;-1:-1:-1;;;;;3554:24:1;;;;;;:18;:24;;;;;;;;;:78;;;;3646:46;;;;;;;3554:24;;3646:46;;;;;;;;;3701:12;3723:4;-1:-1:-1;;;;;3716:21:1;;3738:4;3744:21;3716:50;;;;;;;;;;;;;-1:-1:-1;;;;;3716:50:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3716:50:1;;-1:-1:-1;3716:50:1;3777:131;;-1:-1:-1;;;;;3828:24:1;;;;;;:18;:24;;;;;;:51;;3857:21;3828:28;:51::i;:::-;-1:-1:-1;;;;;3801:24:1;;;;;;:18;:24;;;;;:78;;;;:24;-1:-1:-1;3890:8:1;;-1:-1:-1;;3890:8:1;3777:131;-1:-1:-1;3925:21:1;-1:-1:-1;3918:28:1;;3514:440;-1:-1:-1;3969:1:1;;3358:618;-1:-1:-1;;3358:618:1:o;789:136:8:-;847:7;874:43;878:1;881;874:43;;;;;;;;;;;;;;;;;:3;:43::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "835600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"CAKE()": "infinite",
								"accumulativeDividendOf(address)": "infinite",
								"allowance(address,address)": "1360",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1256",
								"decimals()": "230",
								"decreaseAllowance(address,uint256)": "infinite",
								"distributeCAKEDividends(uint256)": "infinite",
								"dividendOf(address)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "1082",
								"renounceOwnership()": "24334",
								"symbol()": "infinite",
								"totalDividendsDistributed()": "1021",
								"totalSupply()": "1066",
								"transfer(address,uint256)": "313",
								"transferFrom(address,address,uint256)": "360",
								"transferOwnership(address)": "infinite",
								"withdrawDividend()": "infinite",
								"withdrawableDividendOf(address)": "infinite",
								"withdrawnDividendOf(address)": "1208"
							},
							"internal": {
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_setBalance(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite",
								"_withdrawDividendOfUser(address payable)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 676,
									"end": 7890,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 897,
									"end": 980,
									"name": "PUSH",
									"source": 1,
									"value": "E09FABB73BD3ADE0A17ECC321FD13A19E81CE82000000000000000000000000"
								},
								{
									"begin": 897,
									"end": 980,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 897,
									"end": 980,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSH",
									"source": 1,
									"value": "100000000"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSH",
									"source": 1,
									"value": "100000000"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSH",
									"source": 1,
									"value": "100000000"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSH",
									"source": 1,
									"value": "100000000"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2061,
									"end": 2074,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2061,
									"end": 2074,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2498,
									"end": 2503,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2498,
									"end": 2503,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2505,
									"end": 2512,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2505,
									"end": 2512,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2061,
									"end": 2074,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 2061,
									"end": 2074,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2061,
									"end": 2066,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 2061,
									"end": 2066,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2061,
									"end": 2074,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2061,
									"end": 2074,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 2061,
									"end": 2074,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2061,
									"end": 2074,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2061,
									"end": 2074,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 2061,
									"end": 2074,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2061,
									"end": 2074,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 2061,
									"end": 2074,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2085,
									"end": 2102,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2085,
									"end": 2102,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2085,
									"end": 2102,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 2085,
									"end": 2102,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2085,
									"end": 2092,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 2085,
									"end": 2092,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2085,
									"end": 2102,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2085,
									"end": 2102,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2085,
									"end": 2102,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2085,
									"end": 2102,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2085,
									"end": 2102,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 2085,
									"end": 2102,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2085,
									"end": 2102,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 2085,
									"end": 2102,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2085,
									"end": 2102,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 387,
									"end": 404,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 407,
									"end": 419,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 407,
									"end": 417,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 407,
									"end": 417,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 407,
									"end": 417,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 407,
									"end": 419,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 407,
									"end": 419,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 407,
									"end": 419,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 407,
									"end": 419,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 407,
									"end": 419,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 430,
									"end": 436,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 430,
									"end": 448,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 430,
									"end": 448,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 430,
									"end": 448,
									"name": "AND",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 430,
									"end": 448,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 430,
									"end": 448,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 430,
									"end": 448,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 430,
									"end": 448,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 430,
									"end": 448,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 430,
									"end": 448,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 430,
									"end": 448,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 430,
									"end": 448,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 464,
									"end": 507,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 464,
									"end": 507,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 430,
									"end": 448,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 430,
									"end": 448,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 430,
									"end": 448,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 464,
									"end": 507,
									"name": "PUSH",
									"source": 7,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 464,
									"end": 507,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 464,
									"end": 507,
									"name": "LOG3",
									"source": 7
								},
								{
									"begin": 354,
									"end": 515,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2522,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 601,
									"end": 699,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 601,
									"end": 699,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 681,
									"end": 691,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 601,
									"end": 699,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 601,
									"end": 699,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "ASSIGNIMMUTABLE",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 676,
									"end": 7890,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a8b8af30583c754853680c8fcb284307981c6edad502a2c88724d9cdfd8a150b64736f6c634300060c0033",
									".code": [
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH",
											"source": 1,
											"value": "85A6B3AE"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH",
											"source": 1,
											"value": "A8B9D240"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH",
											"source": 1,
											"value": "A8B9D240"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH",
											"source": 1,
											"value": "AAFD847A"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH",
											"source": 1,
											"value": "BA72A955"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH",
											"source": 1,
											"value": "F2FDE38B"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH",
											"source": 1,
											"value": "85A6B3AE"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH",
											"source": 1,
											"value": "91B89FBA"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH",
											"source": 1,
											"value": "A457C2D7"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH",
											"source": 1,
											"value": "4CA6EF28"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH",
											"source": 1,
											"value": "6A474002"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH",
											"source": 1,
											"value": "715018A6"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH",
											"source": 1,
											"value": "27CE0147"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 676,
											"end": 7890,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5475,
											"end": 5722,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5475,
											"end": 5722,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 5475,
											"end": 5722,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5475,
											"end": 5722,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5722,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5722,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5722,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5475,
											"end": 5722,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5722,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5722,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 5475,
											"end": 5722,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5722,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5475,
											"end": 5722,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5722,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5722,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 5475,
											"end": 5722,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5475,
											"end": 5722,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5475,
											"end": 5722,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5475,
											"end": 5722,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 897,
											"end": 980,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 897,
											"end": 980,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 897,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 897,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 897,
											"end": 980,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 897,
											"end": 980,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 897,
											"end": 980,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 897,
											"end": 980,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 897,
											"end": 980,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 897,
											"end": 980,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 897,
											"end": 980,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 897,
											"end": 980,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 897,
											"end": 980,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 897,
											"end": 980,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 897,
											"end": 980,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 897,
											"end": 980,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 897,
											"end": 980,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 897,
											"end": 980,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 897,
											"end": 980,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 897,
											"end": 980,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 897,
											"end": 980,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 897,
											"end": 980,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 897,
											"end": 980,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 897,
											"end": 980,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3090,
											"end": 3190,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3090,
											"end": 3190,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3090,
											"end": 3190,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3090,
											"end": 3190,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3090,
											"end": 3190,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3090,
											"end": 3190,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3090,
											"end": 3190,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3090,
											"end": 3190,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1238,
											"end": 1386,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 1238,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1238,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 1238,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 1238,
											"end": 1386,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2382,
											"end": 2422,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2382,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2382,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2382,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2382,
											"end": 2422,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 596,
											"end": 675,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 596,
											"end": 675,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 596,
											"end": 675,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 596,
											"end": 675,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 596,
											"end": 675,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4189,
											"end": 4313,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 4189,
											"end": 4313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4189,
											"end": 4313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4189,
											"end": 4313,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4189,
											"end": 4313,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4189,
											"end": 4313,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4189,
											"end": 4313,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4189,
											"end": 4313,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4189,
											"end": 4313,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4189,
											"end": 4313,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4189,
											"end": 4313,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4189,
											"end": 4313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4189,
											"end": 4313,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4189,
											"end": 4313,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4189,
											"end": 4313,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4189,
											"end": 4313,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4189,
											"end": 4313,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4189,
											"end": 4313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4189,
											"end": 4313,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4189,
											"end": 4313,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4189,
											"end": 4313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 4189,
											"end": 4313,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2399,
											"end": 2503,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 2399,
											"end": 2503,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2399,
											"end": 2503,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2399,
											"end": 2503,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2399,
											"end": 2503,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4524,
											"end": 4692,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4524,
											"end": 4692,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4524,
											"end": 4692,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4524,
											"end": 4692,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4524,
											"end": 4692,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4524,
											"end": 4692,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4524,
											"end": 4692,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4524,
											"end": 4692,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4524,
											"end": 4692,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4524,
											"end": 4692,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4524,
											"end": 4692,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4524,
											"end": 4692,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 4524,
											"end": 4692,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4524,
											"end": 4692,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4524,
											"end": 4692,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4524,
											"end": 4692,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4524,
											"end": 4692,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 4524,
											"end": 4692,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4524,
											"end": 4692,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4524,
											"end": 4692,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4524,
											"end": 4692,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4524,
											"end": 4692,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4905,
											"end": 5034,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4905,
											"end": 5034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4905,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4905,
											"end": 5034,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4905,
											"end": 5034,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4905,
											"end": 5034,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4905,
											"end": 5034,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4905,
											"end": 5034,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4905,
											"end": 5034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4905,
											"end": 5034,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4905,
											"end": 5034,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4905,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 4905,
											"end": 5034,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4905,
											"end": 5034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4905,
											"end": 5034,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4905,
											"end": 5034,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4905,
											"end": 5034,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 4905,
											"end": 5034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4905,
											"end": 5034,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4905,
											"end": 5034,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4905,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 4905,
											"end": 5034,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2530,
											"end": 2921,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2530,
											"end": 2921,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 2921,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2530,
											"end": 2921,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2530,
											"end": 2921,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 2921,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 2921,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 2921,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2530,
											"end": 2921,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 2921,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 2921,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 2921,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2530,
											"end": 2921,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 2921,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2530,
											"end": 2921,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 2921,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 2921,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2530,
											"end": 2921,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2530,
											"end": 2921,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 2921,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2530,
											"end": 2921,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1541,
											"end": 1785,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1541,
											"end": 1785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 1541,
											"end": 1785,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1541,
											"end": 1785,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1785,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1785,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1785,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1541,
											"end": 1785,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1785,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1785,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 1541,
											"end": 1785,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1785,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1541,
											"end": 1785,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1785,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1785,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 1541,
											"end": 1785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1541,
											"end": 1785,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1541,
											"end": 1785,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 1541,
											"end": 1785,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2272,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2234,
											"end": 2247,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2234,
											"end": 2247,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2272,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2272,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4430,
											"end": 4434,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4447,
											"end": 4486,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 4456,
											"end": 4468,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 4456,
											"end": 4466,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4456,
											"end": 4468,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4456,
											"end": 4468,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 4456,
											"end": 4468,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4470,
											"end": 4477,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4479,
											"end": 4485,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4447,
											"end": 4455,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 4447,
											"end": 4486,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4447,
											"end": 4486,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 4447,
											"end": 4486,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4504,
											"end": 4508,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3388,
											"end": 3400,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3388,
											"end": 3400,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5138,
											"end": 5142,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5155,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 5165,
											"end": 5171,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5182,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5184,
											"end": 5190,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5155,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5155,
											"end": 5191,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5155,
											"end": 5191,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 5155,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 5211,
											"end": 5217,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5219,
											"end": 5231,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 5219,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5219,
											"end": 5231,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5219,
											"end": 5231,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 5219,
											"end": 5231,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 5271,
											"end": 5277,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "PUSH",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "PUSH data",
											"source": 4,
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "PUSH",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5244,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5253,
											"end": 5265,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 5253,
											"end": 5263,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5253,
											"end": 5265,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5253,
											"end": 5265,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 5253,
											"end": 5265,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5233,
											"end": 5266,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5266,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5266,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5266,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5233,
											"end": 5266,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5266,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5266,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5266,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5266,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5266,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5266,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5233,
											"end": 5266,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5233,
											"end": 5266,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5266,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5266,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5270,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 5202,
											"end": 5323,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5202,
											"end": 5323,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 5202,
											"end": 5323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5341,
											"end": 5345,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5475,
											"end": 5722,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5475,
											"end": 5722,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5651,
											"end": 5687,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5651,
											"end": 5687,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5552,
											"end": 5559,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5651,
											"end": 5687,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5651,
											"end": 5687,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5651,
											"end": 5687,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5651,
											"end": 5679,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5651,
											"end": 5687,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5651,
											"end": 5687,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5651,
											"end": 5687,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5651,
											"end": 5687,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5651,
											"end": 5687,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5651,
											"end": 5687,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1288,
											"end": 1294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5575,
											"end": 5704,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 5575,
											"end": 5704,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5575,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 5575,
											"end": 5688,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5575,
											"end": 5638,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 5575,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 5605,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 5680,
											"end": 5686,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5605,
											"end": 5614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 5605,
											"end": 5622,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5605,
											"end": 5622,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 5605,
											"end": 5622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5575,
											"end": 5600,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5575,
											"end": 5600,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5575,
											"end": 5600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5575,
											"end": 5604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 5575,
											"end": 5623,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5575,
											"end": 5623,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 5575,
											"end": 5623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5575,
											"end": 5636,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 5575,
											"end": 5638,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5575,
											"end": 5638,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 5575,
											"end": 5638,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5575,
											"end": 5650,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5575,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 5575,
											"end": 5688,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5575,
											"end": 5688,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 5575,
											"end": 5688,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5575,
											"end": 5702,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 5575,
											"end": 5704,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5575,
											"end": 5704,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 5575,
											"end": 5704,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5575,
											"end": 5716,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5575,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 5575,
											"end": 5716,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5575,
											"end": 5716,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 5575,
											"end": 5716,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 5575,
											"end": 5716,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5575,
											"end": 5716,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5568,
											"end": 5716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5568,
											"end": 5716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5722,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 5475,
											"end": 5722,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5722,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5722,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5722,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3227,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5850,
											"end": 5854,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5867,
											"end": 5950,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 5876,
											"end": 5888,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 5876,
											"end": 5886,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5876,
											"end": 5888,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5876,
											"end": 5888,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 5876,
											"end": 5888,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5890,
											"end": 5897,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 5938,
											"end": 5948,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5910,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5911,
											"end": 5923,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 5911,
											"end": 5921,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5911,
											"end": 5923,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5911,
											"end": 5923,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 5911,
											"end": 5923,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5933,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5933,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5933,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5933,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5933,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5933,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5933,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5933,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5933,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5933,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5933,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5937,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 5899,
											"end": 5949,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 897,
											"end": 980,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 897,
											"end": 980,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 897,
											"end": 980,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 897,
											"end": 980,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 897,
											"end": 980,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3090,
											"end": 3190,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3090,
											"end": 3190,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3149,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 3173,
											"end": 3183,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3149,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 3149,
											"end": 3184,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3149,
											"end": 3184,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 3149,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3149,
											"end": 3184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3090,
											"end": 3190,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3572,
											"end": 3590,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3545,
											"end": 3552,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3572,
											"end": 3590,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3590,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3590,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3590,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3572,
											"end": 3590,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3590,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3590,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3590,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3572,
											"end": 3590,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3590,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3590,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3590,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1238,
											"end": 1386,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 1238,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 818,
											"end": 830,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 818,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 818,
											"end": 830,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 818,
											"end": 830,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 818,
											"end": 830,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 808,
											"end": 814,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 808,
											"end": 814,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 808,
											"end": 814,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 808,
											"end": 814,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 808,
											"end": 814,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 808,
											"end": 830,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 808,
											"end": 830,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 808,
											"end": 830,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 800,
											"end": 867,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 800,
											"end": 867,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 800,
											"end": 867,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 800,
											"end": 867,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 800,
											"end": 867,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 800,
											"end": 867,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 800,
											"end": 867,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 800,
											"end": 867,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 800,
											"end": 867,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 800,
											"end": 867,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1335,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1329,
											"end": 1335,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1308,
											"end": 1348,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1308,
											"end": 1348,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1345,
											"end": 1346,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1345,
											"end": 1346,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1329,
											"end": 1335,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1335,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1308,
											"end": 1348,
											"name": "PUSH",
											"source": 7,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1308,
											"end": 1348,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1345,
											"end": 1346,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1345,
											"end": 1346,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1308,
											"end": 1348,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 1359,
											"end": 1365,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1359,
											"end": 1378,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1359,
											"end": 1378,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1359,
											"end": 1378,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1359,
											"end": 1378,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1359,
											"end": 1378,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1238,
											"end": 1386,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2382,
											"end": 2422,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2382,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2382,
											"end": 2422,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2382,
											"end": 2422,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2382,
											"end": 2422,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2382,
											"end": 2422,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 596,
											"end": 675,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 596,
											"end": 675,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 661,
											"end": 667,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 661,
											"end": 667,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 661,
											"end": 667,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 596,
											"end": 675,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 596,
											"end": 675,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4189,
											"end": 4313,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 4189,
											"end": 4313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4254,
											"end": 4261,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4277,
											"end": 4307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4300,
											"end": 4306,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4277,
											"end": 4299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4277,
											"end": 4307,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2399,
											"end": 2503,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2399,
											"end": 2503,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2488,
											"end": 2495,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2455,
											"end": 2468,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2455,
											"end": 2468,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2488,
											"end": 2495,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2488,
											"end": 2495,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2488,
											"end": 2495,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6576,
											"end": 6580,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6593,
											"end": 6722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 6602,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 6602,
											"end": 6612,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 6602,
											"end": 6614,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6602,
											"end": 6614,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 6602,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6616,
											"end": 6623,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 6664,
											"end": 6679,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "PUSH data",
											"source": 4,
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6636,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6637,
											"end": 6649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 6637,
											"end": 6647,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 6637,
											"end": 6649,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6637,
											"end": 6649,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 6637,
											"end": 6649,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6659,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6659,
											"name": "DUP14",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6659,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6659,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6659,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6659,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6659,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6659,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6659,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6659,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6659,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6663,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4524,
											"end": 4692,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4524,
											"end": 4692,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4659,
											"end": 4685,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4659,
											"end": 4685,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4601,
											"end": 4608,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4659,
											"end": 4685,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4659,
											"end": 4685,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4659,
											"end": 4685,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4659,
											"end": 4677,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4659,
											"end": 4685,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4659,
											"end": 4685,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4659,
											"end": 4685,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4659,
											"end": 4685,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4659,
											"end": 4685,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4659,
											"end": 4685,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4624,
											"end": 4686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4624,
											"end": 4686,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4624,
											"end": 4654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 4678,
											"end": 4684,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4624,
											"end": 4646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4624,
											"end": 4654,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4624,
											"end": 4654,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 4624,
											"end": 4654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4624,
											"end": 4658,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4624,
											"end": 4658,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 4624,
											"end": 4686,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3897,
											"end": 3901,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3914,
											"end": 3956,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3924,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 3924,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3924,
											"end": 3936,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3924,
											"end": 3936,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 3924,
											"end": 3936,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3938,
											"end": 3947,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3949,
											"end": 3955,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3914,
											"end": 3923,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3914,
											"end": 3956,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4905,
											"end": 5034,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 4905,
											"end": 5034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5002,
											"end": 5028,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 4986,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5002,
											"end": 5028,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5002,
											"end": 5028,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5002,
											"end": 5028,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5002,
											"end": 5020,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5002,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5002,
											"end": 5028,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5002,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5002,
											"end": 5028,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5002,
											"end": 5028,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5002,
											"end": 5028,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5002,
											"end": 5028,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4905,
											"end": 5034,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2530,
											"end": 2921,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2530,
											"end": 2921,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 818,
											"end": 830,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 818,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 818,
											"end": 830,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 818,
											"end": 830,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 818,
											"end": 830,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 808,
											"end": 814,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 808,
											"end": 814,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 808,
											"end": 814,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 808,
											"end": 814,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 808,
											"end": 814,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 808,
											"end": 830,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 808,
											"end": 830,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 808,
											"end": 830,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 800,
											"end": 867,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 800,
											"end": 867,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 800,
											"end": 867,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 800,
											"end": 867,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 800,
											"end": 867,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 800,
											"end": 867,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 800,
											"end": 867,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 800,
											"end": 867,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 800,
											"end": 867,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 800,
											"end": 867,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2626,
											"end": 2627,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2610,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2610,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2610,
											"end": 2623,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2610,
											"end": 2623,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2610,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2610,
											"end": 2627,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2602,
											"end": 2628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2602,
											"end": 2628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2602,
											"end": 2628,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2602,
											"end": 2628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2602,
											"end": 2628,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2602,
											"end": 2628,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2602,
											"end": 2628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2641,
											"end": 2651,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2641,
											"end": 2651,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2637,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 2637,
											"end": 2916,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 2756,
											"end": 2769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 2756,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2756,
											"end": 2769,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2756,
											"end": 2769,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 2756,
											"end": 2769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2730,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 2731,
											"end": 2737,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2730,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2730,
											"end": 2753,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2730,
											"end": 2753,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 2730,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2730,
											"end": 2769,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2730,
											"end": 2769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 2730,
											"end": 2769,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2730,
											"end": 2769,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 2730,
											"end": 2769,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 2730,
											"end": 2769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2715,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2690,
											"end": 2715,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2715,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2730,
											"end": 2769,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2730,
											"end": 2769,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2690,
											"end": 2778,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2690,
											"end": 2778,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 2690,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2662,
											"end": 2687,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2662,
											"end": 2778,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2832,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2792,
											"end": 2832,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2832,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2832,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2832,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2832,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2832,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2832,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 2823,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 2823,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2832,
											"name": "PUSH",
											"source": 1,
											"value": "A493A9229478C3FCD73F66D2CDEB7F94FD0F341DA924D1054236D78454116511"
										},
										{
											"begin": 2792,
											"end": 2832,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2832,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2832,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2832,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2832,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2832,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2792,
											"end": 2832,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2832,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2832,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 2871,
											"end": 2896,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2871,
											"end": 2896,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2871,
											"end": 2908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 2871,
											"end": 2908,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2901,
											"end": 2907,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2871,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2871,
											"end": 2908,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2871,
											"end": 2908,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 2871,
											"end": 2908,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2843,
											"end": 2868,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2843,
											"end": 2908,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 2921,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 2921,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4165,
											"end": 4183,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4165,
											"end": 4183,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4165,
											"end": 4183,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4138,
											"end": 4145,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4165,
											"end": 4183,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4165,
											"end": 4183,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4165,
											"end": 4183,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4165,
											"end": 4176,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4165,
											"end": 4183,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4165,
											"end": 4183,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4165,
											"end": 4183,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4165,
											"end": 4183,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4165,
											"end": 4183,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4165,
											"end": 4183,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4165,
											"end": 4183,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4165,
											"end": 4183,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4165,
											"end": 4192,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4165,
											"end": 4192,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4165,
											"end": 4192,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 4165,
											"end": 4192,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4165,
											"end": 4192,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4165,
											"end": 4192,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4165,
											"end": 4192,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4165,
											"end": 4192,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4165,
											"end": 4192,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4165,
											"end": 4192,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4165,
											"end": 4192,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4165,
											"end": 4192,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4165,
											"end": 4192,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1541,
											"end": 1785,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 1541,
											"end": 1785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 818,
											"end": 830,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 818,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 818,
											"end": 830,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 818,
											"end": 830,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 818,
											"end": 830,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 808,
											"end": 814,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 808,
											"end": 814,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 808,
											"end": 814,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 808,
											"end": 814,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 808,
											"end": 814,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 808,
											"end": 830,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 808,
											"end": 830,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 808,
											"end": 830,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 800,
											"end": 867,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 800,
											"end": 867,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 800,
											"end": 867,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 800,
											"end": 867,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 800,
											"end": 867,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 800,
											"end": 867,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 800,
											"end": 867,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 800,
											"end": 867,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 800,
											"end": 867,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 800,
											"end": 867,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1630,
											"end": 1652,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1652,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "PUSH data",
											"source": 7,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "CODECOPY",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1738,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1732,
											"end": 1738,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1711,
											"end": 1749,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1711,
											"end": 1749,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1711,
											"end": 1749,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1711,
											"end": 1749,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1711,
											"end": 1749,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1711,
											"end": 1749,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1738,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1738,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1711,
											"end": 1749,
											"name": "PUSH",
											"source": 7,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1711,
											"end": 1749,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1738,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1738,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1711,
											"end": 1749,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1766,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1760,
											"end": 1777,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1777,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1760,
											"end": 1777,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1760,
											"end": 1777,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1777,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1777,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1777,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1777,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1777,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1777,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1777,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1777,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1777,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1785,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 601,
											"end": 699,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 601,
											"end": 699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 681,
											"end": 691,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 601,
											"end": 699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 601,
											"end": 699,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9669,
											"end": 10049,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 9669,
											"end": 10049,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9805,
											"end": 9824,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9805,
											"end": 9824,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "PUSH data",
											"source": 4,
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9884,
											"end": 9905,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9884,
											"end": 9905,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "PUSH data",
											"source": 4,
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9957,
											"end": 9975,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9975,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9975,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9975,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9957,
											"end": 9975,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9975,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9975,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9968,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9957,
											"end": 9975,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9957,
											"end": 9975,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9975,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9975,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9975,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9957,
											"end": 9975,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9975,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9975,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9984,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9984,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9984,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9984,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9984,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9984,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9984,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9984,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9984,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9984,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9984,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9984,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9984,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9993,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9993,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9993,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10009,
											"end": 10041,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10009,
											"end": 10041,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10009,
											"end": 10041,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10009,
											"end": 10041,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10009,
											"end": 10041,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10009,
											"end": 10041,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10009,
											"end": 10041,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10009,
											"end": 10041,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10009,
											"end": 10041,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10009,
											"end": 10041,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10009,
											"end": 10041,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10009,
											"end": 10041,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10009,
											"end": 10041,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10009,
											"end": 10041,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10009,
											"end": 10041,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10009,
											"end": 10041,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10009,
											"end": 10041,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 9669,
											"end": 10049,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9669,
											"end": 10049,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9669,
											"end": 10049,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9669,
											"end": 10049,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1228,
											"end": 1420,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 1228,
											"end": 1420,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1314,
											"end": 1321,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1362,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1342,
											"end": 1348,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1342,
											"end": 1348,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1342,
											"end": 1348,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1342,
											"end": 1348,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "tag",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "tag",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1386,
											"end": 1391,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1386,
											"end": 1391,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1386,
											"end": 1391,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1228,
											"end": 1420,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1679,
											"end": 2150,
											"name": "tag",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 1679,
											"end": 2150,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1737,
											"end": 1744,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1982,
											"end": 1988,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1978,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 1978,
											"end": 2025,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2012,
											"end": 2013,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2005,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 2005,
											"end": 2013,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1978,
											"end": 2025,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 1978,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2049,
											"end": 2054,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2049,
											"end": 2054,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2049,
											"end": 2054,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2053,
											"end": 2054,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2049,
											"end": 2050,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2049,
											"end": 2054,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2049,
											"end": 2050,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2073,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 2073,
											"end": 2078,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2073,
											"end": 2078,
											"name": "INVALID",
											"source": 8
										},
										{
											"begin": 2073,
											"end": 2078,
											"name": "tag",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 2073,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2073,
											"end": 2078,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2073,
											"end": 2083,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2065,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 2065,
											"end": 2121,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2065,
											"end": 2121,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2065,
											"end": 2121,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2065,
											"end": 2121,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2065,
											"end": 2121,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2065,
											"end": 2121,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2065,
											"end": 2121,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2065,
											"end": 2121,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2065,
											"end": 2121,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2065,
											"end": 2121,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2065,
											"end": 2121,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2065,
											"end": 2121,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2065,
											"end": 2121,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2065,
											"end": 2121,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2065,
											"end": 2121,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2065,
											"end": 2121,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2065,
											"end": 2121,
											"name": "PUSH",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 2065,
											"end": 2121,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2065,
											"end": 2121,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2065,
											"end": 2121,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2065,
											"end": 2121,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2065,
											"end": 2121,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2065,
											"end": 2121,
											"name": "PUSH data",
											"source": 8,
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 2065,
											"end": 2121,
											"name": "PUSH",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 2065,
											"end": 2121,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2065,
											"end": 2121,
											"name": "CODECOPY",
											"source": 8
										},
										{
											"begin": 2065,
											"end": 2121,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2065,
											"end": 2121,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2065,
											"end": 2121,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2065,
											"end": 2121,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2065,
											"end": 2121,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2065,
											"end": 2121,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2065,
											"end": 2121,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2065,
											"end": 2121,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2065,
											"end": 2121,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2065,
											"end": 2121,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2065,
											"end": 2121,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2065,
											"end": 2121,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2065,
											"end": 2121,
											"name": "tag",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 2065,
											"end": 2121,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2141,
											"end": 2142,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1679,
											"end": 2150,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1679,
											"end": 2150,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 187,
											"end": 321,
											"name": "tag",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 187,
											"end": 321,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 243,
											"end": 249,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 277,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 293,
											"end": 299,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 293,
											"end": 299,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 293,
											"end": 299,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 293,
											"end": 299,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 285,
											"end": 300,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 285,
											"end": 300,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 285,
											"end": 300,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 285,
											"end": 300,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 285,
											"end": 300,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2550,
											"end": 2726,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 2550,
											"end": 2726,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2606,
											"end": 2612,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2636,
											"end": 2641,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2636,
											"end": 2641,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2636,
											"end": 2641,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2661,
											"end": 2667,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2661,
											"end": 2667,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2661,
											"end": 2667,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2661,
											"end": 2667,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2661,
											"end": 2667,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2661,
											"end": 2667,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2661,
											"end": 2677,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 2661,
											"end": 2677,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2661,
											"end": 2677,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2676,
											"end": 2677,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2671,
											"end": 2672,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2671,
											"end": 2677,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2671,
											"end": 2677,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2661,
											"end": 2677,
											"name": "tag",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 2661,
											"end": 2677,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2660,
											"end": 2698,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2660,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 2660,
											"end": 2698,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2660,
											"end": 2698,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2688,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2683,
											"end": 2688,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2683,
											"end": 2697,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2683,
											"end": 2697,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2683,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 2683,
											"end": 2697,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2683,
											"end": 2697,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2696,
											"end": 2697,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2692,
											"end": 2693,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2692,
											"end": 2697,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2683,
											"end": 2697,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 2683,
											"end": 2697,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2652,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 2652,
											"end": 2699,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2652,
											"end": 2699,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2652,
											"end": 2699,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2652,
											"end": 2699,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2955,
											"end": 3082,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 2955,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3011,
											"end": 3018,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3044,
											"end": 3045,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3039,
											"end": 3040,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3039,
											"end": 3045,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3039,
											"end": 3045,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3031,
											"end": 3046,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 3031,
											"end": 3046,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3031,
											"end": 3046,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3031,
											"end": 3046,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3031,
											"end": 3046,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3031,
											"end": 3046,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 3031,
											"end": 3046,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3072,
											"end": 3073,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2955,
											"end": 3082,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 325,
											"end": 506,
											"name": "tag",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 325,
											"end": 506,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 383,
											"end": 390,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 420,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 415,
											"end": 420,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 415,
											"end": 420,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 439,
											"end": 445,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 439,
											"end": 445,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 439,
											"end": 445,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 439,
											"end": 445,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 431,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 431,
											"end": 477,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 431,
											"end": 477,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 431,
											"end": 477,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 431,
											"end": 477,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 431,
											"end": 477,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 431,
											"end": 477,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 431,
											"end": 477,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 431,
											"end": 477,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 431,
											"end": 477,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 431,
											"end": 477,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 431,
											"end": 477,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 431,
											"end": 477,
											"name": "PUSH",
											"source": 8,
											"value": "1B"
										},
										{
											"begin": 431,
											"end": 477,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 431,
											"end": 477,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 431,
											"end": 477,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 431,
											"end": 477,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 431,
											"end": 477,
											"name": "PUSH",
											"source": 8,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 431,
											"end": 477,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 431,
											"end": 477,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 431,
											"end": 477,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 431,
											"end": 477,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 431,
											"end": 477,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 431,
											"end": 477,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 431,
											"end": 477,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 431,
											"end": 477,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 431,
											"end": 477,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 431,
											"end": 477,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 431,
											"end": 477,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 431,
											"end": 477,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 431,
											"end": 477,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 431,
											"end": 477,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3358,
											"end": 3976,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 3358,
											"end": 3976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3431,
											"end": 3438,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3447,
											"end": 3476,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 3502,
											"end": 3506,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3501,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3479,
											"end": 3507,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3479,
											"end": 3507,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 3479,
											"end": 3507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3447,
											"end": 3507,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3518,
											"end": 3543,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3518,
											"end": 3543,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3514,
											"end": 3954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 3514,
											"end": 3954,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3581,
											"end": 3605,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3605,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3605,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3581,
											"end": 3605,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3605,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3605,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3599,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3581,
											"end": 3605,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3581,
											"end": 3605,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3605,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3581,
											"end": 3605,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3605,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3605,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 3581,
											"end": 3632,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3631,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 3581,
											"end": 3632,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3581,
											"end": 3632,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 3581,
											"end": 3632,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3554,
											"end": 3578,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3554,
											"end": 3578,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3554,
											"end": 3578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3554,
											"end": 3578,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3554,
											"end": 3578,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3554,
											"end": 3578,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3554,
											"end": 3572,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3554,
											"end": 3578,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3554,
											"end": 3578,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3554,
											"end": 3578,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3554,
											"end": 3578,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3554,
											"end": 3578,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3554,
											"end": 3578,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3554,
											"end": 3578,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3554,
											"end": 3578,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3554,
											"end": 3578,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3554,
											"end": 3632,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3554,
											"end": 3632,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3554,
											"end": 3632,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3554,
											"end": 3632,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3646,
											"end": 3692,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3646,
											"end": 3692,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3646,
											"end": 3692,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3646,
											"end": 3692,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3646,
											"end": 3692,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3646,
											"end": 3692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3646,
											"end": 3692,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3554,
											"end": 3578,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3554,
											"end": 3578,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3646,
											"end": 3692,
											"name": "PUSH",
											"source": 1,
											"value": "EE503BEE2BB6A87E57BC57DB795F98137327401A0E7B7CE42E37926CC1A9CA4D"
										},
										{
											"begin": 3646,
											"end": 3692,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3646,
											"end": 3692,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3646,
											"end": 3692,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3646,
											"end": 3692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3646,
											"end": 3692,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3646,
											"end": 3692,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3646,
											"end": 3692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3646,
											"end": 3692,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 3701,
											"end": 3713,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3723,
											"end": 3727,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "55"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3716,
											"end": 3737,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3737,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 3738,
											"end": 3742,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3744,
											"end": 3765,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3716,
											"end": 3766,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3777,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 3777,
											"end": 3908,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3828,
											"end": 3852,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3828,
											"end": 3852,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3828,
											"end": 3852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3828,
											"end": 3852,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3828,
											"end": 3852,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3828,
											"end": 3852,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3828,
											"end": 3846,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3828,
											"end": 3852,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3828,
											"end": 3852,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3828,
											"end": 3852,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3828,
											"end": 3852,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3828,
											"end": 3852,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3828,
											"end": 3852,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3828,
											"end": 3879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 3828,
											"end": 3879,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3857,
											"end": 3878,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3828,
											"end": 3856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 3828,
											"end": 3879,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3828,
											"end": 3879,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 3828,
											"end": 3879,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3801,
											"end": 3825,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3801,
											"end": 3825,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3801,
											"end": 3825,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3801,
											"end": 3825,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3801,
											"end": 3825,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3801,
											"end": 3825,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3801,
											"end": 3819,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3801,
											"end": 3825,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3801,
											"end": 3825,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3801,
											"end": 3825,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3801,
											"end": 3825,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3801,
											"end": 3825,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3801,
											"end": 3825,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3890,
											"end": 3898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 3890,
											"end": 3898,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3890,
											"end": 3898,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3777,
											"end": 3908,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 3777,
											"end": 3908,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3925,
											"end": 3946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3918,
											"end": 3946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 3918,
											"end": 3946,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3514,
											"end": 3954,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 3514,
											"end": 3954,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3969,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3969,
											"end": 3970,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3358,
											"end": 3976,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3358,
											"end": 3976,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 789,
											"end": 925,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 789,
											"end": 925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 847,
											"end": 854,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 874,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 878,
											"end": 879,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 881,
											"end": 882,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 874,
											"end": 917,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 874,
											"end": 917,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 874,
											"end": 917,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 874,
											"end": 917,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 874,
											"end": 917,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 874,
											"end": 917,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 874,
											"end": 917,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 874,
											"end": 917,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 874,
											"end": 917,
											"name": "PUSH",
											"source": 8,
											"value": "1E"
										},
										{
											"begin": 874,
											"end": 917,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 874,
											"end": 917,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 874,
											"end": 917,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 874,
											"end": 917,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 874,
											"end": 917,
											"name": "PUSH",
											"source": 8,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 874,
											"end": 917,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 874,
											"end": 917,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 874,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 874,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 874,
											"end": 917,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"CAKE()": "4ca6ef28",
							"accumulativeDividendOf(address)": "27ce0147",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"distributeCAKEDividends(uint256)": "ba72a955",
							"dividendOf(address)": "91b89fba",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalDividendsDistributed()": "85a6b3ae",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"withdrawDividend()": "6a474002",
							"withdrawableDividendOf(address)": "a8b9d240",
							"withdrawnDividendOf(address)": "aafd847a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"DividendWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"DividendsDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CAKE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"accumulativeDividendOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"distributeCAKEDividends\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"dividendOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDividendsDistributed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawDividend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"withdrawableDividendOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"withdrawnDividendOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Roger Wu (https://github.com/roger-wu)\",\"details\":\"A mintable ERC20 token that allows anyone to pay and distribute ether  to token holders as dividends and allows token holders to withdraw their dividends.  Reference: the source code of PoWH3D: https://etherscan.io/address/0xB3775fB83F7D12A36E0475aBdD1FCA35c091efBe#code\",\"kind\":\"dev\",\"methods\":{\"accumulativeDividendOf(address)\":{\"details\":\"accumulativeDividendOf(_owner) = withdrawableDividendOf(_owner) + withdrawnDividendOf(_owner) = (magnifiedDividendPerShare * balanceOf(_owner) + magnifiedDividendCorrections[_owner]) / magnitude\",\"params\":{\"_owner\":\"The address of a token holder.\"},\"returns\":{\"_0\":\"The amount of dividend in wei that `_owner` has earned in total.\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"dividendOf(address)\":{\"params\":{\"_owner\":\"The address of a token holder.\"},\"returns\":{\"_0\":\"The amount of dividend in wei that `_owner` can withdraw.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawDividend()\":{\"details\":\"It emits a `DividendWithdrawn` event if the amount of withdrawn ether is greater than 0.\"},\"withdrawableDividendOf(address)\":{\"params\":{\"_owner\":\"The address of a token holder.\"},\"returns\":{\"_0\":\"The amount of dividend in wei that `_owner` can withdraw.\"}},\"withdrawnDividendOf(address)\":{\"params\":{\"_owner\":\"The address of a token holder.\"},\"returns\":{\"_0\":\"The amount of dividend in wei that `_owner` has withdrawn.\"}}},\"title\":\"Dividend-Paying Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"accumulativeDividendOf(address)\":{\"notice\":\"View the amount of dividend in wei that an address has earned in total.\"},\"dividendOf(address)\":{\"notice\":\"View the amount of dividend in wei that an address can withdraw.\"},\"withdrawDividend()\":{\"notice\":\"Withdraws the ether distributed to the sender.\"},\"withdrawableDividendOf(address)\":{\"notice\":\"View the amount of dividend in wei that an address can withdraw.\"},\"withdrawnDividendOf(address)\":{\"notice\":\"View the amount of dividend in wei that an address has withdrawn.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DividendPayingToken.sol\":\"DividendPayingToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0x2bfee1b62dd98b0558681cb9428ef6ac972433cb68faaacc33a70a8bd221fadc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1754beb271b4f01fb27a92d7aadc97b588a7d4c3dc4baac35b9a70408f899ccb\",\"dweb:/ipfs/QmRf3v2AFo8utJGcTJmwPDqvWjLkXajZYo3yMTCgpWYKuz\"]},\"DividendPayingToken.sol\":{\"keccak256\":\"0x13accac4fcdff888c496391ad48f1b4cca193a0c8d4344a289bce141507b5a7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba54cfb20d3dd7d81129e8ad835ab570f938ae8644fe6e09436a586330c9646e\",\"dweb:/ipfs/QmSnjy5NHYHbTQB55kEDTpC8Do2tC2x8UDExbtSXetknX5\"]},\"DividendPayingTokenInterface.sol\":{\"keccak256\":\"0x01869ea92fb8bed85e959f799a8f6fb2fa63464d957c6b1639d9e970ef5f1e12\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63d42852fa3278b2eadd8e40eb814205cedcfd45f7ab92f185f16c5eb7fe5693\",\"dweb:/ipfs/QmRVH2qkpsgthpRHTkjMysw3Gk9718GnXtf1wMwPVKrB2T\"]},\"DividendPayingTokenOptionalInterface.sol\":{\"keccak256\":\"0x7681246d5df44b86886663744f90864b2f52ec9db4aa6feb05c126178c99a71c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e6a7f00ef355e0872a02759dbaec1bf60db30d0db44cd3336565582260c471c\",\"dweb:/ipfs/QmQb7GqRQV2m5dofFFUYYAThWSg7aUErGoZwMki3jDRwwp\"]},\"ERC20.sol\":{\"keccak256\":\"0xc4da424c399e963ac694ed3c07c9c000d37ed7cdeb234dd27714dfead62bf599\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b3c9fcefb68dddd7bf6c6f2f30a44adb49d35df61262497267bebeb624dcf6d\",\"dweb:/ipfs/QmfAJrHchjPHwcjSbzWyzJuvsRWUDWdrUnJACFLahZc4D8\"]},\"IERC20.sol\":{\"keccak256\":\"0x5fb7e501e7542c237101e03cc9f3e56d8812cfe95872017300c13c5c23352c82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://207e571110a865c35c91fce35ee0eba434b5e2309510c7a36dc693fa0d44c2d6\",\"dweb:/ipfs/QmT9pmkME8q7D7eSS37ZKbaaWUnQTYpt6dATjZgirmX2BV\"]},\"IERC20Metadata.sol\":{\"keccak256\":\"0x46d83945c75429345dbdcae90f62764a825f913086354d9e9198fdeb71dbbb9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9523f861e3488d33d8ca7bf3d83f8c9d1234809c413b3f9d3394e6f6aeec303e\",\"dweb:/ipfs/QmbgGLk1wojrsgGu3XoX1PHN5wdh3NikHKJim394NTR262\"]},\"Ownable.sol\":{\"keccak256\":\"0xda6c392cee9da1fa331b00cb4d127bf27ec00f2bd64e0887ce2fff43ca9d3747\",\"license\":\"MIT License\",\"urls\":[\"bzz-raw://2ec582529796922b79b6fb5235637ac8678e734ea7d245bef96dcafe5104ba96\",\"dweb:/ipfs/QmWspqAWg2gbVQfqyYUoZCDhtSABuocHQ81TH1KKUW92JT\"]},\"SafeMath.sol\":{\"keccak256\":\"0x6d26cf7be1f1bc0678f06849575acbe0314513135adb03799a9554748f04ecfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8249fec945bad7f5ab24877ce675d139b978f7b46fb4e631b584e0e4185a0368\",\"dweb:/ipfs/QmTc8hj9hcY6N6amV3bx5QRTqPnhaLfdYwXSgHMH3Kyioy\"]},\"SafeMathInt.sol\":{\"keccak256\":\"0xd741644275fdbc489ab1f457868cb8fb94fb4c2d9e539cfcf2bf79b76214f7ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f9b06181930db735589b93afd67df2014a645f889b0ab250373fc723f26d0ea\",\"dweb:/ipfs/QmQJLacM6P5u3P7fRgpYDmFH9bHjq7m6hFKQFtzCi6LjUZ\"]},\"SafeMathUint.sol\":{\"keccak256\":\"0x2e6b561e85049defbc1cdc7eac94786f641743451eb3c37568581cf5905d21ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c243a2b058dc749818d9960d1eac27df228f17ce217ec7d8ef004f8605c3cc11\",\"dweb:/ipfs/QmcJddtWBAX789Z91UKBBjKz1aXbj7ZcLRddAmrvUXn79R\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"accumulativeDividendOf(address)": {
								"notice": "View the amount of dividend in wei that an address has earned in total."
							},
							"dividendOf(address)": {
								"notice": "View the amount of dividend in wei that an address can withdraw."
							},
							"withdrawDividend()": {
								"notice": "Withdraws the ether distributed to the sender."
							},
							"withdrawableDividendOf(address)": {
								"notice": "View the amount of dividend in wei that an address can withdraw."
							},
							"withdrawnDividendOf(address)": {
								"notice": "View the amount of dividend in wei that an address has withdrawn."
							}
						},
						"version": 1
					}
				}
			},
			"DividendPayingTokenInterface.sol": {
				"DividendPayingTokenInterface": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "weiAmount",
									"type": "uint256"
								}
							],
							"name": "DividendWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "weiAmount",
									"type": "uint256"
								}
							],
							"name": "DividendsDistributed",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "dividendOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawDividend",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Roger Wu (https://github.com/roger-wu)",
						"details": "An interface for a dividend-paying token contract.",
						"events": {
							"DividendWithdrawn(address,uint256)": {
								"details": "This event MUST emit when an address withdraws their dividend.",
								"params": {
									"to": "The address which withdraws ether from this contract.",
									"weiAmount": "The amount of withdrawn ether in wei."
								}
							},
							"DividendsDistributed(address,uint256)": {
								"details": "This event MUST emit when ether is distributed to token holders.",
								"params": {
									"from": "The address which sends ether to this contract.",
									"weiAmount": "The amount of distributed ether in wei."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"dividendOf(address)": {
								"params": {
									"_owner": "The address of a token holder."
								},
								"returns": {
									"_0": "The amount of dividend in wei that `_owner` can withdraw."
								}
							},
							"withdrawDividend()": {
								"details": "SHOULD transfer `dividendOf(msg.sender)` wei to `msg.sender`, and `dividendOf(msg.sender)` SHOULD be 0 after the transfer.  MUST emit a `DividendWithdrawn` event if the amount of ether transferred is greater than 0."
							}
						},
						"title": "Dividend-Paying Token Interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"dividendOf(address)": "91b89fba",
							"withdrawDividend()": "6a474002"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"DividendWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"DividendsDistributed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"dividendOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawDividend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Roger Wu (https://github.com/roger-wu)\",\"details\":\"An interface for a dividend-paying token contract.\",\"events\":{\"DividendWithdrawn(address,uint256)\":{\"details\":\"This event MUST emit when an address withdraws their dividend.\",\"params\":{\"to\":\"The address which withdraws ether from this contract.\",\"weiAmount\":\"The amount of withdrawn ether in wei.\"}},\"DividendsDistributed(address,uint256)\":{\"details\":\"This event MUST emit when ether is distributed to token holders.\",\"params\":{\"from\":\"The address which sends ether to this contract.\",\"weiAmount\":\"The amount of distributed ether in wei.\"}}},\"kind\":\"dev\",\"methods\":{\"dividendOf(address)\":{\"params\":{\"_owner\":\"The address of a token holder.\"},\"returns\":{\"_0\":\"The amount of dividend in wei that `_owner` can withdraw.\"}},\"withdrawDividend()\":{\"details\":\"SHOULD transfer `dividendOf(msg.sender)` wei to `msg.sender`, and `dividendOf(msg.sender)` SHOULD be 0 after the transfer.  MUST emit a `DividendWithdrawn` event if the amount of ether transferred is greater than 0.\"}},\"title\":\"Dividend-Paying Token Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"dividendOf(address)\":{\"notice\":\"View the amount of dividend in wei that an address can withdraw.\"},\"withdrawDividend()\":{\"notice\":\"Withdraws the ether distributed to the sender.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DividendPayingTokenInterface.sol\":\"DividendPayingTokenInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DividendPayingTokenInterface.sol\":{\"keccak256\":\"0x01869ea92fb8bed85e959f799a8f6fb2fa63464d957c6b1639d9e970ef5f1e12\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63d42852fa3278b2eadd8e40eb814205cedcfd45f7ab92f185f16c5eb7fe5693\",\"dweb:/ipfs/QmRVH2qkpsgthpRHTkjMysw3Gk9718GnXtf1wMwPVKrB2T\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"dividendOf(address)": {
								"notice": "View the amount of dividend in wei that an address can withdraw."
							},
							"withdrawDividend()": {
								"notice": "Withdraws the ether distributed to the sender."
							}
						},
						"version": 1
					}
				}
			},
			"DividendPayingTokenOptionalInterface.sol": {
				"DividendPayingTokenOptionalInterface": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "accumulativeDividendOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "withdrawableDividendOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "withdrawnDividendOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Roger Wu (https://github.com/roger-wu)",
						"details": "OPTIONAL functions for a dividend-paying token contract.",
						"kind": "dev",
						"methods": {
							"accumulativeDividendOf(address)": {
								"details": "accumulativeDividendOf(_owner) = withdrawableDividendOf(_owner) + withdrawnDividendOf(_owner)",
								"params": {
									"_owner": "The address of a token holder."
								},
								"returns": {
									"_0": "The amount of dividend in wei that `_owner` has earned in total."
								}
							},
							"withdrawableDividendOf(address)": {
								"params": {
									"_owner": "The address of a token holder."
								},
								"returns": {
									"_0": "The amount of dividend in wei that `_owner` can withdraw."
								}
							},
							"withdrawnDividendOf(address)": {
								"params": {
									"_owner": "The address of a token holder."
								},
								"returns": {
									"_0": "The amount of dividend in wei that `_owner` has withdrawn."
								}
							}
						},
						"title": "Dividend-Paying Token Optional Interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"accumulativeDividendOf(address)": "27ce0147",
							"withdrawableDividendOf(address)": "a8b9d240",
							"withdrawnDividendOf(address)": "aafd847a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"accumulativeDividendOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"withdrawableDividendOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"withdrawnDividendOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Roger Wu (https://github.com/roger-wu)\",\"details\":\"OPTIONAL functions for a dividend-paying token contract.\",\"kind\":\"dev\",\"methods\":{\"accumulativeDividendOf(address)\":{\"details\":\"accumulativeDividendOf(_owner) = withdrawableDividendOf(_owner) + withdrawnDividendOf(_owner)\",\"params\":{\"_owner\":\"The address of a token holder.\"},\"returns\":{\"_0\":\"The amount of dividend in wei that `_owner` has earned in total.\"}},\"withdrawableDividendOf(address)\":{\"params\":{\"_owner\":\"The address of a token holder.\"},\"returns\":{\"_0\":\"The amount of dividend in wei that `_owner` can withdraw.\"}},\"withdrawnDividendOf(address)\":{\"params\":{\"_owner\":\"The address of a token holder.\"},\"returns\":{\"_0\":\"The amount of dividend in wei that `_owner` has withdrawn.\"}}},\"title\":\"Dividend-Paying Token Optional Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"accumulativeDividendOf(address)\":{\"notice\":\"View the amount of dividend in wei that an address has earned in total.\"},\"withdrawableDividendOf(address)\":{\"notice\":\"View the amount of dividend in wei that an address can withdraw.\"},\"withdrawnDividendOf(address)\":{\"notice\":\"View the amount of dividend in wei that an address has withdrawn.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DividendPayingTokenOptionalInterface.sol\":\"DividendPayingTokenOptionalInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DividendPayingTokenOptionalInterface.sol\":{\"keccak256\":\"0x7681246d5df44b86886663744f90864b2f52ec9db4aa6feb05c126178c99a71c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e6a7f00ef355e0872a02759dbaec1bf60db30d0db44cd3336565582260c471c\",\"dweb:/ipfs/QmQb7GqRQV2m5dofFFUYYAThWSg7aUErGoZwMki3jDRwwp\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"accumulativeDividendOf(address)": {
								"notice": "View the amount of dividend in wei that an address has earned in total."
							},
							"withdrawableDividendOf(address)": {
								"notice": "View the amount of dividend in wei that an address can withdraw."
							},
							"withdrawnDividendOf(address)": {
								"notice": "View the amount of dividend in wei that an address has withdrawn."
							}
						},
						"version": 1
					}
				}
			},
			"ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ERC20.sol\":1358:10780  contract ERC20 is Context, IERC20, IERC20Metadata {\r... */\n  mstore(0x40, 0x80)\n    /* \"ERC20.sol\":1987:2110  constructor(string memory name_, string memory symbol_) public {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x40\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  swap1\n  dup4\n  add\n  swap1\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  dup3\n  mload\n  0x0100000000\n  dup2\n  gt\n  dup3\n  dup3\n  add\n  dup9\n  lt\n  or\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  dup3\n  mstore\n  pop\n  dup2\n  mload\n  0x20\n  swap2\n  dup3\n  add\n  swap3\n  swap1\n  swap2\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_6:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_8\n  jumpi\n  dup2\n  dup2\n  add\n  mload\n  dup4\n  dup3\n  add\n  mstore\n  0x20\n  add\n  jump(tag_6)\ntag_8:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_10\n  jumpi\n  0x00\n  dup1\n  revert\ntag_10:\n  swap1\n  dup4\n  add\n  swap1\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  0x00\n  dup1\n  revert\ntag_11:\n  dup3\n  mload\n  0x0100000000\n  dup2\n  gt\n  dup3\n  dup3\n  add\n  dup9\n  lt\n  or\n  iszero\n  tag_12\n  jumpi\n  0x00\n  dup1\n  revert\ntag_12:\n  dup3\n  mstore\n  pop\n  dup2\n  mload\n  0x20\n  swap2\n  dup3\n  add\n  swap3\n  swap1\n  swap2\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_13:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_15\n  jumpi\n  dup2\n  dup2\n  add\n  mload\n  dup4\n  dup3\n  add\n  mstore\n  0x20\n  add\n  jump(tag_13)\ntag_15:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_16\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_16:\n  pop\n  0x40\n  mstore\n  pop\n  pop\n    /* \"ERC20.sol\":2061:2074  _name = name_ */\n  dup3\n  mload\n  tag_19\n  swap2\n  pop\n    /* \"ERC20.sol\":2061:2066  _name */\n  0x03\n  swap1\n    /* \"ERC20.sol\":2061:2074  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n    /* \"ERC20.sol\":2085:2102  _symbol = symbol_ */\n  dup1\n  mload\n  tag_21\n  swap1\n    /* \"ERC20.sol\":2085:2092  _symbol */\n  0x04\n  swap1\n    /* \"ERC20.sol\":2085:2102  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_20\n  jump\t// in\ntag_21:\n  pop\n    /* \"ERC20.sol\":1987:2110  constructor(string memory name_, string memory symbol_) public {\r... */\n  pop\n  pop\n    /* \"ERC20.sol\":1358:10780  contract ERC20 is Context, IERC20, IERC20Metadata {\r... */\n  jump(tag_22)\ntag_20:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_24\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_26)\ntag_24:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_26\n  jumpi\n  swap2\n  dup3\n  add\ntag_25:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_26\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_25)\ntag_26:\n  pop\n  tag_27\n  swap3\n  swap2\n  pop\n  tag_28\n  jump\t// in\ntag_27:\n  pop\n  swap1\n  jump\t// out\ntag_28:\ntag_29:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_27\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_29)\ntag_22:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC20.sol\":1358:10780  contract ERC20 is Context, IERC20, IERC20Metadata {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ERC20.sol\":2180:2280  function name() public view virtual override returns (string memory) {\r... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_17:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_19\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_17)\n    tag_19:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_20\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_20:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":4347:4516  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_4:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_23\n      jump\t// in\n    tag_21:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ERC20.sol\":3300:3408  function totalSupply() public view virtual override returns (uint256) {\r... */\n    tag_5:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ERC20.sol\":4998:5353  function transferFrom(\r... */\n    tag_6:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_28\n      jump\t// in\n        /* \"ERC20.sol\":3142:3235  function decimals() public view virtual override returns (uint8) {\r... */\n    tag_7:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ERC20.sol\":5762:5980  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r... */\n    tag_8:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_33\n      jump\t// in\n        /* \"ERC20.sol\":3471:3598  function balanceOf(address account) public view virtual override returns (uint256) {\r... */\n    tag_9:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_36\n      jump\t// in\n        /* \"ERC20.sol\":2399:2503  function symbol() public view virtual override returns (string memory) {\r... */\n    tag_10:\n      tag_15\n      tag_38\n      jump\t// in\n        /* \"ERC20.sol\":6483:6752  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r... */\n    tag_11:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_45\n      jump\t// in\n        /* \"ERC20.sol\":3811:3986  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_12:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_48\n      jump\t// in\n        /* \"ERC20.sol\":4049:4200  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n    tag_13:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_51\n      jump\t// in\n        /* \"ERC20.sol\":2180:2280  function name() public view virtual override returns (string memory) {\r... */\n    tag_16:\n        /* \"ERC20.sol\":2267:2272  _name */\n      0x03\n        /* \"ERC20.sol\":2260:2272  return _name */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"ERC20.sol\":2234:2247  string memory */\n      0x60\n      swap4\n        /* \"ERC20.sol\":2260:2272  return _name */\n      swap1\n      swap3\n        /* \"ERC20.sol\":2267:2272  _name */\n      swap1\n      swap2\n        /* \"ERC20.sol\":2260:2272  return _name */\n      dup4\n      add\n        /* \"ERC20.sol\":2267:2272  _name */\n      dup3\n        /* \"ERC20.sol\":2260:2272  return _name */\n      dup3\n      dup1\n      iszero\n      tag_53\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_54\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_53)\n    tag_54:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_55:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_55\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_53:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC20.sol\":2180:2280  function name() public view virtual override returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":4347:4516  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_23:\n        /* \"ERC20.sol\":4430:4434  bool */\n      0x00\n        /* \"ERC20.sol\":4447:4486  _approve(_msgSender(), spender, amount) */\n      tag_57\n        /* \"ERC20.sol\":4456:4468  _msgSender() */\n      tag_58\n        /* \"ERC20.sol\":4456:4466  _msgSender */\n      tag_59\n        /* \"ERC20.sol\":4456:4468  _msgSender() */\n      jump\t// in\n    tag_58:\n        /* \"ERC20.sol\":4470:4477  spender */\n      dup5\n        /* \"ERC20.sol\":4479:4485  amount */\n      dup5\n        /* \"ERC20.sol\":4447:4455  _approve */\n      tag_60\n        /* \"ERC20.sol\":4447:4486  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_57:\n      pop\n        /* \"ERC20.sol\":4504:4508  true */\n      0x01\n        /* \"ERC20.sol\":4347:4516  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":3300:3408  function totalSupply() public view virtual override returns (uint256) {\r... */\n    tag_25:\n        /* \"ERC20.sol\":3388:3400  _totalSupply */\n      sload(0x02)\n        /* \"ERC20.sol\":3300:3408  function totalSupply() public view virtual override returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":4998:5353  function transferFrom(\r... */\n    tag_28:\n        /* \"ERC20.sol\":5138:5142  bool */\n      0x00\n        /* \"ERC20.sol\":5155:5191  _transfer(sender, recipient, amount) */\n      tag_63\n        /* \"ERC20.sol\":5165:5171  sender */\n      dup5\n        /* \"ERC20.sol\":5173:5182  recipient */\n      dup5\n        /* \"ERC20.sol\":5184:5190  amount */\n      dup5\n        /* \"ERC20.sol\":5155:5164  _transfer */\n      tag_64\n        /* \"ERC20.sol\":5155:5191  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_63:\n        /* \"ERC20.sol\":5202:5323  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_65\n        /* \"ERC20.sol\":5211:5217  sender */\n      dup5\n        /* \"ERC20.sol\":5219:5231  _msgSender() */\n      tag_66\n        /* \"ERC20.sol\":5219:5229  _msgSender */\n      tag_59\n        /* \"ERC20.sol\":5219:5231  _msgSender() */\n      jump\t// in\n    tag_66:\n        /* \"ERC20.sol\":5233:5322  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_67\n        /* \"ERC20.sol\":5271:5277  amount */\n      dup6\n        /* \"ERC20.sol\":5233:5322  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5233:5252  _allowances[sender] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":5233:5244  _allowances */\n      0x01\n        /* \"ERC20.sol\":5233:5252  _allowances[sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"ERC20.sol\":5253:5265  _msgSender() */\n      tag_68\n        /* \"ERC20.sol\":5253:5263  _msgSender */\n      tag_59\n        /* \"ERC20.sol\":5253:5265  _msgSender() */\n      jump\t// in\n    tag_68:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5233:5266  _allowances[sender][_msgSender()] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      swap2\n        /* \"ERC20.sol\":5233:5322  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap1\n        /* \"ERC20.sol\":5233:5270  _allowances[sender][_msgSender()].sub */\n      tag_69\n        /* \"ERC20.sol\":5233:5322  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      jump\t// in\n    tag_67:\n        /* \"ERC20.sol\":5202:5210  _approve */\n      tag_60\n        /* \"ERC20.sol\":5202:5323  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_65:\n      pop\n        /* \"ERC20.sol\":5341:5345  true */\n      0x01\n        /* \"ERC20.sol\":4998:5353  function transferFrom(\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":3142:3235  function decimals() public view virtual override returns (uint8) {\r... */\n    tag_30:\n        /* \"ERC20.sol\":3225:3227  18 */\n      0x12\n        /* \"ERC20.sol\":3142:3235  function decimals() public view virtual override returns (uint8) {\r... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":5762:5980  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r... */\n    tag_33:\n        /* \"ERC20.sol\":5850:5854  bool */\n      0x00\n        /* \"ERC20.sol\":5867:5950  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_57\n        /* \"ERC20.sol\":5876:5888  _msgSender() */\n      tag_73\n        /* \"ERC20.sol\":5876:5886  _msgSender */\n      tag_59\n        /* \"ERC20.sol\":5876:5888  _msgSender() */\n      jump\t// in\n    tag_73:\n        /* \"ERC20.sol\":5890:5897  spender */\n      dup5\n        /* \"ERC20.sol\":5899:5949  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_67\n        /* \"ERC20.sol\":5938:5948  addedValue */\n      dup6\n        /* \"ERC20.sol\":5899:5910  _allowances */\n      0x01\n        /* \"ERC20.sol\":5899:5924  _allowances[_msgSender()] */\n      0x00\n        /* \"ERC20.sol\":5911:5923  _msgSender() */\n      tag_75\n        /* \"ERC20.sol\":5911:5921  _msgSender */\n      tag_59\n        /* \"ERC20.sol\":5911:5923  _msgSender() */\n      jump\t// in\n    tag_75:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":5899:5924  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"ERC20.sol\":5899:5933  _allowances[_msgSender()][spender] */\n      swap2\n      dup13\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"ERC20.sol\":5899:5937  _allowances[_msgSender()][spender].add */\n      tag_76\n        /* \"ERC20.sol\":5899:5949  _allowances[_msgSender()][spender].add(addedValue) */\n      jump\t// in\n        /* \"ERC20.sol\":3471:3598  function balanceOf(address account) public view virtual override returns (uint256) {\r... */\n    tag_36:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":3572:3590  _balances[account] */\n      and\n        /* \"ERC20.sol\":3545:3552  uint256 */\n      0x00\n        /* \"ERC20.sol\":3572:3590  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"ERC20.sol\":3471:3598  function balanceOf(address account) public view virtual override returns (uint256) {\r... */\n      jump\t// out\n        /* \"ERC20.sol\":2399:2503  function symbol() public view virtual override returns (string memory) {\r... */\n    tag_38:\n        /* \"ERC20.sol\":2488:2495  _symbol */\n      0x04\n        /* \"ERC20.sol\":2481:2495  return _symbol */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"ERC20.sol\":2455:2468  string memory */\n      0x60\n      swap4\n        /* \"ERC20.sol\":2481:2495  return _symbol */\n      swap1\n      swap3\n        /* \"ERC20.sol\":2488:2495  _symbol */\n      swap1\n      swap2\n        /* \"ERC20.sol\":2481:2495  return _symbol */\n      dup4\n      add\n        /* \"ERC20.sol\":2488:2495  _symbol */\n      dup3\n        /* \"ERC20.sol\":2481:2495  return _symbol */\n      dup3\n      dup1\n      iszero\n      tag_53\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_54\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_53)\n        /* \"ERC20.sol\":6483:6752  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r... */\n    tag_45:\n        /* \"ERC20.sol\":6576:6580  bool */\n      0x00\n        /* \"ERC20.sol\":6593:6722  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_57\n        /* \"ERC20.sol\":6602:6614  _msgSender() */\n      tag_84\n        /* \"ERC20.sol\":6602:6612  _msgSender */\n      tag_59\n        /* \"ERC20.sol\":6602:6614  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"ERC20.sol\":6616:6623  spender */\n      dup5\n        /* \"ERC20.sol\":6625:6721  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_67\n        /* \"ERC20.sol\":6664:6679  subtractedValue */\n      dup6\n        /* \"ERC20.sol\":6625:6721  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"ERC20.sol\":6625:6636  _allowances */\n      0x01\n        /* \"ERC20.sol\":6625:6650  _allowances[_msgSender()] */\n      0x00\n        /* \"ERC20.sol\":6637:6649  _msgSender() */\n      tag_86\n        /* \"ERC20.sol\":6637:6647  _msgSender */\n      tag_59\n        /* \"ERC20.sol\":6637:6649  _msgSender() */\n      jump\t// in\n    tag_86:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":6625:6650  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"ERC20.sol\":6625:6659  _allowances[_msgSender()][spender] */\n      swap2\n      dup14\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"ERC20.sol\":6625:6721  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap1\n        /* \"ERC20.sol\":6625:6663  _allowances[_msgSender()][spender].sub */\n      tag_69\n        /* \"ERC20.sol\":6625:6721  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      jump\t// in\n        /* \"ERC20.sol\":3811:3986  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_48:\n        /* \"ERC20.sol\":3897:3901  bool */\n      0x00\n        /* \"ERC20.sol\":3914:3956  _transfer(_msgSender(), recipient, amount) */\n      tag_57\n        /* \"ERC20.sol\":3924:3936  _msgSender() */\n      tag_89\n        /* \"ERC20.sol\":3924:3934  _msgSender */\n      tag_59\n        /* \"ERC20.sol\":3924:3936  _msgSender() */\n      jump\t// in\n    tag_89:\n        /* \"ERC20.sol\":3938:3947  recipient */\n      dup5\n        /* \"ERC20.sol\":3949:3955  amount */\n      dup5\n        /* \"ERC20.sol\":3914:3923  _transfer */\n      tag_64\n        /* \"ERC20.sol\":3914:3956  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"ERC20.sol\":4049:4200  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n    tag_51:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":4165:4183  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"ERC20.sol\":4138:4145  uint256 */\n      0x00\n        /* \"ERC20.sol\":4165:4183  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC20.sol\":4165:4176  _allowances */\n      0x01\n        /* \"ERC20.sol\":4165:4183  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":4165:4192  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"ERC20.sol\":4049:4200  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n      jump\t// out\n        /* \"Context.sol\":601:699  function _msgSender() internal view virtual returns (address) {\r... */\n    tag_59:\n        /* \"Context.sol\":681:691  msg.sender */\n      caller\n        /* \"Context.sol\":601:699  function _msgSender() internal view virtual returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":9669:10049  function _approve(\r... */\n    tag_60:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":9805:9824  owner != address(0) */\n      dup4\n      and\n        /* \"ERC20.sol\":9797:9865  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":9884:9905  spender != address(0) */\n      dup3\n      and\n        /* \"ERC20.sol\":9876:9944  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_94:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":9957:9975  _allowances[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ERC20.sol\":9957:9968  _allowances */\n      0x01\n        /* \"ERC20.sol\":9957:9975  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20.sol\":9957:9984  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ERC20.sol\":9957:9993  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"ERC20.sol\":10009:10041  Approval(owner, spender, amount) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"ERC20.sol\":9669:10049  function _approve(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":7242:7815  function _transfer(\r... */\n    tag_64:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":7382:7402  sender != address(0) */\n      dup4\n      and\n        /* \"ERC20.sol\":7374:7444  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_96:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":7463:7486  recipient != address(0) */\n      dup3\n      and\n        /* \"ERC20.sol\":7455:7526  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"ERC20.sol\":7539:7586  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_98\n        /* \"ERC20.sol\":7560:7566  sender */\n      dup4\n        /* \"ERC20.sol\":7568:7577  recipient */\n      dup4\n        /* \"ERC20.sol\":7579:7585  amount */\n      dup4\n        /* \"ERC20.sol\":7539:7559  _beforeTokenTransfer */\n      tag_99\n        /* \"ERC20.sol\":7539:7586  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_98:\n        /* \"ERC20.sol\":7619:7690  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"ERC20.sol\":7641:7647  amount */\n      dup2\n        /* \"ERC20.sol\":7619:7690  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":7619:7636  _balances[sender] */\n      dup7\n      and\n        /* \"ERC20.sol\":7619:7628  _balances */\n      0x00\n        /* \"ERC20.sol\":7619:7636  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"ERC20.sol\":7619:7690  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap1\n        /* \"ERC20.sol\":7619:7640  _balances[sender].sub */\n      tag_69\n        /* \"ERC20.sol\":7619:7690  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      jump\t// in\n    tag_100:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":7599:7616  _balances[sender] */\n      dup1\n      dup6\n      and\n        /* \"ERC20.sol\":7599:7608  _balances */\n      0x00\n        /* \"ERC20.sol\":7599:7616  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"ERC20.sol\":7599:7690  _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"ERC20.sol\":7724:7744  _balances[recipient] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"ERC20.sol\":7724:7756  _balances[recipient].add(amount) */\n      tag_101\n      swap1\n        /* \"ERC20.sol\":7749:7755  amount */\n      dup3\n        /* \"ERC20.sol\":7724:7748  _balances[recipient].add */\n      tag_76\n        /* \"ERC20.sol\":7724:7756  _balances[recipient].add(amount) */\n      jump\t// in\n    tag_101:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20.sol\":7701:7721  _balances[recipient] */\n      dup1\n      dup5\n      and\n        /* \"ERC20.sol\":7701:7710  _balances */\n      0x00\n        /* \"ERC20.sol\":7701:7721  _balances[recipient] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ERC20.sol\":7701:7756  _balances[recipient] = _balances[recipient].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"ERC20.sol\":7772:7807  Transfer(sender, recipient, amount) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"ERC20.sol\":7701:7721  _balances[recipient] */\n      swap2\n      swap4\n        /* \"ERC20.sol\":7772:7807  Transfer(sender, recipient, amount) */\n      swap3\n      dup8\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"ERC20.sol\":7242:7815  function _transfer(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SafeMath.sol\":1228:1420  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n    tag_69:\n        /* \"SafeMath.sol\":1314:1321  uint256 */\n      0x00\n        /* \"SafeMath.sol\":1350:1362  errorMessage */\n      dup2\n        /* \"SafeMath.sol\":1342:1348  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"SafeMath.sol\":1334:1363  require(b <= a, errorMessage) */\n      tag_103\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_104:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_106\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_104)\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_107\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_107:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n      pop\n      pop\n      pop\n        /* \"SafeMath.sol\":1386:1391  a - b */\n      swap1\n      sub\n      swap1\n        /* \"SafeMath.sol\":1228:1420  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n      jump\t// out\n        /* \"SafeMath.sol\":325:506  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_76:\n        /* \"SafeMath.sol\":383:390  uint256 */\n      0x00\n        /* \"SafeMath.sol\":415:420  a + b */\n      dup3\n      dup3\n      add\n        /* \"SafeMath.sol\":439:445  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"SafeMath.sol\":431:477  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_109\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_109:\n        /* \"SafeMath.sol\":497:498  c */\n      swap4\n        /* \"SafeMath.sol\":325:506  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":10652:10777  function _beforeTokenTransfer(\r... */\n    tag_99:\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa2646970667358221220c6cb455ffbde82515ca860e1535d67868c1a4eaf90faccc06fc0a48716824e6164736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405162000c5138038062000c518339818101604052604081101561003557600080fd5b810190808051604051939291908464010000000082111561005557600080fd5b90830190602082018581111561006a57600080fd5b825164010000000081118282018810171561008457600080fd5b82525081516020918201929091019080838360005b838110156100b1578181015183820152602001610099565b50505050905090810190601f1680156100de5780820380516001836020036101000a031916815260200191505b506040526020018051604051939291908464010000000082111561010157600080fd5b90830190602082018581111561011657600080fd5b825164010000000081118282018810171561013057600080fd5b82525081516020918201929091019080838360005b8381101561015d578181015183820152602001610145565b50505050905090810190601f16801561018a5780820380516001836020036101000a031916815260200191505b50604052505082516101a4915060039060208501906101c0565b5080516101b89060049060208401906101c0565b505050610253565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061020157805160ff191683800117855561022e565b8280016001018555821561022e579182015b8281111561022e578251825591602001919060010190610213565b5061023a92915061023e565b5090565b5b8082111561023a576000815560010161023f565b6109ee80620002636000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063395093511161007157806339509351146101d957806370a082311461020557806395d89b411461022b578063a457c2d714610233578063a9059cbb1461025f578063dd62ed3e1461028b576100a9565b806306fdde03146100ae578063095ea7b31461012b57806318160ddd1461016b57806323b872dd14610185578063313ce567146101bb575b600080fd5b6100b66102b9565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100f05781810151838201526020016100d8565b50505050905090810190601f16801561011d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101576004803603604081101561014157600080fd5b506001600160a01b03813516906020013561034f565b604080519115158252519081900360200190f35b61017361036c565b60408051918252519081900360200190f35b6101576004803603606081101561019b57600080fd5b506001600160a01b03813581169160208101359091169060400135610372565b6101c36103f9565b6040805160ff9092168252519081900360200190f35b610157600480360360408110156101ef57600080fd5b506001600160a01b0381351690602001356103fe565b6101736004803603602081101561021b57600080fd5b50356001600160a01b031661044c565b6100b6610467565b6101576004803603604081101561024957600080fd5b506001600160a01b0381351690602001356104c8565b6101576004803603604081101561027557600080fd5b506001600160a01b038135169060200135610530565b610173600480360360408110156102a157600080fd5b506001600160a01b0381358116916020013516610544565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b820191906000526020600020905b81548152906001019060200180831161032857829003601f168201915b5050505050905090565b600061036361035c61056f565b8484610573565b50600192915050565b60025490565b600061037f84848461065f565b6103ef8461038b61056f565b6103ea85604051806060016040528060288152602001610923602891396001600160a01b038a166000908152600160205260408120906103c961056f565b6001600160a01b0316815260208101919091526040016000205491906107ba565b610573565b5060019392505050565b601290565b600061036361040b61056f565b846103ea856001600061041c61056f565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610851565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b60006103636104d561056f565b846103ea8560405180606001604052806025815260200161099460259139600160006104ff61056f565b6001600160a01b03908116825260208083019390935260409182016000908120918d168152925290205491906107ba565b600061036361053d61056f565b848461065f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166105b85760405162461bcd60e51b81526004018080602001828103825260248152602001806109706024913960400191505060405180910390fd5b6001600160a01b0382166105fd5760405162461bcd60e51b81526004018080602001828103825260228152602001806108db6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166106a45760405162461bcd60e51b815260040180806020018281038252602581526020018061094b6025913960400191505060405180910390fd5b6001600160a01b0382166106e95760405162461bcd60e51b81526004018080602001828103825260238152602001806108b86023913960400191505060405180910390fd5b6106f48383836108b2565b610731816040518060600160405280602681526020016108fd602691396001600160a01b03861660009081526020819052604090205491906107ba565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546107609082610851565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156108495760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561080e5781810151838201526020016107f6565b50505050905090810190601f16801561083b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156108ab576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220c6cb455ffbde82515ca860e1535d67868c1a4eaf90faccc06fc0a48716824e6164736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xC51 CODESIZE SUB DUP1 PUSH3 0xC51 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0x84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x99 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xDE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x101 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x145 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x18A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP DUP3 MLOAD PUSH2 0x1A4 SWAP2 POP PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x1C0 JUMP JUMPDEST POP DUP1 MLOAD PUSH2 0x1B8 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x1C0 JUMP JUMPDEST POP POP POP PUSH2 0x253 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x201 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x22E JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x22E JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x22E JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x213 JUMP JUMPDEST POP PUSH2 0x23A SWAP3 SWAP2 POP PUSH2 0x23E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x23A JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x23F JUMP JUMPDEST PUSH2 0x9EE DUP1 PUSH3 0x263 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x28B JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1BB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x11D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x34F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH2 0x36C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x372 JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3FE JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x44C JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x467 JUMP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4C8 JUMP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x530 JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x544 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x345 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x345 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x328 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x35C PUSH2 0x56F JUMP JUMPDEST DUP5 DUP5 PUSH2 0x573 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37F DUP5 DUP5 DUP5 PUSH2 0x65F JUMP JUMPDEST PUSH2 0x3EF DUP5 PUSH2 0x38B PUSH2 0x56F JUMP JUMPDEST PUSH2 0x3EA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x923 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x3C9 PUSH2 0x56F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BA JUMP JUMPDEST PUSH2 0x573 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x40B PUSH2 0x56F JUMP JUMPDEST DUP5 PUSH2 0x3EA DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x41C PUSH2 0x56F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x851 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x345 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x345 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x4D5 PUSH2 0x56F JUMP JUMPDEST DUP5 PUSH2 0x3EA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x994 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x4FF PUSH2 0x56F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x53D PUSH2 0x56F JUMP JUMPDEST DUP5 DUP5 PUSH2 0x65F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x970 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8DB PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x94B PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8B8 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6F4 DUP4 DUP4 DUP4 PUSH2 0x8B2 JUMP JUMPDEST PUSH2 0x731 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8FD PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x760 SWAP1 DUP3 PUSH2 0x851 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x849 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x80E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x7F6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x83B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x8AB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220C6CB GASLIMIT 0x5F 0xFB 0xDE DUP3 MLOAD 0x5C 0xA8 PUSH1 0xE1 MSTORE8 0x5D PUSH8 0x868C1A4EAF90FACC 0xC0 PUSH16 0xC0A48716824E6164736F6C634300060C STOP CALLER ",
							"sourceMap": "1358:9422:4:-:0;;;1987:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1987:123:4;;;;;;;;;;-1:-1:-1;1987:123:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1987:123:4;;;;;;;;;;-1:-1:-1;1987:123:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1987:123:4;;-1:-1:-1;;2061:13:4;;;;-1:-1:-1;2061:5:4;;:13;;;;;:::i;:::-;-1:-1:-1;2085:17:4;;;;:7;;:17;;;;;:::i;:::-;;1987:123;;1358:9422;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1358:9422:4;;;-1:-1:-1;1358:9422:4;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c8063395093511161007157806339509351146101d957806370a082311461020557806395d89b411461022b578063a457c2d714610233578063a9059cbb1461025f578063dd62ed3e1461028b576100a9565b806306fdde03146100ae578063095ea7b31461012b57806318160ddd1461016b57806323b872dd14610185578063313ce567146101bb575b600080fd5b6100b66102b9565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100f05781810151838201526020016100d8565b50505050905090810190601f16801561011d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101576004803603604081101561014157600080fd5b506001600160a01b03813516906020013561034f565b604080519115158252519081900360200190f35b61017361036c565b60408051918252519081900360200190f35b6101576004803603606081101561019b57600080fd5b506001600160a01b03813581169160208101359091169060400135610372565b6101c36103f9565b6040805160ff9092168252519081900360200190f35b610157600480360360408110156101ef57600080fd5b506001600160a01b0381351690602001356103fe565b6101736004803603602081101561021b57600080fd5b50356001600160a01b031661044c565b6100b6610467565b6101576004803603604081101561024957600080fd5b506001600160a01b0381351690602001356104c8565b6101576004803603604081101561027557600080fd5b506001600160a01b038135169060200135610530565b610173600480360360408110156102a157600080fd5b506001600160a01b0381358116916020013516610544565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b820191906000526020600020905b81548152906001019060200180831161032857829003601f168201915b5050505050905090565b600061036361035c61056f565b8484610573565b50600192915050565b60025490565b600061037f84848461065f565b6103ef8461038b61056f565b6103ea85604051806060016040528060288152602001610923602891396001600160a01b038a166000908152600160205260408120906103c961056f565b6001600160a01b0316815260208101919091526040016000205491906107ba565b610573565b5060019392505050565b601290565b600061036361040b61056f565b846103ea856001600061041c61056f565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610851565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b60006103636104d561056f565b846103ea8560405180606001604052806025815260200161099460259139600160006104ff61056f565b6001600160a01b03908116825260208083019390935260409182016000908120918d168152925290205491906107ba565b600061036361053d61056f565b848461065f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166105b85760405162461bcd60e51b81526004018080602001828103825260248152602001806109706024913960400191505060405180910390fd5b6001600160a01b0382166105fd5760405162461bcd60e51b81526004018080602001828103825260228152602001806108db6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166106a45760405162461bcd60e51b815260040180806020018281038252602581526020018061094b6025913960400191505060405180910390fd5b6001600160a01b0382166106e95760405162461bcd60e51b81526004018080602001828103825260238152602001806108b86023913960400191505060405180910390fd5b6106f48383836108b2565b610731816040518060600160405280602681526020016108fd602691396001600160a01b03861660009081526020819052604090205491906107ba565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546107609082610851565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156108495760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561080e5781810151838201526020016107f6565b50505050905090810190601f16801561083b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156108ab576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220c6cb455ffbde82515ca860e1535d67868c1a4eaf90faccc06fc0a48716824e6164736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x28B JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1BB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x11D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x34F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH2 0x36C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x372 JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3FE JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x44C JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x467 JUMP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4C8 JUMP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x530 JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x544 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x345 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x345 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x328 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x35C PUSH2 0x56F JUMP JUMPDEST DUP5 DUP5 PUSH2 0x573 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37F DUP5 DUP5 DUP5 PUSH2 0x65F JUMP JUMPDEST PUSH2 0x3EF DUP5 PUSH2 0x38B PUSH2 0x56F JUMP JUMPDEST PUSH2 0x3EA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x923 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x3C9 PUSH2 0x56F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BA JUMP JUMPDEST PUSH2 0x573 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x40B PUSH2 0x56F JUMP JUMPDEST DUP5 PUSH2 0x3EA DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x41C PUSH2 0x56F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x851 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x345 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x345 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x4D5 PUSH2 0x56F JUMP JUMPDEST DUP5 PUSH2 0x3EA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x994 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x4FF PUSH2 0x56F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x53D PUSH2 0x56F JUMP JUMPDEST DUP5 DUP5 PUSH2 0x65F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x970 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8DB PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x94B PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8B8 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6F4 DUP4 DUP4 DUP4 PUSH2 0x8B2 JUMP JUMPDEST PUSH2 0x731 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8FD PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x760 SWAP1 DUP3 PUSH2 0x851 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x849 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x80E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x7F6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x83B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x8AB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220C6CB GASLIMIT 0x5F 0xFB 0xDE DUP3 MLOAD 0x5C 0xA8 PUSH1 0xE1 MSTORE8 0x5D PUSH8 0x868C1A4EAF90FACC 0xC0 PUSH16 0xC0A48716824E6164736F6C634300060C STOP CALLER ",
							"sourceMap": "1358:9422:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2180:100;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4347:169;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4347:169:4;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3300:108;;;:::i;:::-;;;;;;;;;;;;;;;;4998:355;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4998:355:4;;;;;;;;;;;;;;;;;:::i;3142:93::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5762:218;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5762:218:4;;;;;;;;:::i;3471:127::-;;;;;;;;;;;;;;;;-1:-1:-1;3471:127:4;-1:-1:-1;;;;;3471:127:4;;:::i;2399:104::-;;;:::i;6483:269::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6483:269:4;;;;;;;;:::i;3811:175::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3811:175:4;;;;;;;;:::i;4049:151::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4049:151:4;;;;;;;;;;:::i;2180:100::-;2267:5;2260:12;;;;;;;;-1:-1:-1;;2260:12:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2234:13;;2260:12;;2267:5;;2260:12;;2267:5;2260:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2180:100;:::o;4347:169::-;4430:4;4447:39;4456:12;:10;:12::i;:::-;4470:7;4479:6;4447:8;:39::i;:::-;-1:-1:-1;4504:4:4;4347:169;;;;:::o;3300:108::-;3388:12;;3300:108;:::o;4998:355::-;5138:4;5155:36;5165:6;5173:9;5184:6;5155:9;:36::i;:::-;5202:121;5211:6;5219:12;:10;:12::i;:::-;5233:89;5271:6;5233:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5233:19:4;;;;;;:11;:19;;;;;;5253:12;:10;:12::i;:::-;-1:-1:-1;;;;;5233:33:4;;;;;;;;;;;;-1:-1:-1;5233:33:4;;;:89;:37;:89::i;:::-;5202:8;:121::i;:::-;-1:-1:-1;5341:4:4;4998:355;;;;;:::o;3142:93::-;3225:2;3142:93;:::o;5762:218::-;5850:4;5867:83;5876:12;:10;:12::i;:::-;5890:7;5899:50;5938:10;5899:11;:25;5911:12;:10;:12::i;:::-;-1:-1:-1;;;;;5899:25:4;;;;;;;;;;;;;;;;;-1:-1:-1;5899:25:4;;;:34;;;;;;;;;;;:38;:50::i;3471:127::-;-1:-1:-1;;;;;3572:18:4;3545:7;3572:18;;;;;;;;;;;;3471:127::o;2399:104::-;2488:7;2481:14;;;;;;;;-1:-1:-1;;2481:14:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2455:13;;2481:14;;2488:7;;2481:14;;2488:7;2481:14;;;;;;;;;;;;;;;;;;;;;;;;6483:269;6576:4;6593:129;6602:12;:10;:12::i;:::-;6616:7;6625:96;6664:15;6625:96;;;;;;;;;;;;;;;;;:11;:25;6637:12;:10;:12::i;:::-;-1:-1:-1;;;;;6625:25:4;;;;;;;;;;;;;;;;;-1:-1:-1;6625:25:4;;;:34;;;;;;;;;;;:96;:38;:96::i;3811:175::-;3897:4;3914:42;3924:12;:10;:12::i;:::-;3938:9;3949:6;3914:9;:42::i;4049:151::-;-1:-1:-1;;;;;4165:18:4;;;4138:7;4165:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4049:151::o;601:98:0:-;681:10;601:98;:::o;9669:380:4:-;-1:-1:-1;;;;;9805:19:4;;9797:68;;;;-1:-1:-1;;;9797:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9884:21:4;;9876:68;;;;-1:-1:-1;;;9876:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9957:18:4;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10009:32;;;;;;;;;;;;;;;;;9669:380;;;:::o;7242:573::-;-1:-1:-1;;;;;7382:20:4;;7374:70;;;;-1:-1:-1;;;7374:70:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7463:23:4;;7455:71;;;;-1:-1:-1;;;7455:71:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7539:47;7560:6;7568:9;7579:6;7539:20;:47::i;:::-;7619:71;7641:6;7619:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7619:17:4;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;7599:17:4;;;:9;:17;;;;;;;;;;;:91;;;;7724:20;;;;;;;:32;;7749:6;7724:24;:32::i;:::-;-1:-1:-1;;;;;7701:20:4;;;:9;:20;;;;;;;;;;;;:55;;;;7772:35;;;;;;;7701:20;;7772:35;;;;;;;;;;;;;7242:573;;;:::o;1228:192:8:-;1314:7;1350:12;1342:6;;;;1334:29;;;;-1:-1:-1;;;1334:29:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1386:5:8;;;1228:192::o;325:181::-;383:7;415:5;;;439:6;;;;431:46;;;;;-1:-1:-1;;;431:46:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;497:1;325:181;-1:-1:-1;;;325:181:8:o;10652:125:4:-;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "508400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1360",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1167",
								"decimals()": "296",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1043",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 4,
									"value": "100000000"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "tag",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 4,
									"value": "100000000"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "tag",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 4,
									"value": "100000000"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 4,
									"value": "100000000"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2061,
									"end": 2074,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2061,
									"end": 2074,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2061,
									"end": 2074,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 2061,
									"end": 2074,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2061,
									"end": 2066,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 2061,
									"end": 2066,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2061,
									"end": 2074,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2061,
									"end": 2074,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 2061,
									"end": 2074,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2061,
									"end": 2074,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2061,
									"end": 2074,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2061,
									"end": 2074,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2061,
									"end": 2074,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 2061,
									"end": 2074,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2085,
									"end": 2102,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2085,
									"end": 2102,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2085,
									"end": 2102,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 2085,
									"end": 2102,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2085,
									"end": 2092,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 2085,
									"end": 2092,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2085,
									"end": 2102,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2085,
									"end": 2102,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2085,
									"end": 2102,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2085,
									"end": 2102,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2085,
									"end": 2102,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2085,
									"end": 2102,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2085,
									"end": 2102,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 2085,
									"end": 2102,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2085,
									"end": 2102,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1987,
									"end": 2110,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 10780,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c6cb455ffbde82515ca860e1535d67868c1a4eaf90faccc06fc0a48716824e6164736f6c634300060c0033",
									".code": [
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH",
											"source": 4,
											"value": "39509351"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH",
											"source": 4,
											"value": "39509351"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH",
											"source": 4,
											"value": "95D89B41"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH",
											"source": 4,
											"value": "A457C2D7"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH",
											"source": 4,
											"value": "DD62ED3E"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH",
											"source": 4,
											"value": "6FDDE03"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH",
											"source": 4,
											"value": "95EA7B3"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH",
											"source": 4,
											"value": "18160DDD"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH",
											"source": 4,
											"value": "313CE567"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 10780,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2399,
											"end": 2503,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 2399,
											"end": 2503,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2399,
											"end": 2503,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 2399,
											"end": 2503,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2399,
											"end": 2503,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2272,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2234,
											"end": 2247,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2234,
											"end": 2247,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2272,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2272,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2280,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4430,
											"end": 4434,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4447,
											"end": 4486,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 4456,
											"end": 4468,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 4456,
											"end": 4466,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 4456,
											"end": 4468,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4456,
											"end": 4468,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 4456,
											"end": 4468,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4470,
											"end": 4477,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4479,
											"end": 4485,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4447,
											"end": 4455,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4447,
											"end": 4486,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4447,
											"end": 4486,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 4447,
											"end": 4486,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4504,
											"end": 4508,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4516,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3388,
											"end": 3400,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3388,
											"end": 3400,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3300,
											"end": 3408,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5138,
											"end": 5142,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5155,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 5165,
											"end": 5171,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5182,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5184,
											"end": 5190,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5155,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 5155,
											"end": 5191,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5155,
											"end": 5191,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 5155,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 5211,
											"end": 5217,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5219,
											"end": 5231,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 5219,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 5219,
											"end": 5231,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5219,
											"end": 5231,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 5219,
											"end": 5231,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 5271,
											"end": 5277,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "PUSH",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "PUSH data",
											"source": 4,
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "PUSH",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5244,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5253,
											"end": 5265,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 5253,
											"end": 5263,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 5253,
											"end": 5265,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5253,
											"end": 5265,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 5253,
											"end": 5265,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5233,
											"end": 5266,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5266,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5266,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5266,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5233,
											"end": 5266,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5266,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5266,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5266,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5266,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5266,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5266,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5233,
											"end": 5266,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5233,
											"end": 5266,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5266,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5266,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5270,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 5233,
											"end": 5322,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5202,
											"end": 5323,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5202,
											"end": 5323,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 5202,
											"end": 5323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5341,
											"end": 5345,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5353,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3227,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3142,
											"end": 3235,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 5762,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5850,
											"end": 5854,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5867,
											"end": 5950,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 5876,
											"end": 5888,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 5876,
											"end": 5886,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 5876,
											"end": 5888,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5876,
											"end": 5888,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 5876,
											"end": 5888,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5890,
											"end": 5897,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 5938,
											"end": 5948,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5910,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5911,
											"end": 5923,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 5911,
											"end": 5921,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 5911,
											"end": 5923,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5911,
											"end": 5923,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 5911,
											"end": 5923,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5924,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5933,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5933,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5933,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5933,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5933,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5933,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5933,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5933,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5933,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5933,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5933,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5937,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 5899,
											"end": 5949,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3572,
											"end": 3590,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3545,
											"end": 3552,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3572,
											"end": 3590,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3590,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3590,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3590,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3572,
											"end": 3590,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3590,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3590,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3590,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3572,
											"end": 3590,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3590,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3590,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3590,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3471,
											"end": 3598,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2399,
											"end": 2503,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2399,
											"end": 2503,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2488,
											"end": 2495,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2455,
											"end": 2468,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2455,
											"end": 2468,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2488,
											"end": 2495,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2488,
											"end": 2495,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2488,
											"end": 2495,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2481,
											"end": 2495,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 6483,
											"end": 6752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6576,
											"end": 6580,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6593,
											"end": 6722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 6602,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 6602,
											"end": 6612,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 6602,
											"end": 6614,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6602,
											"end": 6614,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 6602,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6616,
											"end": 6623,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 6664,
											"end": 6679,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "PUSH data",
											"source": 4,
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6636,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6637,
											"end": 6649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 6637,
											"end": 6647,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 6637,
											"end": 6649,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6637,
											"end": 6649,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 6637,
											"end": 6649,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6650,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6659,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6659,
											"name": "DUP14",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6659,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6659,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6659,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6659,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6659,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6659,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6659,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6659,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6659,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6663,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 6625,
											"end": 6721,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 3811,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3897,
											"end": 3901,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3914,
											"end": 3956,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 3924,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 3924,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 3924,
											"end": 3936,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3924,
											"end": 3936,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 3924,
											"end": 3936,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3938,
											"end": 3947,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3949,
											"end": 3955,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3914,
											"end": 3923,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3914,
											"end": 3956,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4165,
											"end": 4183,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4165,
											"end": 4183,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4165,
											"end": 4183,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4138,
											"end": 4145,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4165,
											"end": 4183,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4165,
											"end": 4183,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4165,
											"end": 4183,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4165,
											"end": 4176,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4165,
											"end": 4183,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4165,
											"end": 4183,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4165,
											"end": 4183,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4165,
											"end": 4183,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4165,
											"end": 4183,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4165,
											"end": 4183,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4165,
											"end": 4183,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4165,
											"end": 4183,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4165,
											"end": 4192,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4165,
											"end": 4192,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4165,
											"end": 4192,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 4165,
											"end": 4192,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4165,
											"end": 4192,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4165,
											"end": 4192,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4165,
											"end": 4192,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4165,
											"end": 4192,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4165,
											"end": 4192,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4165,
											"end": 4192,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4165,
											"end": 4192,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4165,
											"end": 4192,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4165,
											"end": 4192,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4049,
											"end": 4200,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 601,
											"end": 699,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 601,
											"end": 699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 681,
											"end": 691,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 601,
											"end": 699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 601,
											"end": 699,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9669,
											"end": 10049,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 9669,
											"end": 10049,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9805,
											"end": 9824,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9805,
											"end": 9824,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "PUSH data",
											"source": 4,
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 9797,
											"end": 9865,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9884,
											"end": 9905,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9884,
											"end": 9905,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "PUSH data",
											"source": 4,
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 9876,
											"end": 9944,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9957,
											"end": 9975,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9975,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9975,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9975,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9957,
											"end": 9975,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9975,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9975,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9968,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9957,
											"end": 9975,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9957,
											"end": 9975,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9975,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9975,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9975,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9957,
											"end": 9975,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9975,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9975,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9984,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9984,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9984,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9984,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9984,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9984,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9984,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9984,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9984,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9984,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9984,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9984,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9984,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9993,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9993,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9993,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10009,
											"end": 10041,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10009,
											"end": 10041,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10009,
											"end": 10041,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10009,
											"end": 10041,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10009,
											"end": 10041,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10009,
											"end": 10041,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10009,
											"end": 10041,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10009,
											"end": 10041,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10009,
											"end": 10041,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10009,
											"end": 10041,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10009,
											"end": 10041,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10009,
											"end": 10041,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10009,
											"end": 10041,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10009,
											"end": 10041,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10009,
											"end": 10041,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10009,
											"end": 10041,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10009,
											"end": 10041,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 9669,
											"end": 10049,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9669,
											"end": 10049,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9669,
											"end": 10049,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9669,
											"end": 10049,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7242,
											"end": 7815,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 7242,
											"end": 7815,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7382,
											"end": 7402,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7382,
											"end": 7402,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "PUSH data",
											"source": 4,
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 7374,
											"end": 7444,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7463,
											"end": 7486,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7463,
											"end": 7486,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "PUSH",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "PUSH data",
											"source": 4,
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "PUSH",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 7455,
											"end": 7526,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7539,
											"end": 7586,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 7560,
											"end": 7566,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7568,
											"end": 7577,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7579,
											"end": 7585,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7539,
											"end": 7559,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 7539,
											"end": 7586,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7539,
											"end": 7586,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 7539,
											"end": 7586,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7619,
											"end": 7690,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 7641,
											"end": 7647,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7619,
											"end": 7690,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7619,
											"end": 7690,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7619,
											"end": 7690,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7619,
											"end": 7690,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 7619,
											"end": 7690,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7619,
											"end": 7690,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7619,
											"end": 7690,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7619,
											"end": 7690,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7619,
											"end": 7690,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 7619,
											"end": 7690,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7619,
											"end": 7690,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7619,
											"end": 7690,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7619,
											"end": 7690,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7619,
											"end": 7690,
											"name": "PUSH data",
											"source": 4,
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 7619,
											"end": 7690,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 7619,
											"end": 7690,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7619,
											"end": 7690,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7619,
											"end": 7636,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7619,
											"end": 7636,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7619,
											"end": 7628,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7619,
											"end": 7636,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7619,
											"end": 7636,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7619,
											"end": 7636,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7619,
											"end": 7636,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7619,
											"end": 7636,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7619,
											"end": 7636,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7619,
											"end": 7636,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7619,
											"end": 7636,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7619,
											"end": 7636,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7619,
											"end": 7636,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7619,
											"end": 7636,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7619,
											"end": 7636,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7619,
											"end": 7690,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7619,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 7619,
											"end": 7690,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7619,
											"end": 7690,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 7619,
											"end": 7690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7599,
											"end": 7616,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7599,
											"end": 7616,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7599,
											"end": 7616,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7599,
											"end": 7608,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7599,
											"end": 7616,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7599,
											"end": 7616,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7599,
											"end": 7616,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7599,
											"end": 7616,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7599,
											"end": 7616,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7599,
											"end": 7616,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7599,
											"end": 7616,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7599,
											"end": 7616,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7599,
											"end": 7616,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7599,
											"end": 7616,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7599,
											"end": 7616,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7599,
											"end": 7690,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7599,
											"end": 7690,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7599,
											"end": 7690,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7599,
											"end": 7690,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7724,
											"end": 7744,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7724,
											"end": 7744,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7724,
											"end": 7744,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7724,
											"end": 7744,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7724,
											"end": 7744,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7724,
											"end": 7744,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7724,
											"end": 7744,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7724,
											"end": 7756,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 7724,
											"end": 7756,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7749,
											"end": 7755,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7724,
											"end": 7748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 7724,
											"end": 7756,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7724,
											"end": 7756,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 7724,
											"end": 7756,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7701,
											"end": 7721,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7701,
											"end": 7721,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7701,
											"end": 7721,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7701,
											"end": 7710,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7701,
											"end": 7721,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7701,
											"end": 7721,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7701,
											"end": 7721,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7701,
											"end": 7721,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7701,
											"end": 7721,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7701,
											"end": 7721,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7701,
											"end": 7721,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7701,
											"end": 7721,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7701,
											"end": 7721,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7701,
											"end": 7721,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7701,
											"end": 7721,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7701,
											"end": 7721,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7701,
											"end": 7756,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 7701,
											"end": 7756,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7701,
											"end": 7756,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 7701,
											"end": 7756,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7772,
											"end": 7807,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7772,
											"end": 7807,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7772,
											"end": 7807,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7772,
											"end": 7807,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7772,
											"end": 7807,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7772,
											"end": 7807,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7772,
											"end": 7807,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7701,
											"end": 7721,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7701,
											"end": 7721,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7772,
											"end": 7807,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7772,
											"end": 7807,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 7772,
											"end": 7807,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7772,
											"end": 7807,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7772,
											"end": 7807,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7772,
											"end": 7807,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7772,
											"end": 7807,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7772,
											"end": 7807,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7772,
											"end": 7807,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7772,
											"end": 7807,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7772,
											"end": 7807,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7772,
											"end": 7807,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7772,
											"end": 7807,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 7242,
											"end": 7815,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7242,
											"end": 7815,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7242,
											"end": 7815,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7242,
											"end": 7815,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1228,
											"end": 1420,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 1228,
											"end": 1420,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1314,
											"end": 1321,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1362,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1342,
											"end": 1348,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1342,
											"end": 1348,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1342,
											"end": 1348,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1342,
											"end": 1348,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1386,
											"end": 1391,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1386,
											"end": 1391,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1386,
											"end": 1391,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1228,
											"end": 1420,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 325,
											"end": 506,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 325,
											"end": 506,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 383,
											"end": 390,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 420,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 415,
											"end": 420,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 415,
											"end": 420,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 439,
											"end": 445,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 439,
											"end": 445,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 439,
											"end": 445,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 439,
											"end": 445,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 431,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 431,
											"end": 477,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 431,
											"end": 477,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 431,
											"end": 477,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 431,
											"end": 477,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 431,
											"end": 477,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 431,
											"end": 477,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 431,
											"end": 477,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 431,
											"end": 477,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 431,
											"end": 477,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 431,
											"end": 477,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 431,
											"end": 477,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 431,
											"end": 477,
											"name": "PUSH",
											"source": 8,
											"value": "1B"
										},
										{
											"begin": 431,
											"end": 477,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 431,
											"end": 477,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 431,
											"end": 477,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 431,
											"end": 477,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 431,
											"end": 477,
											"name": "PUSH",
											"source": 8,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 431,
											"end": 477,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 431,
											"end": 477,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 431,
											"end": 477,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 431,
											"end": 477,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 431,
											"end": 477,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 431,
											"end": 477,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 431,
											"end": 477,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 431,
											"end": 477,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 431,
											"end": 477,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 431,
											"end": 477,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 431,
											"end": 477,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 431,
											"end": 477,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 431,
											"end": 477,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 431,
											"end": 477,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 431,
											"end": 477,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 431,
											"end": 477,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 497,
											"end": 498,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 325,
											"end": 506,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 325,
											"end": 506,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10652,
											"end": 10777,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 10652,
											"end": 10777,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10652,
											"end": 10777,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10652,
											"end": 10777,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10652,
											"end": 10777,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10652,
											"end": 10777,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									],
									".data": {
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0x2bfee1b62dd98b0558681cb9428ef6ac972433cb68faaacc33a70a8bd221fadc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1754beb271b4f01fb27a92d7aadc97b588a7d4c3dc4baac35b9a70408f899ccb\",\"dweb:/ipfs/QmRf3v2AFo8utJGcTJmwPDqvWjLkXajZYo3yMTCgpWYKuz\"]},\"ERC20.sol\":{\"keccak256\":\"0xc4da424c399e963ac694ed3c07c9c000d37ed7cdeb234dd27714dfead62bf599\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b3c9fcefb68dddd7bf6c6f2f30a44adb49d35df61262497267bebeb624dcf6d\",\"dweb:/ipfs/QmfAJrHchjPHwcjSbzWyzJuvsRWUDWdrUnJACFLahZc4D8\"]},\"IERC20.sol\":{\"keccak256\":\"0x5fb7e501e7542c237101e03cc9f3e56d8812cfe95872017300c13c5c23352c82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://207e571110a865c35c91fce35ee0eba434b5e2309510c7a36dc693fa0d44c2d6\",\"dweb:/ipfs/QmT9pmkME8q7D7eSS37ZKbaaWUnQTYpt6dATjZgirmX2BV\"]},\"IERC20Metadata.sol\":{\"keccak256\":\"0x46d83945c75429345dbdcae90f62764a825f913086354d9e9198fdeb71dbbb9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9523f861e3488d33d8ca7bf3d83f8c9d1234809c413b3f9d3394e6f6aeec303e\",\"dweb:/ipfs/QmbgGLk1wojrsgGu3XoX1PHN5wdh3NikHKJim394NTR262\"]},\"SafeMath.sol\":{\"keccak256\":\"0x6d26cf7be1f1bc0678f06849575acbe0314513135adb03799a9554748f04ecfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8249fec945bad7f5ab24877ce675d139b978f7b46fb4e631b584e0e4185a0368\",\"dweb:/ipfs/QmTc8hj9hcY6N6amV3bx5QRTqPnhaLfdYwXSgHMH3Kyioy\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"keccak256\":\"0x5fb7e501e7542c237101e03cc9f3e56d8812cfe95872017300c13c5c23352c82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://207e571110a865c35c91fce35ee0eba434b5e2309510c7a36dc693fa0d44c2d6\",\"dweb:/ipfs/QmT9pmkME8q7D7eSS37ZKbaaWUnQTYpt6dATjZgirmX2BV\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"keccak256\":\"0x5fb7e501e7542c237101e03cc9f3e56d8812cfe95872017300c13c5c23352c82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://207e571110a865c35c91fce35ee0eba434b5e2309510c7a36dc693fa0d44c2d6\",\"dweb:/ipfs/QmT9pmkME8q7D7eSS37ZKbaaWUnQTYpt6dATjZgirmX2BV\"]},\"IERC20Metadata.sol\":{\"keccak256\":\"0x46d83945c75429345dbdcae90f62764a825f913086354d9e9198fdeb71dbbb9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9523f861e3488d33d8ca7bf3d83f8c9d1234809c413b3f9d3394e6f6aeec303e\",\"dweb:/ipfs/QmbgGLk1wojrsgGu3XoX1PHN5wdh3NikHKJim394NTR262\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Ownable.sol\":97:1788  contract Ownable is Context {\r... */\n  mstore(0x40, 0x80)\n    /* \"Ownable.sol\":354:515  constructor () public {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Ownable.sol\":387:404  address msgSender */\n  0x00\n    /* \"Ownable.sol\":407:419  _msgSender() */\n  tag_4\n    /* \"Ownable.sol\":407:417  _msgSender */\n  tag_5\n    /* \"Ownable.sol\":407:419  _msgSender() */\n  jump\t// in\ntag_4:\n    /* \"Ownable.sol\":430:436  _owner */\n  0x00\n    /* \"Ownable.sol\":430:448  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"Ownable.sol\":464:507  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"Ownable.sol\":430:448  _owner = msgSender */\n  swap3\n  swap4\n  pop\n  swap2\n    /* \"Ownable.sol\":464:507  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"Ownable.sol\":430:436  _owner */\n  dup3\n  swap1\n    /* \"Ownable.sol\":464:507  OwnershipTransferred(address(0), msgSender) */\n  log3\n    /* \"Ownable.sol\":354:515  constructor () public {\r... */\n  pop\n    /* \"Ownable.sol\":97:1788  contract Ownable is Context {\r... */\n  jump(tag_6)\n    /* \"Context.sol\":601:699  function _msgSender() internal view virtual returns (address) {\r... */\ntag_5:\n    /* \"Context.sol\":681:691  msg.sender */\n  caller\n    /* \"Context.sol\":601:699  function _msgSender() internal view virtual returns (address) {\r... */\n  swap1\n  jump\t// out\n    /* \"Ownable.sol\":97:1788  contract Ownable is Context {\r... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Ownable.sol\":97:1788  contract Ownable is Context {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Ownable.sol\":1238:1386  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"Ownable.sol\":596:675  function owner() public view returns (address) {\r... */\n    tag_4:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"Ownable.sol\":1541:1785  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_5:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_12\n      jump\t// in\n        /* \"Ownable.sol\":1238:1386  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_7:\n        /* \"Ownable.sol\":818:830  _msgSender() */\n      tag_14\n        /* \"Ownable.sol\":818:828  _msgSender */\n      tag_15\n        /* \"Ownable.sol\":818:830  _msgSender() */\n      jump\t// in\n    tag_14:\n        /* \"Ownable.sol\":808:814  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"Ownable.sol\":808:830  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"Ownable.sol\":800:867  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_16\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_16:\n        /* \"Ownable.sol\":1345:1346  0 */\n      0x00\n        /* \"Ownable.sol\":1329:1335  _owner */\n      dup1\n      sload\n        /* \"Ownable.sol\":1308:1348  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1329:1335  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"Ownable.sol\":1308:1348  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"Ownable.sol\":1345:1346  0 */\n      dup4\n      swap1\n        /* \"Ownable.sol\":1308:1348  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"Ownable.sol\":1376:1377  0 */\n      0x00\n        /* \"Ownable.sol\":1359:1378  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"Ownable.sol\":1238:1386  function renounceOwnership() public virtual onlyOwner {\r... */\n      jump\t// out\n        /* \"Ownable.sol\":596:675  function owner() public view returns (address) {\r... */\n    tag_9:\n        /* \"Ownable.sol\":634:641  address */\n      0x00\n        /* \"Ownable.sol\":661:667  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Ownable.sol\":596:675  function owner() public view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"Ownable.sol\":1541:1785  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_12:\n        /* \"Ownable.sol\":818:830  _msgSender() */\n      tag_20\n        /* \"Ownable.sol\":818:828  _msgSender */\n      tag_15\n        /* \"Ownable.sol\":818:830  _msgSender() */\n      jump\t// in\n    tag_20:\n        /* \"Ownable.sol\":808:814  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"Ownable.sol\":808:830  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"Ownable.sol\":800:867  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_21\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_21:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1630:1652  newOwner != address(0) */\n      dup2\n      and\n        /* \"Ownable.sol\":1622:1695  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_23\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_23:\n        /* \"Ownable.sol\":1732:1738  _owner */\n      0x00\n      dup1\n      sload\n        /* \"Ownable.sol\":1711:1749  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap4\n        /* \"Ownable.sol\":1732:1738  _owner */\n      swap3\n      and\n      swap2\n        /* \"Ownable.sol\":1711:1749  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"Ownable.sol\":1760:1766  _owner */\n      0x00\n        /* \"Ownable.sol\":1760:1777  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"Ownable.sol\":1541:1785  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n      jump\t// out\n        /* \"Context.sol\":601:699  function _msgSender() internal view virtual returns (address) {\r... */\n    tag_15:\n        /* \"Context.sol\":681:691  msg.sender */\n      caller\n        /* \"Context.sol\":601:699  function _msgSender() internal view virtual returns (address) {\r... */\n      swap1\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n\n    auxdata: 0xa2646970667358221220464a0205bef8e25f5632196adfe72445c15838bcbd8499d4f351e93b6824251664736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600061001b61006a565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061006e565b3390565b6102c78061007d6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b14610074575b600080fd5b61004e61009a565b005b61005861014e565b604080516001600160a01b039092168252519081900360200190f35b61004e6004803603602081101561008a57600080fd5b50356001600160a01b031661015d565b6100a2610267565b6000546001600160a01b03908116911614610104576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b610165610267565b6000546001600160a01b039081169116146101c7576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b03811661020c5760405162461bcd60e51b815260040180806020018281038252602681526020018061026c6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220464a0205bef8e25f5632196adfe72445c15838bcbd8499d4f351e93b6824251664736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH2 0x1B PUSH2 0x6A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH2 0x6E JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH2 0x2C7 DUP1 PUSH2 0x7D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x74 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x9A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x14E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x15D JUMP JUMPDEST PUSH2 0xA2 PUSH2 0x267 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x104 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x165 PUSH2 0x267 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1C7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x20C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x26C PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373A2646970667358221220464A0205BEF8 0xE2 0x5F JUMP ORIGIN NOT PUSH11 0xDFE72445C15838BCBD8499 0xD4 RETURN MLOAD 0xE9 EXTCODESIZE PUSH9 0x24251664736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "97:1691:7:-:0;;;354:161;;;;;;;;;-1:-1:-1;387:17:7;407:12;:10;:12::i;:::-;430:6;:18;;-1:-1:-1;;;;;;430:18:7;-1:-1:-1;;;;;430:18:7;;;;;;;464:43;;430:18;;-1:-1:-1;430:18:7;464:43;;430:6;;464:43;354:161;97:1691;;601:98:0;681:10;601:98;:::o;97:1691:7:-;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b14610074575b600080fd5b61004e61009a565b005b61005861014e565b604080516001600160a01b039092168252519081900360200190f35b61004e6004803603602081101561008a57600080fd5b50356001600160a01b031661015d565b6100a2610267565b6000546001600160a01b03908116911614610104576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b610165610267565b6000546001600160a01b039081169116146101c7576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b03811661020c5760405162461bcd60e51b815260040180806020018281038252602681526020018061026c6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220464a0205bef8e25f5632196adfe72445c15838bcbd8499d4f351e93b6824251664736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x74 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x9A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x14E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x15D JUMP JUMPDEST PUSH2 0xA2 PUSH2 0x267 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x104 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x165 PUSH2 0x267 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1C7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x20C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x26C PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373A2646970667358221220464A0205BEF8 0xE2 0x5F JUMP ORIGIN NOT PUSH11 0xDFE72445C15838BCBD8499 0xD4 RETURN MLOAD 0xE9 EXTCODESIZE PUSH9 0x24251664736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "97:1691:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1238:148;;;:::i;:::-;;596:79;;;:::i;:::-;;;;-1:-1:-1;;;;;596:79:7;;;;;;;;;;;;;;1541:244;;;;;;;;;;;;;;;;-1:-1:-1;1541:244:7;-1:-1:-1;;;;;1541:244:7;;:::i;1238:148::-;818:12;:10;:12::i;:::-;808:6;;-1:-1:-1;;;;;808:6:7;;;:22;;;800:67;;;;;-1:-1:-1;;;800:67:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1345:1:::1;1329:6:::0;;1308:40:::1;::::0;-1:-1:-1;;;;;1329:6:7;;::::1;::::0;1308:40:::1;::::0;1345:1;;1308:40:::1;1376:1;1359:19:::0;;-1:-1:-1;;;;;;1359:19:7::1;::::0;;1238:148::o;596:79::-;634:7;661:6;-1:-1:-1;;;;;661:6:7;596:79;:::o;1541:244::-;818:12;:10;:12::i;:::-;808:6;;-1:-1:-1;;;;;808:6:7;;;:22;;;800:67;;;;;-1:-1:-1;;;800:67:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1630:22:7;::::1;1622:73;;;;-1:-1:-1::0;;;1622:73:7::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1732:6;::::0;;1711:38:::1;::::0;-1:-1:-1;;;;;1711:38:7;;::::1;::::0;1732:6;::::1;::::0;1711:38:::1;::::0;::::1;1760:6;:17:::0;;-1:-1:-1;;;;;;1760:17:7::1;-1:-1:-1::0;;;;;1760:17:7;;;::::1;::::0;;;::::1;::::0;;1541:244::o;601:98:0:-;681:10;601:98;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "142200",
								"executionCost": "22625",
								"totalCost": "164825"
							},
							"external": {
								"owner()": "1037",
								"renounceOwnership()": "24182",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 97,
									"end": 1788,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 97,
									"end": 1788,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 97,
									"end": 1788,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 354,
									"end": 515,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 354,
									"end": 515,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 354,
									"end": 515,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 354,
									"end": 515,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 354,
									"end": 515,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 354,
									"end": 515,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 354,
									"end": 515,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 354,
									"end": 515,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 354,
									"end": 515,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 354,
									"end": 515,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 387,
									"end": 404,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 407,
									"end": 419,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 407,
									"end": 417,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 407,
									"end": 419,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 407,
									"end": 419,
									"name": "tag",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 407,
									"end": 419,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 430,
									"end": 436,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 430,
									"end": 448,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 430,
									"end": 448,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 430,
									"end": 448,
									"name": "AND",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 430,
									"end": 448,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 430,
									"end": 448,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 430,
									"end": 448,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 430,
									"end": 448,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 430,
									"end": 448,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 430,
									"end": 448,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 430,
									"end": 448,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 464,
									"end": 507,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 464,
									"end": 507,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 430,
									"end": 448,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 430,
									"end": 448,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 430,
									"end": 448,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 464,
									"end": 507,
									"name": "PUSH",
									"source": 7,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 464,
									"end": 507,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 430,
									"end": 436,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 430,
									"end": 436,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 464,
									"end": 507,
									"name": "LOG3",
									"source": 7
								},
								{
									"begin": 354,
									"end": 515,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 97,
									"end": 1788,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 97,
									"end": 1788,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 601,
									"end": 699,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 601,
									"end": 699,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 681,
									"end": 691,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 601,
									"end": 699,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 601,
									"end": 699,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 97,
									"end": 1788,
									"name": "tag",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 97,
									"end": 1788,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 97,
									"end": 1788,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 97,
									"end": 1788,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 97,
									"end": 1788,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 97,
									"end": 1788,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 97,
									"end": 1788,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 97,
									"end": 1788,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 97,
									"end": 1788,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220464a0205bef8e25f5632196adfe72445c15838bcbd8499d4f351e93b6824251664736f6c634300060c0033",
									".code": [
										{
											"begin": 97,
											"end": 1788,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 97,
											"end": 1788,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 97,
											"end": 1788,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 97,
											"end": 1788,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 97,
											"end": 1788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 97,
											"end": 1788,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 97,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 97,
											"end": 1788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 97,
											"end": 1788,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 97,
											"end": 1788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 97,
											"end": 1788,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 97,
											"end": 1788,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 97,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 97,
											"end": 1788,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 97,
											"end": 1788,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 97,
											"end": 1788,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 97,
											"end": 1788,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 97,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 97,
											"end": 1788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 97,
											"end": 1788,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 97,
											"end": 1788,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 97,
											"end": 1788,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 97,
											"end": 1788,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 97,
											"end": 1788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 97,
											"end": 1788,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 97,
											"end": 1788,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 97,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 97,
											"end": 1788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 97,
											"end": 1788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 97,
											"end": 1788,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 97,
											"end": 1788,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 97,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 97,
											"end": 1788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 97,
											"end": 1788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 97,
											"end": 1788,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 97,
											"end": 1788,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 97,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 97,
											"end": 1788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 97,
											"end": 1788,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 97,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 97,
											"end": 1788,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 97,
											"end": 1788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 97,
											"end": 1788,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1238,
											"end": 1386,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1238,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1238,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1238,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1238,
											"end": 1386,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1238,
											"end": 1386,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1238,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1238,
											"end": 1386,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 596,
											"end": 675,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 596,
											"end": 675,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 596,
											"end": 675,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 596,
											"end": 675,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 596,
											"end": 675,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 596,
											"end": 675,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 596,
											"end": 675,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 596,
											"end": 675,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 596,
											"end": 675,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 596,
											"end": 675,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 596,
											"end": 675,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 596,
											"end": 675,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 596,
											"end": 675,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 596,
											"end": 675,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 596,
											"end": 675,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 596,
											"end": 675,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 596,
											"end": 675,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 596,
											"end": 675,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 596,
											"end": 675,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 596,
											"end": 675,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 596,
											"end": 675,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 596,
											"end": 675,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 596,
											"end": 675,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 596,
											"end": 675,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1785,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1541,
											"end": 1785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1541,
											"end": 1785,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1541,
											"end": 1785,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1785,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1785,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1785,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1541,
											"end": 1785,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1785,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1785,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 1541,
											"end": 1785,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1785,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1541,
											"end": 1785,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1785,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1785,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 1541,
											"end": 1785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1541,
											"end": 1785,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1541,
											"end": 1785,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 1541,
											"end": 1785,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1238,
											"end": 1386,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1238,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 818,
											"end": 830,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 818,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 818,
											"end": 830,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 818,
											"end": 830,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 818,
											"end": 830,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 808,
											"end": 814,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 808,
											"end": 814,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 808,
											"end": 814,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 808,
											"end": 814,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 808,
											"end": 814,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 808,
											"end": 830,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 808,
											"end": 830,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 808,
											"end": 830,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 800,
											"end": 867,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 800,
											"end": 867,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 800,
											"end": 867,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 800,
											"end": 867,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 800,
											"end": 867,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 800,
											"end": 867,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 800,
											"end": 867,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 800,
											"end": 867,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 800,
											"end": 867,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 800,
											"end": 867,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1345,
											"end": 1346,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1329,
											"end": 1335,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1335,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1308,
											"end": 1348,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1308,
											"end": 1348,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1329,
											"end": 1335,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1335,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1335,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1335,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1308,
											"end": 1348,
											"name": "PUSH",
											"source": 7,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1308,
											"end": 1348,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1345,
											"end": 1346,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1345,
											"end": 1346,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1308,
											"end": 1348,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 1376,
											"end": 1377,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1359,
											"end": 1378,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1359,
											"end": 1378,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1359,
											"end": 1378,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1359,
											"end": 1378,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1359,
											"end": 1378,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1238,
											"end": 1386,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 596,
											"end": 675,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 596,
											"end": 675,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 634,
											"end": 641,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 661,
											"end": 667,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 661,
											"end": 667,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 596,
											"end": 675,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 596,
											"end": 675,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1541,
											"end": 1785,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 1541,
											"end": 1785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 818,
											"end": 830,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 818,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 818,
											"end": 830,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 818,
											"end": 830,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 818,
											"end": 830,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 808,
											"end": 814,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 808,
											"end": 814,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 808,
											"end": 814,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 808,
											"end": 814,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 808,
											"end": 814,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 808,
											"end": 830,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 808,
											"end": 830,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 808,
											"end": 830,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 800,
											"end": 867,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 800,
											"end": 867,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 800,
											"end": 867,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 800,
											"end": 867,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 800,
											"end": 867,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 800,
											"end": 867,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 800,
											"end": 867,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 800,
											"end": 867,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 800,
											"end": 867,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 800,
											"end": 867,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 800,
											"end": 867,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1630,
											"end": 1652,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1652,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "PUSH data",
											"source": 7,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "CODECOPY",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 1622,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1738,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1738,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1738,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1711,
											"end": 1749,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1711,
											"end": 1749,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1711,
											"end": 1749,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1711,
											"end": 1749,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1711,
											"end": 1749,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1711,
											"end": 1749,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1738,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1738,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1738,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1711,
											"end": 1749,
											"name": "PUSH",
											"source": 7,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1711,
											"end": 1749,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1711,
											"end": 1749,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1766,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1777,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1777,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1760,
											"end": 1777,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1760,
											"end": 1777,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1777,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1777,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1777,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1777,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1777,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1777,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1777,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1777,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1777,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1785,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 601,
											"end": 699,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 601,
											"end": 699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 681,
											"end": 691,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 601,
											"end": 699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 601,
											"end": 699,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0x2bfee1b62dd98b0558681cb9428ef6ac972433cb68faaacc33a70a8bd221fadc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1754beb271b4f01fb27a92d7aadc97b588a7d4c3dc4baac35b9a70408f899ccb\",\"dweb:/ipfs/QmRf3v2AFo8utJGcTJmwPDqvWjLkXajZYo3yMTCgpWYKuz\"]},\"Ownable.sol\":{\"keccak256\":\"0xda6c392cee9da1fa331b00cb4d127bf27ec00f2bd64e0887ce2fff43ca9d3747\",\"license\":\"MIT License\",\"urls\":[\"bzz-raw://2ec582529796922b79b6fb5235637ac8678e734ea7d245bef96dcafe5104ba96\",\"dweb:/ipfs/QmWspqAWg2gbVQfqyYUoZCDhtSABuocHQ81TH1KKUW92JT\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SafeMath.sol\":62:4781  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"SafeMath.sol\":62:4781  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220512554fef4200f604e596c430630de0ee05d1498dd996d0bffb588b70d3c3da164736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220512554fef4200f604e596c430630de0ee05d1498dd996d0bffb588b70d3c3da164736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0x25 SLOAD INVALID DELEGATECALL KECCAK256 0xF PUSH1 0x4E MSIZE PUSH13 0x430630DE0EE05D1498DD996D0B SELFDESTRUCT 0xB5 DUP9 0xB7 0xD EXTCODECOPY RETURNDATASIZE LOG1 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "62:4719:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220512554fef4200f604e596c430630de0ee05d1498dd996d0bffb588b70d3c3da164736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0x25 SLOAD INVALID DELEGATECALL KECCAK256 0xF PUSH1 0x4E MSIZE PUSH13 0x430630DE0EE05D1498DD996D0B SELFDESTRUCT 0xB5 DUP9 0xB7 0xD EXTCODECOPY RETURNDATASIZE LOG1 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "62:4719:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 62,
									"end": 4781,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 4781,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 4781,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 62,
									"end": 4781,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 62,
									"end": 4781,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 62,
									"end": 4781,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 62,
									"end": 4781,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 62,
									"end": 4781,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 62,
									"end": 4781,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 62,
									"end": 4781,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 4781,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 62,
									"end": 4781,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 62,
									"end": 4781,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 62,
									"end": 4781,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 62,
									"end": 4781,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 62,
									"end": 4781,
									"name": "INVALID",
									"source": 8
								},
								{
									"begin": 62,
									"end": 4781,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 62,
									"end": 4781,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 62,
									"end": 4781,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 62,
									"end": 4781,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 4781,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 62,
									"end": 4781,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 62,
									"end": 4781,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 62,
									"end": 4781,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 62,
									"end": 4781,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 62,
									"end": 4781,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 62,
									"end": 4781,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220512554fef4200f604e596c430630de0ee05d1498dd996d0bffb588b70d3c3da164736f6c634300060c0033",
									".code": [
										{
											"begin": 62,
											"end": 4781,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 62,
											"end": 4781,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 62,
											"end": 4781,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 62,
											"end": 4781,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 62,
											"end": 4781,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 62,
											"end": 4781,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 62,
											"end": 4781,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 62,
											"end": 4781,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 62,
											"end": 4781,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"SafeMath.sol\":{\"keccak256\":\"0x6d26cf7be1f1bc0678f06849575acbe0314513135adb03799a9554748f04ecfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8249fec945bad7f5ab24877ce675d139b978f7b46fb4e631b584e0e4185a0368\",\"dweb:/ipfs/QmTc8hj9hcY6N6amV3bx5QRTqPnhaLfdYwXSgHMH3Kyioy\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"SafeMathInt.sol": {
				"SafeMathInt": {
					"abi": [],
					"devdoc": {
						"details": "Math operations for int256 with overflow safety checks.",
						"kind": "dev",
						"methods": {},
						"title": "SafeMathInt",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SafeMathInt.sol\":1298:3085  library SafeMathInt {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"SafeMathInt.sol\":1298:3085  library SafeMathInt {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209ae37c313183993126917e043409f8837df9e2ff97dc07e00cdc1cd4005dc6d564736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209ae37c313183993126917e043409f8837df9e2ff97dc07e00cdc1cd4005dc6d564736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 0xE3 PUSH29 0x313183993126917E043409F8837DF9E2FF97DC07E00CDC1CD4005DC6D5 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "1298:1787:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209ae37c313183993126917e043409f8837df9e2ff97dc07e00cdc1cd4005dc6d564736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 0xE3 PUSH29 0x313183993126917E043409F8837DF9E2FF97DC07E00CDC1CD4005DC6D5 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "1298:1787:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"abs(int256)": "infinite",
								"add(int256,int256)": "infinite",
								"div(int256,int256)": "infinite",
								"mul(int256,int256)": "infinite",
								"sub(int256,int256)": "infinite",
								"toUint256Safe(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1298,
									"end": 3085,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1298,
									"end": 3085,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1298,
									"end": 3085,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 1298,
									"end": 3085,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1298,
									"end": 3085,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1298,
									"end": 3085,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1298,
									"end": 3085,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 1298,
									"end": 3085,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1298,
									"end": 3085,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1298,
									"end": 3085,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1298,
									"end": 3085,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 1298,
									"end": 3085,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 1298,
									"end": 3085,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 1298,
									"end": 3085,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1298,
									"end": 3085,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1298,
									"end": 3085,
									"name": "INVALID",
									"source": 9
								},
								{
									"begin": 1298,
									"end": 3085,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1298,
									"end": 3085,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1298,
									"end": 3085,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 1298,
									"end": 3085,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1298,
									"end": 3085,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1298,
									"end": 3085,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 1298,
									"end": 3085,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1298,
									"end": 3085,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 1298,
									"end": 3085,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1298,
									"end": 3085,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1298,
									"end": 3085,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209ae37c313183993126917e043409f8837df9e2ff97dc07e00cdc1cd4005dc6d564736f6c634300060c0033",
									".code": [
										{
											"begin": 1298,
											"end": 3085,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 1298,
											"end": 3085,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 1298,
											"end": 3085,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1298,
											"end": 3085,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1298,
											"end": 3085,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1298,
											"end": 3085,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1298,
											"end": 3085,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1298,
											"end": 3085,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1298,
											"end": 3085,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Math operations for int256 with overflow safety checks.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeMathInt\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SafeMathInt.sol\":\"SafeMathInt\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"SafeMathInt.sol\":{\"keccak256\":\"0xd741644275fdbc489ab1f457868cb8fb94fb4c2d9e539cfcf2bf79b76214f7ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f9b06181930db735589b93afd67df2014a645f889b0ab250373fc723f26d0ea\",\"dweb:/ipfs/QmQJLacM6P5u3P7fRgpYDmFH9bHjq7m6hFKQFtzCi6LjUZ\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"SafeMathUint.sol": {
				"SafeMathUint": {
					"abi": [],
					"devdoc": {
						"details": "Math operations with safety checks that revert on error",
						"kind": "dev",
						"methods": {},
						"title": "SafeMathUint",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SafeMathUint.sol\":161:324  library SafeMathUint {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"SafeMathUint.sol\":161:324  library SafeMathUint {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204abf9ceca1baba6ba7f1016a49354306d5324059026ce722ff2961c785c8d5e264736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204abf9ceca1baba6ba7f1016a49354306d5324059026ce722ff2961c785c8d5e264736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A 0xBF SWAP13 0xEC LOG1 0xBA 0xBA PUSH12 0xA7F1016A49354306D5324059 MUL PUSH13 0xE722FF2961C785C8D5E264736F PUSH13 0x634300060C0033000000000000 ",
							"sourceMap": "161:163:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204abf9ceca1baba6ba7f1016a49354306d5324059026ce722ff2961c785c8d5e264736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A 0xBF SWAP13 0xEC LOG1 0xBA 0xBA PUSH12 0xA7F1016A49354306D5324059 MUL PUSH13 0xE722FF2961C785C8D5E264736F PUSH13 0x634300060C0033000000000000 ",
							"sourceMap": "161:163:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toInt256Safe(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 161,
									"end": 324,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 161,
									"end": 324,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 161,
									"end": 324,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 161,
									"end": 324,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 161,
									"end": 324,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 161,
									"end": 324,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 161,
									"end": 324,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 161,
									"end": 324,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 161,
									"end": 324,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 161,
									"end": 324,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 324,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 161,
									"end": 324,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 161,
									"end": 324,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 161,
									"end": 324,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 161,
									"end": 324,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 161,
									"end": 324,
									"name": "INVALID",
									"source": 10
								},
								{
									"begin": 161,
									"end": 324,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 161,
									"end": 324,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 161,
									"end": 324,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 161,
									"end": 324,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 324,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 161,
									"end": 324,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 161,
									"end": 324,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 161,
									"end": 324,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 161,
									"end": 324,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 161,
									"end": 324,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 161,
									"end": 324,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204abf9ceca1baba6ba7f1016a49354306d5324059026ce722ff2961c785c8d5e264736f6c634300060c0033",
									".code": [
										{
											"begin": 161,
											"end": 324,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 161,
											"end": 324,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 161,
											"end": 324,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 161,
											"end": 324,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 161,
											"end": 324,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 161,
											"end": 324,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 161,
											"end": 324,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 161,
											"end": 324,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 161,
											"end": 324,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Math operations with safety checks that revert on error\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeMathUint\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SafeMathUint.sol\":\"SafeMathUint\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"SafeMathUint.sol\":{\"keccak256\":\"0x2e6b561e85049defbc1cdc7eac94786f641743451eb3c37568581cf5905d21ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c243a2b058dc749818d9960d1eac27df228f17ce217ec7d8ef004f8605c3cc11\",\"dweb:/ipfs/QmcJddtWBAX789Z91UKBBjKz1aXbj7ZcLRddAmrvUXn79R\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Context.sol": {
				"ast": {
					"absolutePath": "Context.sol",
					"exportedSymbols": {
						"Context": [
							22
						]
					},
					"id": 23,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 22,
							"linearizedBaseContracts": [
								22
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 9,
										"nodeType": "Block",
										"src": "663:36:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 6,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "681:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 7,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "681:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 5,
												"id": 8,
												"nodeType": "Return",
												"src": "674:17:0"
											}
										]
									},
									"documentation": null,
									"id": 10,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "620:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 10,
												"src": "654:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "653:9:0"
									},
									"scope": 22,
									"src": "601:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 20,
										"nodeType": "Block",
										"src": "774:168:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 15,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "785:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$22",
														"typeString": "contract Context"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "785:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 17,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "926:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "926:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 14,
												"id": 19,
												"nodeType": "Return",
												"src": "919:15:0"
											}
										]
									},
									"documentation": null,
									"id": 21,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "724:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 21,
												"src": "758:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 12,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "758:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "757:16:0"
									},
									"scope": 22,
									"src": "707:235:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 23,
							"src": "568:377:0"
						}
					],
					"src": "35:912:0"
				},
				"id": 0
			},
			"DividendPayingToken.sol": {
				"ast": {
					"absolutePath": "DividendPayingToken.sol",
					"exportedSymbols": {
						"DividendPayingToken": [
							448
						]
					},
					"id": 449,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 24,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:1"
						},
						{
							"absolutePath": "ERC20.sol",
							"file": "./ERC20.sol",
							"id": 25,
							"nodeType": "ImportDirective",
							"scope": 449,
							"sourceUnit": 999,
							"src": "62:21:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 26,
							"nodeType": "ImportDirective",
							"scope": 449,
							"sourceUnit": 1405,
							"src": "85:24:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "SafeMathUint.sol",
							"file": "./SafeMathUint.sol",
							"id": 27,
							"nodeType": "ImportDirective",
							"scope": 449,
							"sourceUnit": 1649,
							"src": "111:28:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "SafeMathInt.sol",
							"file": "./SafeMathInt.sol",
							"id": 28,
							"nodeType": "ImportDirective",
							"scope": 449,
							"sourceUnit": 1622,
							"src": "141:27:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "DividendPayingTokenInterface.sol",
							"file": "./DividendPayingTokenInterface.sol",
							"id": 29,
							"nodeType": "ImportDirective",
							"scope": 449,
							"sourceUnit": 479,
							"src": "170:44:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "DividendPayingTokenOptionalInterface.sol",
							"file": "./DividendPayingTokenOptionalInterface.sol",
							"id": 30,
							"nodeType": "ImportDirective",
							"scope": 449,
							"sourceUnit": 507,
							"src": "216:52:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Ownable.sol",
							"file": "./Ownable.sol",
							"id": 31,
							"nodeType": "ImportDirective",
							"scope": 449,
							"sourceUnit": 1210,
							"src": "270:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 33,
										"name": "ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 998,
										"src": "708:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$998",
											"typeString": "contract ERC20"
										}
									},
									"id": 34,
									"nodeType": "InheritanceSpecifier",
									"src": "708:5:1"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 35,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1209,
										"src": "715:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$1209",
											"typeString": "contract Ownable"
										}
									},
									"id": 36,
									"nodeType": "InheritanceSpecifier",
									"src": "715:7:1"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 37,
										"name": "DividendPayingTokenInterface",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 478,
										"src": "724:28:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_DividendPayingTokenInterface_$478",
											"typeString": "contract DividendPayingTokenInterface"
										}
									},
									"id": 38,
									"nodeType": "InheritanceSpecifier",
									"src": "724:28:1"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 39,
										"name": "DividendPayingTokenOptionalInterface",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 506,
										"src": "754:36:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_DividendPayingTokenOptionalInterface_$506",
											"typeString": "contract DividendPayingTokenOptionalInterface"
										}
									},
									"id": 40,
									"nodeType": "InheritanceSpecifier",
									"src": "754:36:1"
								}
							],
							"contractDependencies": [
								22,
								478,
								506,
								998,
								1076,
								1101,
								1209
							],
							"contractKind": "contract",
							"documentation": {
								"id": 32,
								"nodeType": "StructuredDocumentation",
								"src": "299:377:1",
								"text": "@title Dividend-Paying Token\n @author Roger Wu (https://github.com/roger-wu)\n @dev A mintable ERC20 token that allows anyone to pay and distribute ether\n  to token holders as dividends and allows token holders to withdraw their dividends.\n  Reference: the source code of PoWH3D: https://etherscan.io/address/0xB3775fB83F7D12A36E0475aBdD1FCA35c091efBe#code"
							},
							"fullyImplemented": true,
							"id": 448,
							"linearizedBaseContracts": [
								448,
								506,
								478,
								1209,
								998,
								1101,
								1076,
								22
							],
							"name": "DividendPayingToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 43,
									"libraryName": {
										"contractScope": null,
										"id": 41,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1404,
										"src": "802:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1404",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "796:27:1",
									"typeName": {
										"id": 42,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "815:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 46,
									"libraryName": {
										"contractScope": null,
										"id": 44,
										"name": "SafeMathUint",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1648,
										"src": "833:12:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMathUint_$1648",
											"typeString": "library SafeMathUint"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "827:31:1",
									"typeName": {
										"id": 45,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "850:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 49,
									"libraryName": {
										"contractScope": null,
										"id": 47,
										"name": "SafeMathInt",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1621,
										"src": "868:11:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMathInt_$1621",
											"typeString": "library SafeMathInt"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "862:29:1",
									"typeName": {
										"id": 48,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "884:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "4ca6ef28",
									"id": 55,
									"mutability": "immutable",
									"name": "CAKE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 448,
									"src": "897:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 50,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "897:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"hexValue": "307830453039466142423733426433416465306131374543433332316644313361313965383163453832",
												"id": 53,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "937:42:1",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"value": "0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											],
											"id": 52,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "929:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 51,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "929:7:1",
												"typeDescriptions": {
													"typeIdentifier": null,
													"typeString": null
												}
											}
										},
										"id": 54,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "929:51:1",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 60,
									"mutability": "constant",
									"name": "magnitude",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 448,
									"src": "1250:44:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 56,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1250:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
											"typeString": "int_const 3402...(31 digits omitted)...1456"
										},
										"id": 59,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"hexValue": "32",
											"id": 57,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1288:1:1",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_2_by_1",
												"typeString": "int_const 2"
											},
											"value": "2"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "313238",
											"id": 58,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1291:3:1",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_128_by_1",
												"typeString": "int_const 128"
											},
											"value": "128"
										},
										"src": "1288:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
											"typeString": "int_const 3402...(31 digits omitted)...1456"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 62,
									"mutability": "mutable",
									"name": "magnifiedDividendPerShare",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 448,
									"src": "1301:42:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 61,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1301:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 66,
									"mutability": "mutable",
									"name": "magnifiedDividendCorrections",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 448,
									"src": "2251:64:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
										"typeString": "mapping(address => int256)"
									},
									"typeName": {
										"id": 65,
										"keyType": {
											"id": 63,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2259:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2251:26:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
											"typeString": "mapping(address => int256)"
										},
										"valueType": {
											"id": 64,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "2270:6:1",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 70,
									"mutability": "mutable",
									"name": "withdrawnDividends",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 448,
									"src": "2320:55:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 69,
										"keyType": {
											"id": 67,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2328:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2320:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 68,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2339:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "85a6b3ae",
									"id": 72,
									"mutability": "mutable",
									"name": "totalDividendsDistributed",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 448,
									"src": "2382:40:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 71,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2382:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "2514:8:1",
										"statements": []
									},
									"documentation": null,
									"id": 84,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 79,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 74,
													"src": "2498:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"argumentTypes": null,
													"id": 80,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 76,
													"src": "2505:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 81,
											"modifierName": {
												"argumentTypes": null,
												"id": 78,
												"name": "ERC20",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 998,
												"src": "2492:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_ERC20_$998_$",
													"typeString": "type(contract ERC20)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2492:21:1"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "_name",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 84,
												"src": "2441:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 73,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2441:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "_symbol",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 84,
												"src": "2462:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 75,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2462:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2440:44:1"
									},
									"returnParameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2514:0:1"
									},
									"scope": 448,
									"src": "2429:93:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "2595:326:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 95,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 92,
																	"name": "totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 595,
																	"src": "2610:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2610:13:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 94,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2626:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2610:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 91,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2602:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2602:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 97,
												"nodeType": "ExpressionStatement",
												"src": "2602:26:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 98,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2641:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 99,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2650:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2641:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 129,
												"nodeType": "IfStatement",
												"src": "2637:279:1",
												"trueBody": {
													"id": 128,
													"nodeType": "Block",
													"src": "2653:263:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 101,
																	"name": "magnifiedDividendPerShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 62,
																	"src": "2662:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 111,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 107,
																						"name": "magnitude",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 60,
																						"src": "2743:9:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"components": [
																							{
																								"argumentTypes": null,
																								"id": 104,
																								"name": "amount",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 86,
																								"src": "2731:6:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 105,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "2730:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 106,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1317,
																					"src": "2730:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 108,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2730:23:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"argumentTypes": null,
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 109,
																					"name": "totalSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 595,
																					"src": "2756:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																						"typeString": "function () view returns (uint256)"
																					}
																				},
																				"id": 110,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2756:13:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2730:39:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 102,
																			"name": "magnifiedDividendPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 62,
																			"src": "2690:25:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 103,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1237,
																		"src": "2690:29:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2690:88:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2662:116:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 114,
															"nodeType": "ExpressionStatement",
															"src": "2662:116:1"
														},
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 116,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "2813:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "2813:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 118,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 86,
																		"src": "2825:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 115,
																	"name": "DividendsDistributed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 470,
																	"src": "2792:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 119,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2792:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 120,
															"nodeType": "EmitStatement",
															"src": "2787:45:1"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 121,
																	"name": "totalDividendsDistributed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 72,
																	"src": "2843:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 124,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 86,
																			"src": "2901:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 122,
																			"name": "totalDividendsDistributed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 72,
																			"src": "2871:25:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1237,
																		"src": "2871:29:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2871:37:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2843:65:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 127,
															"nodeType": "ExpressionStatement",
															"src": "2843:65:1"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"functionSelector": "ba72a955",
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 89,
											"modifierName": {
												"argumentTypes": null,
												"id": 88,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1158,
												"src": "2586:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2586:9:1"
										}
									],
									"name": "distributeCAKEDividends",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 131,
												"src": "2563:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 85,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2563:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2562:16:1"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2595:0:1"
									},
									"scope": 448,
									"src": "2530:391:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										463
									],
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "3142:48:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 137,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "3173:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3173:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 136,
														"name": "_withdrawDividendOfUser",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 209,
														"src": "3149:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$returns$_t_uint256_$",
															"typeString": "function (address payable) returns (uint256)"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3149:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "3149:35:1"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "2927:159:1",
										"text": "@notice Withdraws the ether distributed to the sender.\n @dev It emits a `DividendWithdrawn` event if the amount of withdrawn ether is greater than 0."
									},
									"functionSelector": "6a474002",
									"id": 142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawDividend",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 134,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3133:8:1"
									},
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3115:2:1"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3142:0:1"
									},
									"scope": 448,
									"src": "3090:100:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "3440:536:1",
										"statements": [
											{
												"assignments": [
													151
												],
												"declarations": [
													{
														"constant": false,
														"id": 151,
														"mutability": "mutable",
														"name": "_withdrawableDividend",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 208,
														"src": "3447:29:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 150,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3447:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 155,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 153,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "3502:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 152,
														"name": "withdrawableDividendOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 242,
														"src": "3479:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3479:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3447:60:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 156,
														"name": "_withdrawableDividend",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "3518:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 157,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3542:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3518:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 205,
												"nodeType": "IfStatement",
												"src": "3514:440:1",
												"trueBody": {
													"id": 204,
													"nodeType": "Block",
													"src": "3545:409:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 159,
																		"name": "withdrawnDividends",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 70,
																		"src": "3554:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 161,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 160,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 145,
																		"src": "3573:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3554:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 166,
																			"name": "_withdrawableDividend",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 151,
																			"src": "3610:21:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 162,
																				"name": "withdrawnDividends",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 70,
																				"src": "3581:18:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 164,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 163,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 145,
																				"src": "3600:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3581:24:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1237,
																		"src": "3581:28:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3581:51:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3554:78:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 169,
															"nodeType": "ExpressionStatement",
															"src": "3554:78:1"
														},
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 171,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 145,
																		"src": "3664:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 172,
																		"name": "_withdrawableDividend",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 151,
																		"src": "3670:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 170,
																	"name": "DividendWithdrawn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 477,
																	"src": "3646:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3646:46:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 174,
															"nodeType": "EmitStatement",
															"src": "3641:51:1"
														},
														{
															"assignments": [
																176
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 176,
																	"mutability": "mutable",
																	"name": "success",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 204,
																	"src": "3701:12:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 175,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "3701:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 184,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 181,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 145,
																		"src": "3738:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 182,
																		"name": "_withdrawableDividend",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 151,
																		"src": "3744:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 178,
																				"name": "CAKE",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 55,
																				"src": "3723:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 177,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1076,
																			"src": "3716:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$1076_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 179,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3716:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1076",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 180,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1025,
																	"src": "3716:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3716:50:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3701:65:1"
														},
														{
															"condition": {
																"argumentTypes": null,
																"id": 186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "3780:8:1",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 185,
																	"name": "success",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 176,
																	"src": "3781:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 201,
															"nodeType": "IfStatement",
															"src": "3777:131:1",
															"trueBody": {
																"id": 200,
																"nodeType": "Block",
																"src": "3790:118:1",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 196,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 187,
																					"name": "withdrawnDividends",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 70,
																					"src": "3801:18:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 189,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 188,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 145,
																					"src": "3820:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3801:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 194,
																						"name": "_withdrawableDividend",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 151,
																						"src": "3857:21:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 190,
																							"name": "withdrawnDividends",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 70,
																							"src": "3828:18:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 192,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 191,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 145,
																							"src": "3847:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address_payable",
																								"typeString": "address payable"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "3828:24:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 193,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sub",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1254,
																					"src": "3828:28:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 195,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3828:51:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3801:78:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 197,
																		"nodeType": "ExpressionStatement",
																		"src": "3801:78:1"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3897:1:1",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"functionReturnParameters": 149,
																		"id": 199,
																		"nodeType": "Return",
																		"src": "3890:8:1"
																	}
																]
															}
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 202,
																"name": "_withdrawableDividend",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 151,
																"src": "3925:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 149,
															"id": 203,
															"nodeType": "Return",
															"src": "3918:28:1"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3969:1:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 149,
												"id": 207,
												"nodeType": "Return",
												"src": "3962:8:1"
											}
										]
									},
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "3196:159:1",
										"text": "@notice Withdraws the ether distributed to the sender.\n @dev It emits a `DividendWithdrawn` event if the amount of withdrawn ether is greater than 0."
									},
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_withdrawDividendOfUser",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 209,
												"src": "3391:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3391:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3390:22:1"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 209,
												"src": "3431:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3430:9:1"
									},
									"scope": 448,
									"src": "3358:618:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										459
									],
									"body": {
										"id": 222,
										"nodeType": "Block",
										"src": "4263:50:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 219,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "4300:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 218,
														"name": "withdrawableDividendOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 242,
														"src": "4277:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4277:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 217,
												"id": 221,
												"nodeType": "Return",
												"src": "4270:37:1"
											}
										]
									},
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3984:201:1",
										"text": "@notice View the amount of dividend in wei that an address can withdraw.\n @param _owner The address of a token holder.\n @return The amount of dividend in wei that `_owner` can withdraw."
									},
									"functionSelector": "91b89fba",
									"id": 223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "dividendOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 214,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4237:8:1"
									},
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 223,
												"src": "4209:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4209:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4208:16:1"
									},
									"returnParameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 223,
												"src": "4254:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4254:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4253:9:1"
									},
									"scope": 448,
									"src": "4189:124:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										489
									],
									"body": {
										"id": 241,
										"nodeType": "Block",
										"src": "4610:82:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 236,
																"name": "withdrawnDividends",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 70,
																"src": "4659:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 238,
															"indexExpression": {
																"argumentTypes": null,
																"id": 237,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 226,
																"src": "4678:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4659:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 233,
																	"name": "_owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 226,
																	"src": "4647:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 232,
																"name": "accumulativeDividendOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 284,
																"src": "4624:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4624:30:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 235,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1254,
														"src": "4624:34:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4624:62:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 240,
												"nodeType": "Return",
												"src": "4617:69:1"
											}
										]
									},
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "4319:201:1",
										"text": "@notice View the amount of dividend in wei that an address can withdraw.\n @param _owner The address of a token holder.\n @return The amount of dividend in wei that `_owner` can withdraw."
									},
									"functionSelector": "a8b9d240",
									"id": 242,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawableDividendOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 228,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4584:8:1"
									},
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 242,
												"src": "4556:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4556:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4555:16:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 242,
												"src": "4601:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4601:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4600:9:1"
									},
									"scope": 448,
									"src": "4524:168:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										497
									],
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "4988:46:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 251,
														"name": "withdrawnDividends",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "5002:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 253,
													"indexExpression": {
														"argumentTypes": null,
														"id": 252,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 245,
														"src": "5021:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5002:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 250,
												"id": 254,
												"nodeType": "Return",
												"src": "4995:33:1"
											}
										]
									},
									"documentation": {
										"id": 243,
										"nodeType": "StructuredDocumentation",
										"src": "4698:203:1",
										"text": "@notice View the amount of dividend in wei that an address has withdrawn.\n @param _owner The address of a token holder.\n @return The amount of dividend in wei that `_owner` has withdrawn."
									},
									"functionSelector": "aafd847a",
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawnDividendOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 247,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4962:8:1"
									},
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 256,
												"src": "4934:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4934:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4933:16:1"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 256,
												"src": "4979:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4979:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4978:9:1"
									},
									"scope": 448,
									"src": "4905:129:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										505
									],
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "5561:161:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 274,
																			"name": "magnifiedDividendCorrections",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 66,
																			"src": "5651:28:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																				"typeString": "mapping(address => int256)"
																			}
																		},
																		"id": 276,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 275,
																			"name": "_owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 259,
																			"src": "5680:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5651:36:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"id": 268,
																								"name": "_owner",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 259,
																								"src": "5615:6:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"id": 267,
																							"name": "balanceOf",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 609,
																							"src": "5605:9:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																								"typeString": "function (address) view returns (uint256)"
																							}
																						},
																						"id": 269,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5605:17:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 265,
																						"name": "magnifiedDividendPerShare",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 62,
																						"src": "5575:25:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 266,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1317,
																					"src": "5575:29:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 270,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5575:48:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 271,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "toInt256Safe",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1647,
																			"src": "5575:61:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (int256)"
																			}
																		},
																		"id": 272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5575:63:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1578,
																	"src": "5575:75:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
																		"typeString": "function (int256,int256) pure returns (int256)"
																	}
																},
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5575:113:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "toUint256Safe",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1620,
															"src": "5575:127:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$bound_to$_t_int256_$",
																"typeString": "function (int256) pure returns (uint256)"
															}
														},
														"id": 279,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5575:129:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 280,
														"name": "magnitude",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "5707:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5575:141:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 264,
												"id": 282,
												"nodeType": "Return",
												"src": "5568:148:1"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "5042:429:1",
										"text": "@notice View the amount of dividend in wei that an address has earned in total.\n @dev accumulativeDividendOf(_owner) = withdrawableDividendOf(_owner) + withdrawnDividendOf(_owner)\n = (magnifiedDividendPerShare * balanceOf(_owner) + magnifiedDividendCorrections[_owner]) / magnitude\n @param _owner The address of a token holder.\n @return The amount of dividend in wei that `_owner` has earned in total."
									},
									"functionSelector": "27ce0147",
									"id": 284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "accumulativeDividendOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 261,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5535:8:1"
									},
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 284,
												"src": "5507:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5507:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5506:16:1"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 284,
												"src": "5552:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5552:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5551:9:1"
									},
									"scope": 448,
									"src": "5475:247:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										830
									],
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "6110:303:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "66616c7365",
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6125:5:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 295,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6117:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6117:14:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "6117:14:1"
											},
											{
												"assignments": [
													300
												],
												"declarations": [
													{
														"constant": false,
														"id": 300,
														"mutability": "mutable",
														"name": "_magCorrection",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 330,
														"src": "6140:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 299,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "6140:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 307,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 303,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 291,
																	"src": "6194:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 301,
																	"name": "magnifiedDividendPerShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 62,
																	"src": "6164:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1317,
																"src": "6164:29:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6164:36:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 305,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "toInt256Safe",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1647,
														"src": "6164:49:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256) pure returns (int256)"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6164:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6140:75:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 308,
															"name": "magnifiedDividendCorrections",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 66,
															"src": "6222:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																"typeString": "mapping(address => int256)"
															}
														},
														"id": 310,
														"indexExpression": {
															"argumentTypes": null,
															"id": 309,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "6251:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6222:34:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 315,
																"name": "_magCorrection",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 300,
																"src": "6298:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 311,
																	"name": "magnifiedDividendCorrections",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 66,
																	"src": "6259:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																		"typeString": "mapping(address => int256)"
																	}
																},
																"id": 313,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 312,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 287,
																	"src": "6288:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6259:34:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1578,
															"src": "6259:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
																"typeString": "function (int256,int256) pure returns (int256)"
															}
														},
														"id": 316,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6259:54:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "6222:91:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 318,
												"nodeType": "ExpressionStatement",
												"src": "6222:91:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 319,
															"name": "magnifiedDividendCorrections",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 66,
															"src": "6320:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																"typeString": "mapping(address => int256)"
															}
														},
														"id": 321,
														"indexExpression": {
															"argumentTypes": null,
															"id": 320,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "6349:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6320:32:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 326,
																"name": "_magCorrection",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 300,
																"src": "6392:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 322,
																	"name": "magnifiedDividendCorrections",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 66,
																	"src": "6355:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																		"typeString": "mapping(address => int256)"
																	}
																},
																"id": 324,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 323,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 289,
																	"src": "6384:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6355:32:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1539,
															"src": "6355:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
																"typeString": "function (int256,int256) pure returns (int256)"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6355:52:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "6320:87:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 329,
												"nodeType": "ExpressionStatement",
												"src": "6320:87:1"
											}
										]
									},
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "5728:292:1",
										"text": "@dev Internal function that transfer tokens from one address to another.\n Update magnifiedDividendCorrections to keep dividends unchanged.\n @param from The address to transfer from.\n @param to The address to transfer to.\n @param value The amount to be transferred."
									},
									"id": 331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 293,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6101:8:1"
									},
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 331,
												"src": "6043:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6043:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 331,
												"src": "6057:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6057:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 331,
												"src": "6069:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6042:41:1"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6110:0:1"
									},
									"scope": 448,
									"src": "6024:389:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										885
									],
									"body": {
										"id": 364,
										"nodeType": "Block",
										"src": "6744:195:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 343,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "6763:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 344,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "6772:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 340,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -25,
															"src": "6751:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_super$_DividendPayingToken_$448",
																"typeString": "contract super DividendPayingToken"
															}
														},
														"id": 342,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 885,
														"src": "6751:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6751:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 346,
												"nodeType": "ExpressionStatement",
												"src": "6751:27:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 347,
															"name": "magnifiedDividendCorrections",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 66,
															"src": "6787:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																"typeString": "mapping(address => int256)"
															}
														},
														"id": 349,
														"indexExpression": {
															"argumentTypes": null,
															"id": 348,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "6816:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6787:37:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 356,
																						"name": "value",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 336,
																						"src": "6909:5:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 354,
																						"name": "magnifiedDividendPerShare",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 62,
																						"src": "6879:25:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 355,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1317,
																					"src": "6879:29:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 357,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6879:36:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 358,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "6878:38:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "toInt256Safe",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1647,
																	"src": "6878:51:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (int256)"
																	}
																},
																"id": 360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6878:53:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 350,
																	"name": "magnifiedDividendCorrections",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 66,
																	"src": "6827:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																		"typeString": "mapping(address => int256)"
																	}
																},
																"id": 352,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 351,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 334,
																	"src": "6856:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6827:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1539,
															"src": "6827:49:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
																"typeString": "function (int256,int256) pure returns (int256)"
															}
														},
														"id": 361,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6827:106:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "6787:146:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "6787:146:1"
											}
										]
									},
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "6419:256:1",
										"text": "@dev Internal function that mints tokens to an account.\n Update magnifiedDividendCorrections to keep dividends unchanged.\n @param account The account that will receive the created tokens.\n @param value The amount that will be created."
									},
									"id": 365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 338,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6735:8:1"
									},
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 365,
												"src": "6694:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6694:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 365,
												"src": "6711:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6711:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6693:32:1"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6744:0:1"
									},
									"scope": 448,
									"src": "6679:260:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										941
									],
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "7279:195:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 377,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "7298:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 378,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "7307:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 374,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -25,
															"src": "7286:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_super$_DividendPayingToken_$448",
																"typeString": "contract super DividendPayingToken"
															}
														},
														"id": 376,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 941,
														"src": "7286:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7286:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "7286:27:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 381,
															"name": "magnifiedDividendCorrections",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 66,
															"src": "7322:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																"typeString": "mapping(address => int256)"
															}
														},
														"id": 383,
														"indexExpression": {
															"argumentTypes": null,
															"id": 382,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "7351:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7322:37:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 390,
																						"name": "value",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 370,
																						"src": "7444:5:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 388,
																						"name": "magnifiedDividendPerShare",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 62,
																						"src": "7414:25:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 389,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1317,
																					"src": "7414:29:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 391,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7414:36:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 392,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "7413:38:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "toInt256Safe",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1647,
																	"src": "7413:51:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (int256)"
																	}
																},
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7413:53:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 384,
																	"name": "magnifiedDividendCorrections",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 66,
																	"src": "7362:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																		"typeString": "mapping(address => int256)"
																	}
																},
																"id": 386,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 385,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 368,
																	"src": "7391:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7362:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1578,
															"src": "7362:49:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
																"typeString": "function (int256,int256) pure returns (int256)"
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7362:106:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "7322:146:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 397,
												"nodeType": "ExpressionStatement",
												"src": "7322:146:1"
											}
										]
									},
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "6945:265:1",
										"text": "@dev Internal function that burns an amount of the token of a given account.\n Update magnifiedDividendCorrections to keep dividends unchanged.\n @param account The account whose tokens will be burnt.\n @param value The amount that will be burnt."
									},
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 372,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7270:8:1"
									},
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 399,
												"src": "7229:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7229:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 399,
												"src": "7246:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7246:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7228:32:1"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7279:0:1"
									},
									"scope": 448,
									"src": "7214:260:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "7547:340:1",
										"statements": [
											{
												"assignments": [
													407
												],
												"declarations": [
													{
														"constant": false,
														"id": 407,
														"mutability": "mutable",
														"name": "currentBalance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 446,
														"src": "7554:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 406,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7554:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 411,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 409,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "7589:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 408,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7579:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7579:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7554:43:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 412,
														"name": "newBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "7609:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 413,
														"name": "currentBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "7622:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7609:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 430,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 428,
															"name": "newBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "7750:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"argumentTypes": null,
															"id": 429,
															"name": "currentBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "7763:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7750:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 444,
													"nodeType": "IfStatement",
													"src": "7747:135:1",
													"trueBody": {
														"id": 443,
														"nodeType": "Block",
														"src": "7779:103:1",
														"statements": [
															{
																"assignments": [
																	432
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 432,
																		"mutability": "mutable",
																		"name": "burnAmount",
																		"nodeType": "VariableDeclaration",
																		"overrides": null,
																		"scope": 443,
																		"src": "7788:18:1",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 431,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "7788:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"value": null,
																		"visibility": "internal"
																	}
																],
																"id": 437,
																"initialValue": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 435,
																			"name": "newBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 403,
																			"src": "7828:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 433,
																			"name": "currentBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 407,
																			"src": "7809:14:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1254,
																		"src": "7809:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7809:30:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "7788:51:1"
															},
															{
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 439,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 401,
																			"src": "7854:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 440,
																			"name": "burnAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 432,
																			"src": "7863:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 438,
																		"name": "_burn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			399
																		],
																		"referencedDeclaration": 399,
																		"src": "7848:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,uint256)"
																		}
																	},
																	"id": 441,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7848:26:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 442,
																"nodeType": "ExpressionStatement",
																"src": "7848:26:1"
															}
														]
													}
												},
												"id": 445,
												"nodeType": "IfStatement",
												"src": "7606:276:1",
												"trueBody": {
													"id": 427,
													"nodeType": "Block",
													"src": "7638:103:1",
													"statements": [
														{
															"assignments": [
																416
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 416,
																	"mutability": "mutable",
																	"name": "mintAmount",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 427,
																	"src": "7647:18:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 415,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7647:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 421,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 419,
																		"name": "currentBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 407,
																		"src": "7683:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 417,
																		"name": "newBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 403,
																		"src": "7668:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1254,
																	"src": "7668:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7668:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7647:51:1"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 423,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 401,
																		"src": "7713:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 424,
																		"name": "mintAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 416,
																		"src": "7722:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 422,
																	"name": "_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		365
																	],
																	"referencedDeclaration": 365,
																	"src": "7707:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7707:26:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 426,
															"nodeType": "ExpressionStatement",
															"src": "7707:26:1"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBalance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 447,
												"src": "7501:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7501:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "newBalance",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 447,
												"src": "7518:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7518:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7500:37:1"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7547:0:1"
									},
									"scope": 448,
									"src": "7480:407:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 449,
							"src": "676:7214:1"
						}
					],
					"src": "35:7857:1"
				},
				"id": 1
			},
			"DividendPayingTokenInterface.sol": {
				"ast": {
					"absolutePath": "DividendPayingTokenInterface.sol",
					"exportedSymbols": {
						"DividendPayingTokenInterface": [
							478
						]
					},
					"id": 479,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 450,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 451,
								"nodeType": "StructuredDocumentation",
								"src": "64:157:2",
								"text": "@title Dividend-Paying Token Interface\n @author Roger Wu (https://github.com/roger-wu)\n @dev An interface for a dividend-paying token contract."
							},
							"fullyImplemented": false,
							"id": 478,
							"linearizedBaseContracts": [
								478
							],
							"name": "DividendPayingTokenInterface",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 452,
										"nodeType": "StructuredDocumentation",
										"src": "265:201:2",
										"text": "@notice View the amount of dividend in wei that an address can withdraw.\n @param _owner The address of a token holder.\n @return The amount of dividend in wei that `_owner` can withdraw."
									},
									"functionSelector": "91b89fba",
									"id": 459,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "dividendOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 459,
												"src": "490:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "490:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "489:16:2"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 459,
												"src": "528:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "528:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "527:9:2"
									},
									"scope": 478,
									"src": "470:67:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "545:293:2",
										"text": "@notice Withdraws the ether distributed to the sender.\n @dev SHOULD transfer `dividendOf(msg.sender)` wei to `msg.sender`, and `dividendOf(msg.sender)` SHOULD be 0 after the transfer.\n  MUST emit a `DividendWithdrawn` event if the amount of ether transferred is greater than 0."
									},
									"functionSelector": "6a474002",
									"id": 463,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawDividend",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "867:2:2"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "878:0:2"
									},
									"scope": 478,
									"src": "842:37:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 464,
										"nodeType": "StructuredDocumentation",
										"src": "885:204:2",
										"text": "@dev This event MUST emit when ether is distributed to token holders.\n @param from The address which sends ether to this contract.\n @param weiAmount The amount of distributed ether in wei."
									},
									"id": 470,
									"name": "DividendsDistributed",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 470,
												"src": "1126:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1126:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"indexed": false,
												"mutability": "mutable",
												"name": "weiAmount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 470,
												"src": "1153:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1153:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1119:56:2"
									},
									"src": "1093:83:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 471,
										"nodeType": "StructuredDocumentation",
										"src": "1182:204:2",
										"text": "@dev This event MUST emit when an address withdraws their dividend.\n @param to The address which withdraws ether from this contract.\n @param weiAmount The amount of withdrawn ether in wei."
									},
									"id": 477,
									"name": "DividendWithdrawn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 477,
												"src": "1420:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1420:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 475,
												"indexed": false,
												"mutability": "mutable",
												"name": "weiAmount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 477,
												"src": "1445:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1445:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1413:54:2"
									},
									"src": "1390:78:2"
								}
							],
							"scope": 479,
							"src": "221:1250:2"
						}
					],
					"src": "35:1438:2"
				},
				"id": 2
			},
			"DividendPayingTokenOptionalInterface.sol": {
				"ast": {
					"absolutePath": "DividendPayingTokenOptionalInterface.sol",
					"exportedSymbols": {
						"DividendPayingTokenOptionalInterface": [
							506
						]
					},
					"id": 507,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 480,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 481,
								"nodeType": "StructuredDocumentation",
								"src": "64:172:3",
								"text": "@title Dividend-Paying Token Optional Interface\n @author Roger Wu (https://github.com/roger-wu)\n @dev OPTIONAL functions for a dividend-paying token contract."
							},
							"fullyImplemented": false,
							"id": 506,
							"linearizedBaseContracts": [
								506
							],
							"name": "DividendPayingTokenOptionalInterface",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 482,
										"nodeType": "StructuredDocumentation",
										"src": "288:201:3",
										"text": "@notice View the amount of dividend in wei that an address can withdraw.\n @param _owner The address of a token holder.\n @return The amount of dividend in wei that `_owner` can withdraw."
									},
									"functionSelector": "a8b9d240",
									"id": 489,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawableDividendOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 489,
												"src": "525:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "525:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "524:16:3"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 489,
												"src": "563:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "563:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "562:9:3"
									},
									"scope": 506,
									"src": "493:79:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "578:203:3",
										"text": "@notice View the amount of dividend in wei that an address has withdrawn.\n @param _owner The address of a token holder.\n @return The amount of dividend in wei that `_owner` has withdrawn."
									},
									"functionSelector": "aafd847a",
									"id": 497,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawnDividendOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 497,
												"src": "814:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "814:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "813:16:3"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 497,
												"src": "852:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "852:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "851:9:3"
									},
									"scope": 506,
									"src": "785:76:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "867:321:3",
										"text": "@notice View the amount of dividend in wei that an address has earned in total.\n @dev accumulativeDividendOf(_owner) = withdrawableDividendOf(_owner) + withdrawnDividendOf(_owner)\n @param _owner The address of a token holder.\n @return The amount of dividend in wei that `_owner` has earned in total."
									},
									"functionSelector": "27ce0147",
									"id": 505,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "accumulativeDividendOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 505,
												"src": "1224:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1224:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1223:16:3"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 505,
												"src": "1262:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1262:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1261:9:3"
									},
									"scope": 506,
									"src": "1192:79:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 507,
							"src": "236:1038:3"
						}
					],
					"src": "35:1241:3"
				},
				"id": 3
			},
			"ERC20.sol": {
				"ast": {
					"absolutePath": "ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							998
						]
					},
					"id": 999,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 508,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:4"
						},
						{
							"absolutePath": "IERC20.sol",
							"file": "./IERC20.sol",
							"id": 509,
							"nodeType": "ImportDirective",
							"scope": 999,
							"sourceUnit": 1077,
							"src": "62:22:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IERC20Metadata.sol",
							"file": "./IERC20Metadata.sol",
							"id": 510,
							"nodeType": "ImportDirective",
							"scope": 999,
							"sourceUnit": 1102,
							"src": "86:30:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Context.sol",
							"file": "./Context.sol",
							"id": 511,
							"nodeType": "ImportDirective",
							"scope": 999,
							"sourceUnit": 23,
							"src": "118:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 512,
							"nodeType": "ImportDirective",
							"scope": 999,
							"sourceUnit": 1405,
							"src": "143:24:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 514,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 22,
										"src": "1376:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$22",
											"typeString": "contract Context"
										}
									},
									"id": 515,
									"nodeType": "InheritanceSpecifier",
									"src": "1376:7:4"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 516,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1076,
										"src": "1385:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1076",
											"typeString": "contract IERC20"
										}
									},
									"id": 517,
									"nodeType": "InheritanceSpecifier",
									"src": "1385:6:4"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 518,
										"name": "IERC20Metadata",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1101,
										"src": "1393:14:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Metadata_$1101",
											"typeString": "contract IERC20Metadata"
										}
									},
									"id": 519,
									"nodeType": "InheritanceSpecifier",
									"src": "1393:14:4"
								}
							],
							"contractDependencies": [
								22,
								1076,
								1101
							],
							"contractKind": "contract",
							"documentation": {
								"id": 513,
								"nodeType": "StructuredDocumentation",
								"src": "171:1185:4",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 998,
							"linearizedBaseContracts": [
								998,
								1101,
								1076,
								22
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 522,
									"libraryName": {
										"contractScope": null,
										"id": 520,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1404,
										"src": "1421:8:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1404",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1415:27:4",
									"typeName": {
										"id": 521,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1434:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 526,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 998,
									"src": "1450:45:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 525,
										"keyType": {
											"id": 523,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1458:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1450:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 524,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1469:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 532,
									"mutability": "mutable",
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 998,
									"src": "1504:67:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 531,
										"keyType": {
											"id": 527,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1512:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1504:47:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 530,
											"keyType": {
												"id": 528,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1531:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1523:27:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 529,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1542:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 534,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 998,
									"src": "1580:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 533,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1580:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 536,
									"mutability": "mutable",
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 998,
									"src": "1617:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 535,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1617:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 538,
									"mutability": "mutable",
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 998,
									"src": "1644:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 537,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1644:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "2050:60:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 546,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 536,
														"src": "2061:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 547,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 541,
														"src": "2069:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2061:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 549,
												"nodeType": "ExpressionStatement",
												"src": "2061:13:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 550,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "2085:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 551,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "2095:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2085:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 553,
												"nodeType": "ExpressionStatement",
												"src": "2085:17:4"
											}
										]
									},
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "1675:306:4",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 555,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "name_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 555,
												"src": "1999:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 540,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1999:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "symbol_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 555,
												"src": "2020:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 542,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2020:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1998:44:4"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2050:0:4"
									},
									"scope": 998,
									"src": "1987:123:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1088
									],
									"body": {
										"id": 564,
										"nodeType": "Block",
										"src": "2249:31:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 562,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 536,
													"src": "2267:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 561,
												"id": 563,
												"nodeType": "Return",
												"src": "2260:12:4"
											}
										]
									},
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "2118:56:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 558,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2216:8:4"
									},
									"parameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2193:2:4"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 565,
												"src": "2234:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 559,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2234:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2233:15:4"
									},
									"scope": 998,
									"src": "2180:100:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1094
									],
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "2470:33:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 572,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 538,
													"src": "2488:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 571,
												"id": 573,
												"nodeType": "Return",
												"src": "2481:14:4"
											}
										]
									},
									"documentation": {
										"id": 566,
										"nodeType": "StructuredDocumentation",
										"src": "2288:105:4",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 568,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2437:8:4"
									},
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2414:2:4"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 575,
												"src": "2455:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 569,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2455:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2454:15:4"
									},
									"scope": 998,
									"src": "2399:104:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1100
									],
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "3207:28:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "3138",
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3225:2:4",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 581,
												"id": 583,
												"nodeType": "Return",
												"src": "3218:9:4"
											}
										]
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "2511:625:4",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 578,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3182:8:4"
									},
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3159:2:4"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 585,
												"src": "3200:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 579,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3200:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3199:7:4"
									},
									"scope": 998,
									"src": "3142:93:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1007
									],
									"body": {
										"id": 594,
										"nodeType": "Block",
										"src": "3370:38:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 592,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 534,
													"src": "3388:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 591,
												"id": 593,
												"nodeType": "Return",
												"src": "3381:19:4"
											}
										]
									},
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "3243:51:4",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 588,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3343:8:4"
									},
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3320:2:4"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 595,
												"src": "3361:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3361:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3360:9:4"
									},
									"scope": 998,
									"src": "3300:108:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1015
									],
									"body": {
										"id": 608,
										"nodeType": "Block",
										"src": "3554:44:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 604,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "3572:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 606,
													"indexExpression": {
														"argumentTypes": null,
														"id": 605,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "3582:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3572:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 603,
												"id": 607,
												"nodeType": "Return",
												"src": "3565:25:4"
											}
										]
									},
									"documentation": {
										"id": 596,
										"nodeType": "StructuredDocumentation",
										"src": "3416:49:4",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 600,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3527:8:4"
									},
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 609,
												"src": "3490:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3490:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3489:17:4"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 609,
												"src": "3545:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3545:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3544:9:4"
									},
									"scope": 998,
									"src": "3471:127:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1025
									],
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "3903:83:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 621,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "3924:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3924:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 623,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "3938:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 624,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "3949:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 620,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "3914:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3914:42:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 626,
												"nodeType": "ExpressionStatement",
												"src": "3914:42:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3974:4:4",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 619,
												"id": 628,
												"nodeType": "Return",
												"src": "3967:11:4"
											}
										]
									},
									"documentation": {
										"id": 610,
										"nodeType": "StructuredDocumentation",
										"src": "3606:199:4",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 616,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3879:8:4"
									},
									"parameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 630,
												"src": "3829:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3829:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 630,
												"src": "3848:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3848:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3828:35:4"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 630,
												"src": "3897:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 617,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3897:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3896:6:4"
									},
									"scope": 998,
									"src": "3811:175:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1035
									],
									"body": {
										"id": 647,
										"nodeType": "Block",
										"src": "4147:53:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 641,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "4165:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 643,
														"indexExpression": {
															"argumentTypes": null,
															"id": 642,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "4177:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4165:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 645,
													"indexExpression": {
														"argumentTypes": null,
														"id": 644,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 635,
														"src": "4184:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4165:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 640,
												"id": 646,
												"nodeType": "Return",
												"src": "4158:34:4"
											}
										]
									},
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "3994:49:4",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 637,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4120:8:4"
									},
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 648,
												"src": "4068:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4068:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 648,
												"src": "4083:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4083:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4067:32:4"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 648,
												"src": "4138:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4138:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4137:9:4"
									},
									"scope": 998,
									"src": "4049:151:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1045
									],
									"body": {
										"id": 668,
										"nodeType": "Block",
										"src": "4436:80:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 660,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "4456:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4456:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 662,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "4470:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 663,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "4479:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 659,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "4447:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4447:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 665,
												"nodeType": "ExpressionStatement",
												"src": "4447:39:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4504:4:4",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 658,
												"id": 667,
												"nodeType": "Return",
												"src": "4497:11:4"
											}
										]
									},
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "4208:133:4",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 655,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4412:8:4"
									},
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 669,
												"src": "4364:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4364:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 669,
												"src": "4381:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4381:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4363:33:4"
									},
									"returnParameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 669,
												"src": "4430:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 656,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4430:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4429:6:4"
									},
									"scope": 998,
									"src": "4347:169:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1057
									],
									"body": {
										"id": 706,
										"nodeType": "Block",
										"src": "5144:209:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 683,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "5165:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 684,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "5173:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 685,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "5184:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 682,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "5155:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5155:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 687,
												"nodeType": "ExpressionStatement",
												"src": "5155:36:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 689,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "5211:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 690,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "5219:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5219:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 699,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 676,
																	"src": "5271:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5279:42:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	},
																	"value": "ERC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 692,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 532,
																			"src": "5233:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 694,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 693,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 672,
																			"src": "5245:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5233:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 697,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 695,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 10,
																			"src": "5253:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5253:12:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5233:33:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1282,
																"src": "5233:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5233:89:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 688,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "5202:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5202:121:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 703,
												"nodeType": "ExpressionStatement",
												"src": "5202:121:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5341:4:4",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 681,
												"id": 705,
												"nodeType": "Return",
												"src": "5334:11:4"
											}
										]
									},
									"documentation": {
										"id": 670,
										"nodeType": "StructuredDocumentation",
										"src": "4524:468:4",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 678,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5120:8:4"
									},
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 707,
												"src": "5030:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5030:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 707,
												"src": "5055:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5055:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 707,
												"src": "5083:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5083:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5019:85:4"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 707,
												"src": "5138:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 679,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5138:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5137:6:4"
									},
									"scope": 998,
									"src": "4998:355:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 734,
										"nodeType": "Block",
										"src": "5856:124:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 718,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "5876:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5876:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 720,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "5890:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 728,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 712,
																	"src": "5938:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 721,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 532,
																			"src": "5899:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 724,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 722,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 10,
																				"src": "5911:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 723,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5911:12:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5899:25:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 726,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 725,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 710,
																		"src": "5925:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5899:34:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 727,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1237,
																"src": "5899:38:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5899:50:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 717,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "5867:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5867:83:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 731,
												"nodeType": "ExpressionStatement",
												"src": "5867:83:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5968:4:4",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 716,
												"id": 733,
												"nodeType": "Return",
												"src": "5961:11:4"
											}
										]
									},
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "5361:395:4",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 735,
												"src": "5789:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5789:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 735,
												"src": "5806:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5806:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5788:37:4"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 735,
												"src": "5850:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 714,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5850:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5849:6:4"
									},
									"scope": 998,
									"src": "5762:218:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 763,
										"nodeType": "Block",
										"src": "6582:170:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 746,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "6602:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6602:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 748,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "6616:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 756,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 740,
																	"src": "6664:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 757,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6681:39:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	},
																	"value": "ERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 749,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 532,
																			"src": "6625:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 752,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 750,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 10,
																				"src": "6637:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 751,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6637:12:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6625:25:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 754,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 753,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 738,
																		"src": "6651:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6625:34:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 755,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1282,
																"src": "6625:38:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6625:96:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 745,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "6593:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6593:129:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 760,
												"nodeType": "ExpressionStatement",
												"src": "6593:129:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6740:4:4",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 744,
												"id": 762,
												"nodeType": "Return",
												"src": "6733:11:4"
											}
										]
									},
									"documentation": {
										"id": 736,
										"nodeType": "StructuredDocumentation",
										"src": "5988:489:4",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 764,
												"src": "6510:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6510:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 764,
												"src": "6527:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6527:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6509:42:4"
									},
									"returnParameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 764,
												"src": "6576:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 742,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6576:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6575:6:4"
									},
									"scope": 998,
									"src": "6483:269:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 829,
										"nodeType": "Block",
										"src": "7363:452:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 775,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 767,
																"src": "7382:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7400:1:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7392:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 776,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7392:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 779,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7392:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7382:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7404:39:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 774,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7374:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7374:70:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 783,
												"nodeType": "ExpressionStatement",
												"src": "7374:70:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 785,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 769,
																"src": "7463:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 788,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7484:1:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 787,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7476:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 786,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7476:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 789,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7476:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7463:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 791,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7488:37:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 784,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7455:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7455:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 793,
												"nodeType": "ExpressionStatement",
												"src": "7455:71:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 795,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "7560:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 796,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "7568:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 797,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "7579:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 794,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 997,
														"src": "7539:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7539:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 799,
												"nodeType": "ExpressionStatement",
												"src": "7539:47:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 800,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "7599:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 802,
														"indexExpression": {
															"argumentTypes": null,
															"id": 801,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "7609:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7599:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 807,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 771,
																"src": "7641:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 808,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7649:40:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																},
																"value": "ERC20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 803,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 526,
																	"src": "7619:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 805,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 804,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "7629:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7619:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1282,
															"src": "7619:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 809,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7619:71:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7599:91:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 811,
												"nodeType": "ExpressionStatement",
												"src": "7599:91:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 812,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "7701:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 814,
														"indexExpression": {
															"argumentTypes": null,
															"id": 813,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "7711:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7701:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 819,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 771,
																"src": "7749:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 815,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 526,
																	"src": "7724:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 817,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 816,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 769,
																	"src": "7734:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7724:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1237,
															"src": "7724:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 820,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7724:32:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7701:55:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 822,
												"nodeType": "ExpressionStatement",
												"src": "7701:55:4"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 824,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "7781:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 825,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "7789:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 826,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "7800:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 823,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "7772:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7772:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 828,
												"nodeType": "EmitStatement",
												"src": "7767:40:4"
											}
										]
									},
									"documentation": {
										"id": 765,
										"nodeType": "StructuredDocumentation",
										"src": "6760:476:4",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 830,
												"src": "7271:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7271:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 830,
												"src": "7296:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7296:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 830,
												"src": "7324:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7324:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7260:85:4"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7363:0:4"
									},
									"scope": 998,
									"src": "7242:573:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 884,
										"nodeType": "Block",
										"src": "8167:313:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 839,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 833,
																"src": "8186:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8205:1:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8197:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 840,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8197:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8197:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "8186:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8209:33:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 838,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8178:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8178:65:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 847,
												"nodeType": "ExpressionStatement",
												"src": "8178:65:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 851,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8285:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 850,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8277:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 849,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8277:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 852,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8277:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 853,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "8289:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 854,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "8298:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 848,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 997,
														"src": "8256:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8256:49:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 856,
												"nodeType": "ExpressionStatement",
												"src": "8256:49:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 857,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "8318:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 860,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 835,
																"src": "8350:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 858,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 534,
																"src": "8333:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1237,
															"src": "8333:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 861,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8333:24:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8318:39:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 863,
												"nodeType": "ExpressionStatement",
												"src": "8318:39:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 864,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "8368:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 866,
														"indexExpression": {
															"argumentTypes": null,
															"id": 865,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "8378:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8368:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 871,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 835,
																"src": "8412:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 867,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 526,
																	"src": "8389:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 869,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 868,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 833,
																	"src": "8399:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8389:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1237,
															"src": "8389:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 872,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8389:30:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8368:51:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 874,
												"nodeType": "ExpressionStatement",
												"src": "8368:51:4"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8452:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 877,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8444:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 876,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8444:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8444:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 880,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "8456:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 881,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "8465:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 875,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "8435:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8435:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 883,
												"nodeType": "EmitStatement",
												"src": "8430:42:4"
											}
										]
									},
									"documentation": {
										"id": 831,
										"nodeType": "StructuredDocumentation",
										"src": "7823:273:4",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 885,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 885,
												"src": "8117:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 832,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8117:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 885,
												"src": "8134:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8134:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8116:33:4"
									},
									"returnParameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8167:0:4"
									},
									"scope": 998,
									"src": "8102:378:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 940,
										"nodeType": "Block",
										"src": "8878:353:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 894,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 888,
																"src": "8897:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 897,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8916:1:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8908:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 895,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8908:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 898,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8908:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "8897:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8920:35:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 893,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8889:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8889:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 902,
												"nodeType": "ExpressionStatement",
												"src": "8889:67:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 904,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "8990:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 907,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9007:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8999:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 905,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8999:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8999:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 909,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 890,
															"src": "9011:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 903,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 997,
														"src": "8969:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8969:49:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 911,
												"nodeType": "ExpressionStatement",
												"src": "8969:49:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 912,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "9031:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 914,
														"indexExpression": {
															"argumentTypes": null,
															"id": 913,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "9041:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9031:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 919,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 890,
																"src": "9075:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 920,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9083:36:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																},
																"value": "ERC20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 915,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 526,
																	"src": "9052:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 917,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 916,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 888,
																	"src": "9062:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9052:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1282,
															"src": "9052:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 921,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9052:68:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9031:89:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 923,
												"nodeType": "ExpressionStatement",
												"src": "9031:89:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 924,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "9131:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 927,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 890,
																"src": "9163:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 925,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 534,
																"src": "9146:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 926,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1254,
															"src": "9146:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 928,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9146:24:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9131:39:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 930,
												"nodeType": "ExpressionStatement",
												"src": "9131:39:4"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 932,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "9195:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9212:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 934,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9204:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 933,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9204:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9204:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 937,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 890,
															"src": "9216:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 931,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "9186:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9186:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 939,
												"nodeType": "EmitStatement",
												"src": "9181:42:4"
											}
										]
									},
									"documentation": {
										"id": 886,
										"nodeType": "StructuredDocumentation",
										"src": "8488:319:4",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 941,
												"src": "8828:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 887,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8828:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 941,
												"src": "8845:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8845:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8827:33:4"
									},
									"returnParameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8878:0:4"
									},
									"scope": 998,
									"src": "8813:418:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 985,
										"nodeType": "Block",
										"src": "9786:263:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 957,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 952,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 944,
																"src": "9805:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 955,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9822:1:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 954,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9814:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 953,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9814:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 956,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9814:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9805:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9826:38:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 951,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9797:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9797:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 960,
												"nodeType": "ExpressionStatement",
												"src": "9797:68:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 967,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 962,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 946,
																"src": "9884:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 965,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9903:1:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 964,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9895:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 963,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9895:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 966,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9895:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9884:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9907:36:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 961,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9876:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9876:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 970,
												"nodeType": "ExpressionStatement",
												"src": "9876:68:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 971,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "9957:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 974,
															"indexExpression": {
																"argumentTypes": null,
																"id": 972,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 944,
																"src": "9969:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9957:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 975,
														"indexExpression": {
															"argumentTypes": null,
															"id": 973,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "9976:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9957:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 976,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "9987:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9957:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 978,
												"nodeType": "ExpressionStatement",
												"src": "9957:36:4"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 980,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "10018:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 981,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "10025:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 982,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "10034:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 979,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1075,
														"src": "10009:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10009:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 984,
												"nodeType": "EmitStatement",
												"src": "10004:37:4"
											}
										]
									},
									"documentation": {
										"id": 942,
										"nodeType": "StructuredDocumentation",
										"src": "9239:424:4",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 986,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 986,
												"src": "9697:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 943,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9697:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 986,
												"src": "9721:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 945,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9721:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 986,
												"src": "9747:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9747:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9686:82:4"
									},
									"returnParameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9786:0:4"
									},
									"scope": 998,
									"src": "9669:380:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 996,
										"nodeType": "Block",
										"src": "10775:2:4",
										"statements": []
									},
									"documentation": {
										"id": 987,
										"nodeType": "StructuredDocumentation",
										"src": "10057:589:4",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 997,
												"src": "10692:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10692:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 997,
												"src": "10715:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 990,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10715:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 997,
												"src": "10736:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10736:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10681:76:4"
									},
									"returnParameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10775:0:4"
									},
									"scope": 998,
									"src": "10652:125:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 999,
							"src": "1358:9422:4"
						}
					],
					"src": "35:10747:4"
				},
				"id": 4
			},
			"IERC20.sol": {
				"ast": {
					"absolutePath": "IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1076
						]
					},
					"id": 1077,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1000,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1001,
								"nodeType": "StructuredDocumentation",
								"src": "62:72:5",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1076,
							"linearizedBaseContracts": [
								1076
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 1002,
										"nodeType": "StructuredDocumentation",
										"src": "160:68:5",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1007,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "254:2:5"
									},
									"returnParameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1007,
												"src": "280:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "280:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "279:9:5"
									},
									"scope": 1076,
									"src": "234:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1008,
										"nodeType": "StructuredDocumentation",
										"src": "297:74:5",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1015,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1015,
												"src": "396:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "396:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "395:17:5"
									},
									"returnParameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1015,
												"src": "436:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "436:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "435:9:5"
									},
									"scope": 1076,
									"src": "377:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1016,
										"nodeType": "StructuredDocumentation",
										"src": "453:215:5",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1025,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1025,
												"src": "692:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1017,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "692:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1025,
												"src": "711:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1019,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "711:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "691:35:5"
									},
									"returnParameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1025,
												"src": "745:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1022,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "745:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "744:6:5"
									},
									"scope": 1076,
									"src": "674:77:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1026,
										"nodeType": "StructuredDocumentation",
										"src": "759:270:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1035,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1035,
												"src": "1054:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1035,
												"src": "1069:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1029,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1053:32:5"
									},
									"returnParameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1035,
												"src": "1109:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1109:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1108:9:5"
									},
									"scope": 1076,
									"src": "1035:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1036,
										"nodeType": "StructuredDocumentation",
										"src": "1126:655:5",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1045,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1045,
												"src": "1804:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1804:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1045,
												"src": "1821:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1821:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1803:33:5"
									},
									"returnParameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1045,
												"src": "1855:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1042,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1855:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1854:6:5"
									},
									"scope": 1076,
									"src": "1787:74:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1046,
										"nodeType": "StructuredDocumentation",
										"src": "1869:304:5",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1057,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1057,
												"src": "2211:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1047,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2211:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1057,
												"src": "2236:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1049,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2236:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1057,
												"src": "2264:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2264:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2200:85:5"
									},
									"returnParameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1057,
												"src": "2304:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1054,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2304:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2303:6:5"
									},
									"scope": 1076,
									"src": "2179:131:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1058,
										"nodeType": "StructuredDocumentation",
										"src": "2318:163:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 1066,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1066,
												"src": "2502:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1059,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2502:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1066,
												"src": "2524:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1061,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2524:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1064,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1066,
												"src": "2544:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2544:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2501:57:5"
									},
									"src": "2487:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1067,
										"nodeType": "StructuredDocumentation",
										"src": "2567:151:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 1075,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1075,
												"src": "2739:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1075,
												"src": "2762:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2762:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1075,
												"src": "2787:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2787:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2738:63:5"
									},
									"src": "2724:78:5"
								}
							],
							"scope": 1077,
							"src": "136:2669:5"
						}
					],
					"src": "35:2772:5"
				},
				"id": 5
			},
			"IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20Metadata": [
							1101
						]
					},
					"id": 1102,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1078,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:6"
						},
						{
							"absolutePath": "IERC20.sol",
							"file": "./IERC20.sol",
							"id": 1079,
							"nodeType": "ImportDirective",
							"scope": 1102,
							"sourceUnit": 1077,
							"src": "62:22:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1081,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1076,
										"src": "238:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1076",
											"typeString": "contract IERC20"
										}
									},
									"id": 1082,
									"nodeType": "InheritanceSpecifier",
									"src": "238:6:6"
								}
							],
							"contractDependencies": [
								1076
							],
							"contractKind": "interface",
							"documentation": {
								"id": 1080,
								"nodeType": "StructuredDocumentation",
								"src": "88:120:6",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 1101,
							"linearizedBaseContracts": [
								1101,
								1076
							],
							"name": "IERC20Metadata",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 1083,
										"nodeType": "StructuredDocumentation",
										"src": "252:56:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1088,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "327:2:6"
									},
									"returnParameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1088,
												"src": "353:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1085,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "353:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "352:15:6"
									},
									"scope": 1101,
									"src": "314:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1089,
										"nodeType": "StructuredDocumentation",
										"src": "376:58:6",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1094,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "455:2:6"
									},
									"returnParameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1094,
												"src": "481:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1091,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "481:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "480:15:6"
									},
									"scope": 1101,
									"src": "440:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1095,
										"nodeType": "StructuredDocumentation",
										"src": "504:67:6",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1100,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "594:2:6"
									},
									"returnParameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1100,
												"src": "620:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1097,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "620:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "619:7:6"
									},
									"scope": 1101,
									"src": "577:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1102,
							"src": "210:420:6"
						}
					],
					"src": "35:597:6"
				},
				"id": 6
			},
			"Ownable.sol": {
				"ast": {
					"absolutePath": "Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							1209
						]
					},
					"id": 1210,
					"license": "MIT License",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1103,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:7"
						},
						{
							"absolutePath": "Context.sol",
							"file": "./Context.sol",
							"id": 1104,
							"nodeType": "ImportDirective",
							"scope": 1210,
							"sourceUnit": 23,
							"src": "70:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1105,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 22,
										"src": "117:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$22",
											"typeString": "contract Context"
										}
									},
									"id": 1106,
									"nodeType": "InheritanceSpecifier",
									"src": "117:7:7"
								}
							],
							"contractDependencies": [
								22
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1209,
							"linearizedBaseContracts": [
								1209,
								22
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1108,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1209,
									"src": "132:22:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1107,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "132:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1114,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1114,
												"src": "190:29:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "190:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1112,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1114,
												"src": "221:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "221:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "189:57:7"
									},
									"src": "163:84:7"
								},
								{
									"body": {
										"id": 1135,
										"nodeType": "Block",
										"src": "376:139:7",
										"statements": [
											{
												"assignments": [
													1119
												],
												"declarations": [
													{
														"constant": false,
														"id": 1119,
														"mutability": "mutable",
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1135,
														"src": "387:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1118,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "387:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1122,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1120,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "407:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "407:12:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "387:32:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1123,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1108,
														"src": "430:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1124,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1119,
														"src": "439:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "430:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1126,
												"nodeType": "ExpressionStatement",
												"src": "430:18:7"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "493:1:7",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1129,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "485:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1128,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "485:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1131,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "485:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1132,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1119,
															"src": "497:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1127,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1114,
														"src": "464:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "464:43:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1134,
												"nodeType": "EmitStatement",
												"src": "459:48:7"
											}
										]
									},
									"documentation": {
										"id": 1115,
										"nodeType": "StructuredDocumentation",
										"src": "255:93:7",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 1136,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "366:2:7"
									},
									"returnParameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "376:0:7"
									},
									"scope": 1209,
									"src": "354:161:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1144,
										"nodeType": "Block",
										"src": "643:32:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1142,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1108,
													"src": "661:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1141,
												"id": 1143,
												"nodeType": "Return",
												"src": "654:13:7"
											}
										]
									},
									"documentation": {
										"id": 1137,
										"nodeType": "StructuredDocumentation",
										"src": "523:67:7",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "610:2:7"
									},
									"returnParameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1145,
												"src": "634:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "633:9:7"
									},
									"scope": 1209,
									"src": "596:79:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1157,
										"nodeType": "Block",
										"src": "789:98:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1149,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1108,
																"src": "808:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1150,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "818:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "818:12:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "808:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1153,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "832:34:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 1148,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "800:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "800:67:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1155,
												"nodeType": "ExpressionStatement",
												"src": "800:67:7"
											},
											{
												"id": 1156,
												"nodeType": "PlaceholderStatement",
												"src": "878:1:7"
											}
										]
									},
									"documentation": {
										"id": 1146,
										"nodeType": "StructuredDocumentation",
										"src": "683:79:7",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1158,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "786:2:7"
									},
									"src": "768:119:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1179,
										"nodeType": "Block",
										"src": "1292:94:7",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1165,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1108,
															"src": "1329:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1345:1:7",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1167,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1337:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1166,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1337:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1169,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1337:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1164,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1114,
														"src": "1308:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1308:40:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1171,
												"nodeType": "EmitStatement",
												"src": "1303:45:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1172,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1108,
														"src": "1359:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1175,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1376:1:7",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1174,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1368:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1173,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1368:7:7",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 1176,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1368:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1359:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1178,
												"nodeType": "ExpressionStatement",
												"src": "1359:19:7"
											}
										]
									},
									"documentation": {
										"id": 1159,
										"nodeType": "StructuredDocumentation",
										"src": "895:337:7",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 1180,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1162,
											"modifierName": {
												"argumentTypes": null,
												"id": 1161,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1158,
												"src": "1282:9:7",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1282:9:7"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1264:2:7"
									},
									"returnParameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1292:0:7"
									},
									"scope": 1209,
									"src": "1238:148:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1207,
										"nodeType": "Block",
										"src": "1611:174:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1189,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1183,
																"src": "1630:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1650:1:7",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1191,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1642:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1190,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1642:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1642:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1630:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 1195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1654:40:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 1188,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1622:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1622:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1197,
												"nodeType": "ExpressionStatement",
												"src": "1622:73:7"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1199,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1108,
															"src": "1732:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1200,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1183,
															"src": "1740:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1198,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1114,
														"src": "1711:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1711:38:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1202,
												"nodeType": "EmitStatement",
												"src": "1706:43:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1203,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1108,
														"src": "1760:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1204,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1183,
														"src": "1769:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1760:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1206,
												"nodeType": "ExpressionStatement",
												"src": "1760:17:7"
											}
										]
									},
									"documentation": {
										"id": 1181,
										"nodeType": "StructuredDocumentation",
										"src": "1394:141:7",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 1208,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1186,
											"modifierName": {
												"argumentTypes": null,
												"id": 1185,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1158,
												"src": "1601:9:7",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1601:9:7"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1208,
												"src": "1568:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1567:18:7"
									},
									"returnParameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1611:0:7"
									},
									"scope": 1209,
									"src": "1541:244:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1210,
							"src": "97:1691:7"
						}
					],
					"src": "0:1790:7"
				},
				"id": 7
			},
			"SafeMath.sol": {
				"ast": {
					"absolutePath": "SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1404
						]
					},
					"id": 1405,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1211,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1404,
							"linearizedBaseContracts": [
								1404
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1236,
										"nodeType": "Block",
										"src": "392:114:8",
										"statements": [
											{
												"assignments": [
													1222
												],
												"declarations": [
													{
														"constant": false,
														"id": 1222,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1236,
														"src": "403:9:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1221,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "403:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1226,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1223,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1214,
														"src": "415:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1224,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1216,
														"src": "419:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "415:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "403:17:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1228,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1222,
																"src": "439:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1229,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1214,
																"src": "444:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "439:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 1231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "447:29:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 1227,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "431:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "431:46:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1233,
												"nodeType": "ExpressionStatement",
												"src": "431:46:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1234,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1222,
													"src": "497:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1220,
												"id": 1235,
												"nodeType": "Return",
												"src": "490:8:8"
											}
										]
									},
									"documentation": {
										"id": 1212,
										"nodeType": "StructuredDocumentation",
										"src": "86:233:8",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1237,
												"src": "338:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "338:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1237,
												"src": "349:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "337:22:8"
									},
									"returnParameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1237,
												"src": "383:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "383:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "382:9:8"
									},
									"scope": 1404,
									"src": "325:181:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1253,
										"nodeType": "Block",
										"src": "856:69:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1248,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1240,
															"src": "878:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1249,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1242,
															"src": "881:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 1250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "884:32:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 1247,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1254,
															1282
														],
														"referencedDeclaration": 1282,
														"src": "874:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "874:43:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1246,
												"id": 1252,
												"nodeType": "Return",
												"src": "867:50:8"
											}
										]
									},
									"documentation": {
										"id": 1238,
										"nodeType": "StructuredDocumentation",
										"src": "514:269:8",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1254,
												"src": "802:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "802:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1254,
												"src": "813:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "813:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "801:22:8"
									},
									"returnParameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1254,
												"src": "847:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "847:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "846:9:8"
									},
									"scope": 1404,
									"src": "789:136:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1281,
										"nodeType": "Block",
										"src": "1323:97:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1267,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1259,
																"src": "1342:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1268,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1257,
																"src": "1347:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1342:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1270,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1261,
															"src": "1350:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1266,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1334:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1334:29:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1272,
												"nodeType": "ExpressionStatement",
												"src": "1334:29:8"
											},
											{
												"assignments": [
													1274
												],
												"declarations": [
													{
														"constant": false,
														"id": 1274,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1281,
														"src": "1374:9:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1273,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1374:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1278,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1275,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1257,
														"src": "1386:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1276,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1259,
														"src": "1390:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1386:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1374:17:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1279,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1274,
													"src": "1411:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1265,
												"id": 1280,
												"nodeType": "Return",
												"src": "1404:8:8"
											}
										]
									},
									"documentation": {
										"id": 1255,
										"nodeType": "StructuredDocumentation",
										"src": "933:289:8",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1282,
												"src": "1241:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1241:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1282,
												"src": "1252:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1282,
												"src": "1263:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1260,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1263:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1240:50:8"
									},
									"returnParameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1282,
												"src": "1314:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1314:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1313:9:8"
									},
									"scope": 1404,
									"src": "1228:192:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1316,
										"nodeType": "Block",
										"src": "1746:404:8",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1292,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1285,
														"src": "1982:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1293,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1987:1:8",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1982:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1298,
												"nodeType": "IfStatement",
												"src": "1978:47:8",
												"trueBody": {
													"id": 1297,
													"nodeType": "Block",
													"src": "1990:35:8",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1295,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2012:1:8",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1291,
															"id": 1296,
															"nodeType": "Return",
															"src": "2005:8:8"
														}
													]
												}
											},
											{
												"assignments": [
													1300
												],
												"declarations": [
													{
														"constant": false,
														"id": 1300,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1316,
														"src": "2037:9:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1299,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2037:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1304,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1301,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1285,
														"src": "2049:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1302,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1287,
														"src": "2053:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2049:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2037:17:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1308,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1306,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1300,
																	"src": "2073:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1307,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1285,
																	"src": "2077:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2073:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1309,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1287,
																"src": "2082:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2073:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 1311,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2085:35:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 1305,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2065:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2065:56:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1313,
												"nodeType": "ExpressionStatement",
												"src": "2065:56:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1314,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1300,
													"src": "2141:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1291,
												"id": 1315,
												"nodeType": "Return",
												"src": "2134:8:8"
											}
										]
									},
									"documentation": {
										"id": 1283,
										"nodeType": "StructuredDocumentation",
										"src": "1428:245:8",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1317,
												"src": "1692:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1692:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1317,
												"src": "1703:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1703:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1691:22:8"
									},
									"returnParameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1317,
												"src": "1737:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1737:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1736:9:8"
									},
									"scope": 1404,
									"src": "1679:471:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1333,
										"nodeType": "Block",
										"src": "2693:65:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1328,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1320,
															"src": "2715:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1329,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1322,
															"src": "2718:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 1330,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2721:28:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 1327,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1334,
															1362
														],
														"referencedDeclaration": 1362,
														"src": "2711:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2711:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1326,
												"id": 1332,
												"nodeType": "Return",
												"src": "2704:46:8"
											}
										]
									},
									"documentation": {
										"id": 1318,
										"nodeType": "StructuredDocumentation",
										"src": "2158:462:8",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1334,
												"src": "2639:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2639:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1334,
												"src": "2650:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2650:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2638:22:8"
									},
									"returnParameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1334,
												"src": "2684:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2684:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2683:9:8"
									},
									"scope": 1404,
									"src": "2626:132:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1361,
										"nodeType": "Block",
										"src": "3349:183:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1347,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1339,
																"src": "3368:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1348,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3372:1:8",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3368:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1350,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1341,
															"src": "3375:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1346,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3360:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3360:28:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1352,
												"nodeType": "ExpressionStatement",
												"src": "3360:28:8"
											},
											{
												"assignments": [
													1354
												],
												"declarations": [
													{
														"constant": false,
														"id": 1354,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1361,
														"src": "3399:9:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1353,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3399:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1358,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1355,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1337,
														"src": "3411:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1356,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1339,
														"src": "3415:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3411:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3399:17:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1359,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1354,
													"src": "3523:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1345,
												"id": 1360,
												"nodeType": "Return",
												"src": "3516:8:8"
											}
										]
									},
									"documentation": {
										"id": 1335,
										"nodeType": "StructuredDocumentation",
										"src": "2766:482:8",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1362,
												"src": "3267:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3267:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1362,
												"src": "3278:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3278:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1362,
												"src": "3289:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1340,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3289:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3266:50:8"
									},
									"returnParameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1362,
												"src": "3340:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3339:9:8"
									},
									"scope": 1404,
									"src": "3254:278:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1378,
										"nodeType": "Block",
										"src": "4064:63:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1373,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1365,
															"src": "4086:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1374,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1367,
															"src": "4089:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 1375,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4092:26:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 1372,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1379,
															1403
														],
														"referencedDeclaration": 1403,
														"src": "4082:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4082:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1371,
												"id": 1377,
												"nodeType": "Return",
												"src": "4075:44:8"
											}
										]
									},
									"documentation": {
										"id": 1363,
										"nodeType": "StructuredDocumentation",
										"src": "3540:451:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1379,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1379,
												"src": "4010:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4010:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1379,
												"src": "4021:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4021:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4009:22:8"
									},
									"returnParameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1379,
												"src": "4055:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4055:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4054:9:8"
									},
									"scope": 1404,
									"src": "3997:130:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1402,
										"nodeType": "Block",
										"src": "4707:71:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1392,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1384,
																"src": "4726:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1393,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4731:1:8",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4726:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1395,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "4734:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1391,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4718:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4718:29:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1397,
												"nodeType": "ExpressionStatement",
												"src": "4718:29:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1398,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1382,
														"src": "4765:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1399,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1384,
														"src": "4769:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4765:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1390,
												"id": 1401,
												"nodeType": "Return",
												"src": "4758:12:8"
											}
										]
									},
									"documentation": {
										"id": 1380,
										"nodeType": "StructuredDocumentation",
										"src": "4135:471:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1403,
												"src": "4625:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4625:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1403,
												"src": "4636:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4636:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1403,
												"src": "4647:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1385,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4647:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4624:50:8"
									},
									"returnParameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1403,
												"src": "4698:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4698:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4697:9:8"
									},
									"scope": 1404,
									"src": "4612:166:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1405,
							"src": "62:4719:8"
						}
					],
					"src": "35:4748:8"
				},
				"id": 8
			},
			"SafeMathInt.sol": {
				"ast": {
					"absolutePath": "SafeMathInt.sol",
					"exportedSymbols": {
						"SafeMathInt": [
							1621
						]
					},
					"id": 1622,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1406,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "1173:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1407,
								"nodeType": "StructuredDocumentation",
								"src": "1200:96:9",
								"text": " @title SafeMathInt\n @dev Math operations for int256 with overflow safety checks."
							},
							"fullyImplemented": true,
							"id": 1621,
							"linearizedBaseContracts": [
								1621
							],
							"name": "SafeMathInt",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1415,
									"mutability": "constant",
									"name": "MIN_INT256",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1621,
									"src": "1325:53:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 1408,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "1325:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"id": 1414,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"arguments": [
												{
													"argumentTypes": null,
													"hexValue": "31",
													"id": 1411,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1369:1:9",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													}
												],
												"id": 1410,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "1362:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_int256_$",
													"typeString": "type(int256)"
												},
												"typeName": {
													"id": 1409,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1362:6:9",
													"typeDescriptions": {
														"typeIdentifier": null,
														"typeString": null
													}
												}
											},
											"id": 1412,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "1362:9:9",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "323535",
											"id": 1413,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1375:3:9",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_255_by_1",
												"typeString": "int_const 255"
											},
											"value": "255"
										},
										"src": "1362:16:9",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1425,
									"mutability": "constant",
									"name": "MAX_INT256",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1621,
									"src": "1385:56:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 1416,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "1385:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"value": {
										"argumentTypes": null,
										"id": 1424,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "~",
										"prefix": true,
										"src": "1422:19:9",
										"subExpression": {
											"argumentTypes": null,
											"components": [
												{
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1422,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "31",
																"id": 1419,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1431:1:9",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"id": 1418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1424:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 1417,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "1424:6:9",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 1420,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1424:9:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "323535",
														"id": 1421,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1437:3:9",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255_by_1",
															"typeString": "int_const 255"
														},
														"value": "255"
													},
													"src": "1424:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												}
											],
											"id": 1423,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1423:18:9",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1473,
										"nodeType": "Block",
										"src": "1600:239:9",
										"statements": [
											{
												"assignments": [
													1436
												],
												"declarations": [
													{
														"constant": false,
														"id": 1436,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1473,
														"src": "1611:8:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1435,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "1611:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1440,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1437,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1428,
														"src": "1622:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1438,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1430,
														"src": "1626:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "1622:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1611:16:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1444,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1442,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1436,
																	"src": "1712:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1443,
																	"name": "MIN_INT256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1415,
																	"src": "1717:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "1712:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1447,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1445,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1428,
																				"src": "1732:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1446,
																				"name": "MIN_INT256",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1415,
																				"src": "1736:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "1732:14:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1448,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1731:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1451,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1449,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1430,
																				"src": "1752:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1450,
																				"name": "MIN_INT256",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1415,
																				"src": "1756:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "1752:14:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1452,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1751:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "1731:36:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1712:55:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1441,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1704:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1704:64:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1456,
												"nodeType": "ExpressionStatement",
												"src": "1704:64:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1460,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1458,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1430,
																			"src": "1788:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1459,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1793:1:9",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1788:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1461,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1787:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1466,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1464,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1462,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1436,
																				"src": "1800:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1463,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1430,
																				"src": "1804:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "1800:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 1465,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1428,
																			"src": "1809:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"src": "1800:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1467,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1799:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1787:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1457,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1779:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1779:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1470,
												"nodeType": "ExpressionStatement",
												"src": "1779:33:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1471,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1436,
													"src": "1830:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1434,
												"id": 1472,
												"nodeType": "Return",
												"src": "1823:8:9"
											}
										]
									},
									"documentation": {
										"id": 1426,
										"nodeType": "StructuredDocumentation",
										"src": "1450:80:9",
										"text": " @dev Multiplies two int256 variables and fails on overflow."
									},
									"id": 1474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1474,
												"src": "1549:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1427,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1549:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1474,
												"src": "1559:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1429,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1559:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1548:20:9"
									},
									"returnParameters": {
										"id": 1434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1474,
												"src": "1592:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1432,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1592:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1591:8:9"
									},
									"scope": 1621,
									"src": "1536:303:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1499,
										"nodeType": "Block",
										"src": "1998:195:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1488,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1485,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1479,
																	"src": "2077:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "-",
																	"prefix": true,
																	"src": "2082:2:9",
																	"subExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 1486,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2083:1:9",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_minus_1_by_1",
																		"typeString": "int_const -1"
																	}
																},
																"src": "2077:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1491,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1489,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1477,
																	"src": "2088:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1490,
																	"name": "MIN_INT256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1415,
																	"src": "2093:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "2088:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2077:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1484,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2069:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2069:35:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1494,
												"nodeType": "ExpressionStatement",
												"src": "2069:35:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1495,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1477,
														"src": "2180:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1496,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1479,
														"src": "2184:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "2180:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1483,
												"id": 1498,
												"nodeType": "Return",
												"src": "2173:12:9"
											}
										]
									},
									"documentation": {
										"id": 1475,
										"nodeType": "StructuredDocumentation",
										"src": "1847:81:9",
										"text": " @dev Division of two int256 variables and fails on overflow."
									},
									"id": 1500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1500,
												"src": "1947:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1476,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1947:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1500,
												"src": "1957:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1478,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1957:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1946:20:9"
									},
									"returnParameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1500,
												"src": "1990:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1481,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1990:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1989:8:9"
									},
									"scope": 1621,
									"src": "1934:259:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1538,
										"nodeType": "Block",
										"src": "2350:112:9",
										"statements": [
											{
												"assignments": [
													1511
												],
												"declarations": [
													{
														"constant": false,
														"id": 1511,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1538,
														"src": "2361:8:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1510,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "2361:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1515,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1512,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1503,
														"src": "2372:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1513,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1505,
														"src": "2376:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "2372:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2361:16:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1519,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1517,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1505,
																				"src": "2397:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 1518,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2402:1:9",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2397:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1522,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1520,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1511,
																				"src": "2407:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1521,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1503,
																				"src": "2412:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "2407:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2397:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1524,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2396:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1527,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1525,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1505,
																				"src": "2419:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 1526,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2423:1:9",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2419:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1528,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1511,
																				"src": "2428:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1529,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1503,
																				"src": "2432:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "2428:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2419:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1532,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2418:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2396:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1516,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2388:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2388:47:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1535,
												"nodeType": "ExpressionStatement",
												"src": "2388:47:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1536,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1511,
													"src": "2453:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1509,
												"id": 1537,
												"nodeType": "Return",
												"src": "2446:8:9"
											}
										]
									},
									"documentation": {
										"id": 1501,
										"nodeType": "StructuredDocumentation",
										"src": "2201:79:9",
										"text": " @dev Subtracts two int256 variables and fails on overflow."
									},
									"id": 1539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1539,
												"src": "2299:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1502,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2299:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1539,
												"src": "2309:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1504,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2309:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2298:20:9"
									},
									"returnParameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1539,
												"src": "2342:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1507,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2341:8:9"
									},
									"scope": 1621,
									"src": "2286:176:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1577,
										"nodeType": "Block",
										"src": "2614:112:9",
										"statements": [
											{
												"assignments": [
													1550
												],
												"declarations": [
													{
														"constant": false,
														"id": 1550,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1577,
														"src": "2625:8:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1549,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "2625:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1554,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1551,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1542,
														"src": "2636:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1552,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1544,
														"src": "2640:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "2636:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2625:16:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1562,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1558,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1556,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1544,
																				"src": "2661:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 1557,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2666:1:9",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2661:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1561,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1559,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1550,
																				"src": "2671:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1560,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1542,
																				"src": "2676:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "2671:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2661:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1563,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2660:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1570,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1566,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1564,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1544,
																				"src": "2683:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 1565,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2687:1:9",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2683:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1569,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1567,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1550,
																				"src": "2692:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1568,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1542,
																				"src": "2696:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "2692:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2683:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1571,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2682:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2660:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1555,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2652:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2652:47:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1574,
												"nodeType": "ExpressionStatement",
												"src": "2652:47:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1575,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1550,
													"src": "2717:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1548,
												"id": 1576,
												"nodeType": "Return",
												"src": "2710:8:9"
											}
										]
									},
									"documentation": {
										"id": 1540,
										"nodeType": "StructuredDocumentation",
										"src": "2470:74:9",
										"text": " @dev Adds two int256 variables and fails on overflow."
									},
									"id": 1578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1578,
												"src": "2563:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1541,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2563:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1578,
												"src": "2573:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1543,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2573:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2562:20:9"
									},
									"returnParameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1578,
												"src": "2606:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1546,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2606:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2605:8:9"
									},
									"scope": 1621,
									"src": "2550:176:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1600,
										"nodeType": "Block",
										"src": "2870:75:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 1589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1587,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1581,
																"src": "2889:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1588,
																"name": "MIN_INT256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1415,
																"src": "2894:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "2889:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1586,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2881:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2881:24:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1591,
												"nodeType": "ExpressionStatement",
												"src": "2881:24:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1592,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1581,
															"src": "2923:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1593,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2927:1:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2923:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"id": 1597,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1581,
														"src": "2936:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2923:14:9",
													"trueExpression": {
														"argumentTypes": null,
														"id": 1596,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "-",
														"prefix": true,
														"src": "2931:2:9",
														"subExpression": {
															"argumentTypes": null,
															"id": 1595,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1581,
															"src": "2932:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1585,
												"id": 1599,
												"nodeType": "Return",
												"src": "2916:21:9"
											}
										]
									},
									"documentation": {
										"id": 1579,
										"nodeType": "StructuredDocumentation",
										"src": "2734:76:9",
										"text": " @dev Converts to absolute value, and fails on overflow."
									},
									"id": 1601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1601,
												"src": "2829:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1580,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2829:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2828:10:9"
									},
									"returnParameters": {
										"id": 1585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1601,
												"src": "2862:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1583,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2862:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2861:8:9"
									},
									"scope": 1621,
									"src": "2816:129:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1619,
										"nodeType": "Block",
										"src": "3020:62:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 1611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1609,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1603,
																"src": "3039:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1610,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3044:1:9",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3039:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1608,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3031:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3031:15:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1613,
												"nodeType": "ExpressionStatement",
												"src": "3031:15:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1616,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1603,
															"src": "3072:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1615,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3064:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1614,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3064:7:9",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3064:10:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1607,
												"id": 1618,
												"nodeType": "Return",
												"src": "3057:17:9"
											}
										]
									},
									"documentation": null,
									"id": 1620,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint256Safe",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1620,
												"src": "2978:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1602,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2978:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2977:10:9"
									},
									"returnParameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1620,
												"src": "3011:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3011:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3010:9:9"
									},
									"scope": 1621,
									"src": "2955:127:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1622,
							"src": "1298:1787:9"
						}
					],
					"src": "1173:1914:9"
				},
				"id": 9
			},
			"SafeMathUint.sol": {
				"ast": {
					"absolutePath": "SafeMathUint.sol",
					"exportedSymbols": {
						"SafeMathUint": [
							1648
						]
					},
					"id": 1649,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1623,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1624,
								"nodeType": "StructuredDocumentation",
								"src": "62:97:10",
								"text": " @title SafeMathUint\n @dev Math operations with safety checks that revert on error"
							},
							"fullyImplemented": true,
							"id": 1648,
							"linearizedBaseContracts": [
								1648
							],
							"name": "SafeMathUint",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1646,
										"nodeType": "Block",
										"src": "251:70:10",
										"statements": [
											{
												"assignments": [
													1632
												],
												"declarations": [
													{
														"constant": false,
														"id": 1632,
														"mutability": "mutable",
														"name": "b",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1646,
														"src": "258:8:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1631,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "258:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1637,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1635,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1626,
															"src": "276:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1634,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "269:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int256_$",
															"typeString": "type(int256)"
														},
														"typeName": {
															"id": 1633,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "269:6:10",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "269:9:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "258:20:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 1641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1639,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1632,
																"src": "293:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1640,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "298:1:10",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "293:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1638,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "285:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "285:15:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1643,
												"nodeType": "ExpressionStatement",
												"src": "285:15:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1644,
													"name": "b",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1632,
													"src": "314:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1630,
												"id": 1645,
												"nodeType": "Return",
												"src": "307:8:10"
											}
										]
									},
									"documentation": null,
									"id": 1647,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt256Safe",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1647,
												"src": "209:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "209:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "208:11:10"
									},
									"returnParameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1647,
												"src": "243:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1628,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "243:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "242:8:10"
									},
									"scope": 1648,
									"src": "187:134:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1649,
							"src": "161:163:10"
						}
					],
					"src": "35:291:10"
				},
				"id": 10
			}
		}
	}
}